[
  {
    "filename": "summarize-call-zoom-crm.json",
    "title": "Summarize call from Zoom and send to CRM",
    "description": "Automate the task to summarize call originating from Zoom and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-zoom-slack.json",
    "title": "Summarize call from Zoom and send to Slack",
    "description": "Automate the task to summarize call originating from Zoom and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-zoom-notion.json",
    "title": "Summarize call from Zoom and send to Notion",
    "description": "Automate the task to summarize call originating from Zoom and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-zoom-google-sheets.json",
    "title": "Summarize call from Zoom and send to Google Sheets",
    "description": "Automate the task to summarize call originating from Zoom and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-zoom-salesforce.json",
    "title": "Summarize call from Zoom and send to Salesforce",
    "description": "Automate the task to summarize call originating from Zoom and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-zoom-trello-card.json",
    "title": "Summarize call from Zoom and send to Trello card",
    "description": "Automate the task to summarize call originating from Zoom and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-zoom-marketing-team.json",
    "title": "Summarize call from Zoom and send to Marketing team",
    "description": "Automate the task to summarize call originating from Zoom and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-zoom-email.json",
    "title": "Summarize call from Zoom and send to Email",
    "description": "Automate the task to summarize call originating from Zoom and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-zoom-crm.json",
    "title": "Summarize chat from Zoom and send to CRM",
    "description": "Automate the task to summarize chat originating from Zoom and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-zoom-slack.json",
    "title": "Summarize chat from Zoom and send to Slack",
    "description": "Automate the task to summarize chat originating from Zoom and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-zoom-notion.json",
    "title": "Summarize chat from Zoom and send to Notion",
    "description": "Automate the task to summarize chat originating from Zoom and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-zoom-google-sheets.json",
    "title": "Summarize chat from Zoom and send to Google Sheets",
    "description": "Automate the task to summarize chat originating from Zoom and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-zoom-salesforce.json",
    "title": "Summarize chat from Zoom and send to Salesforce",
    "description": "Automate the task to summarize chat originating from Zoom and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-zoom-trello-card.json",
    "title": "Summarize chat from Zoom and send to Trello card",
    "description": "Automate the task to summarize chat originating from Zoom and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-zoom-marketing-team.json",
    "title": "Summarize chat from Zoom and send to Marketing team",
    "description": "Automate the task to summarize chat originating from Zoom and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-zoom-email.json",
    "title": "Summarize chat from Zoom and send to Email",
    "description": "Automate the task to summarize chat originating from Zoom and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-zoom-crm.json",
    "title": "Draft email response from Zoom and send to CRM",
    "description": "Automate the task to draft email response originating from Zoom and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-zoom-slack.json",
    "title": "Draft email response from Zoom and send to Slack",
    "description": "Automate the task to draft email response originating from Zoom and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-zoom-notion.json",
    "title": "Draft email response from Zoom and send to Notion",
    "description": "Automate the task to draft email response originating from Zoom and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-zoom-google-sheets.json",
    "title": "Draft email response from Zoom and send to Google Sheets",
    "description": "Automate the task to draft email response originating from Zoom and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-zoom-salesforce.json",
    "title": "Draft email response from Zoom and send to Salesforce",
    "description": "Automate the task to draft email response originating from Zoom and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-zoom-trello-card.json",
    "title": "Draft email response from Zoom and send to Trello card",
    "description": "Automate the task to draft email response originating from Zoom and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-zoom-marketing-team.json",
    "title": "Draft email response from Zoom and send to Marketing team",
    "description": "Automate the task to draft email response originating from Zoom and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-zoom-email.json",
    "title": "Draft email response from Zoom and send to Email",
    "description": "Automate the task to draft email response originating from Zoom and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-zoom-crm.json",
    "title": "Generate meeting minutes from Zoom and send to CRM",
    "description": "Automate the task to generate meeting minutes originating from Zoom and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-zoom-slack.json",
    "title": "Generate meeting minutes from Zoom and send to Slack",
    "description": "Automate the task to generate meeting minutes originating from Zoom and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-zoom-notion.json",
    "title": "Generate meeting minutes from Zoom and send to Notion",
    "description": "Automate the task to generate meeting minutes originating from Zoom and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-zoom-google-sheets.json",
    "title": "Generate meeting minutes from Zoom and send to Google Sheets",
    "description": "Automate the task to generate meeting minutes originating from Zoom and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-zoom-salesforce.json",
    "title": "Generate meeting minutes from Zoom and send to Salesforce",
    "description": "Automate the task to generate meeting minutes originating from Zoom and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-zoom-trello-card.json",
    "title": "Generate meeting minutes from Zoom and send to Trello card",
    "description": "Automate the task to generate meeting minutes originating from Zoom and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-zoom-marketing-team.json",
    "title": "Generate meeting minutes from Zoom and send to Marketing team",
    "description": "Automate the task to generate meeting minutes originating from Zoom and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-zoom-email.json",
    "title": "Generate meeting minutes from Zoom and send to Email",
    "description": "Automate the task to generate meeting minutes originating from Zoom and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-zoom-crm.json",
    "title": "Translate meeting transcript from Zoom and send to CRM",
    "description": "Automate the task to translate meeting transcript originating from Zoom and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-zoom-slack.json",
    "title": "Translate meeting transcript from Zoom and send to Slack",
    "description": "Automate the task to translate meeting transcript originating from Zoom and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-zoom-notion.json",
    "title": "Translate meeting transcript from Zoom and send to Notion",
    "description": "Automate the task to translate meeting transcript originating from Zoom and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-zoom-google-sheets.json",
    "title": "Translate meeting transcript from Zoom and send to Google Sheets",
    "description": "Automate the task to translate meeting transcript originating from Zoom and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-zoom-salesforce.json",
    "title": "Translate meeting transcript from Zoom and send to Salesforce",
    "description": "Automate the task to translate meeting transcript originating from Zoom and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-zoom-trello-card.json",
    "title": "Translate meeting transcript from Zoom and send to Trello card",
    "description": "Automate the task to translate meeting transcript originating from Zoom and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-zoom-marketing-team.json",
    "title": "Translate meeting transcript from Zoom and send to Marketing team",
    "description": "Automate the task to translate meeting transcript originating from Zoom and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-zoom-email.json",
    "title": "Translate meeting transcript from Zoom and send to Email",
    "description": "Automate the task to translate meeting transcript originating from Zoom and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-zoom-crm.json",
    "title": "Analyze meeting sentiment from Zoom and send to CRM",
    "description": "Automate the task to analyze meeting sentiment originating from Zoom and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-zoom-slack.json",
    "title": "Analyze meeting sentiment from Zoom and send to Slack",
    "description": "Automate the task to analyze meeting sentiment originating from Zoom and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-zoom-notion.json",
    "title": "Analyze meeting sentiment from Zoom and send to Notion",
    "description": "Automate the task to analyze meeting sentiment originating from Zoom and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-zoom-google-sheets.json",
    "title": "Analyze meeting sentiment from Zoom and send to Google Sheets",
    "description": "Automate the task to analyze meeting sentiment originating from Zoom and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-zoom-salesforce.json",
    "title": "Analyze meeting sentiment from Zoom and send to Salesforce",
    "description": "Automate the task to analyze meeting sentiment originating from Zoom and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-zoom-trello-card.json",
    "title": "Analyze meeting sentiment from Zoom and send to Trello card",
    "description": "Automate the task to analyze meeting sentiment originating from Zoom and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-zoom-marketing-team.json",
    "title": "Analyze meeting sentiment from Zoom and send to Marketing team",
    "description": "Automate the task to analyze meeting sentiment originating from Zoom and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-zoom-email.json",
    "title": "Analyze meeting sentiment from Zoom and send to Email",
    "description": "Automate the task to analyze meeting sentiment originating from Zoom and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-zoom-crm.json",
    "title": "Classify action items from Zoom and send to CRM",
    "description": "Automate the task to classify action items originating from Zoom and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-zoom-slack.json",
    "title": "Classify action items from Zoom and send to Slack",
    "description": "Automate the task to classify action items originating from Zoom and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-zoom-notion.json",
    "title": "Classify action items from Zoom and send to Notion",
    "description": "Automate the task to classify action items originating from Zoom and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-zoom-google-sheets.json",
    "title": "Classify action items from Zoom and send to Google Sheets",
    "description": "Automate the task to classify action items originating from Zoom and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-zoom-salesforce.json",
    "title": "Classify action items from Zoom and send to Salesforce",
    "description": "Automate the task to classify action items originating from Zoom and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-zoom-trello-card.json",
    "title": "Classify action items from Zoom and send to Trello card",
    "description": "Automate the task to classify action items originating from Zoom and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-zoom-marketing-team.json",
    "title": "Classify action items from Zoom and send to Marketing team",
    "description": "Automate the task to classify action items originating from Zoom and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-zoom-email.json",
    "title": "Classify action items from Zoom and send to Email",
    "description": "Automate the task to classify action items originating from Zoom and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-zoom-crm.json",
    "title": "Extract key decisions from Zoom and send to CRM",
    "description": "Automate the task to extract key decisions originating from Zoom and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-zoom-slack.json",
    "title": "Extract key decisions from Zoom and send to Slack",
    "description": "Automate the task to extract key decisions originating from Zoom and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-zoom-notion.json",
    "title": "Extract key decisions from Zoom and send to Notion",
    "description": "Automate the task to extract key decisions originating from Zoom and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-zoom-google-sheets.json",
    "title": "Extract key decisions from Zoom and send to Google Sheets",
    "description": "Automate the task to extract key decisions originating from Zoom and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-zoom-salesforce.json",
    "title": "Extract key decisions from Zoom and send to Salesforce",
    "description": "Automate the task to extract key decisions originating from Zoom and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-zoom-trello-card.json",
    "title": "Extract key decisions from Zoom and send to Trello card",
    "description": "Automate the task to extract key decisions originating from Zoom and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-zoom-marketing-team.json",
    "title": "Extract key decisions from Zoom and send to Marketing team",
    "description": "Automate the task to extract key decisions originating from Zoom and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-zoom-email.json",
    "title": "Extract key decisions from Zoom and send to Email",
    "description": "Automate the task to extract key decisions originating from Zoom and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-zoom-crm.json",
    "title": "Generate blog outline from Zoom and send to CRM",
    "description": "Automate the task to generate blog outline originating from Zoom and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-zoom-slack.json",
    "title": "Generate blog outline from Zoom and send to Slack",
    "description": "Automate the task to generate blog outline originating from Zoom and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-zoom-notion.json",
    "title": "Generate blog outline from Zoom and send to Notion",
    "description": "Automate the task to generate blog outline originating from Zoom and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-zoom-google-sheets.json",
    "title": "Generate blog outline from Zoom and send to Google Sheets",
    "description": "Automate the task to generate blog outline originating from Zoom and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-zoom-salesforce.json",
    "title": "Generate blog outline from Zoom and send to Salesforce",
    "description": "Automate the task to generate blog outline originating from Zoom and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-zoom-trello-card.json",
    "title": "Generate blog outline from Zoom and send to Trello card",
    "description": "Automate the task to generate blog outline originating from Zoom and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-zoom-marketing-team.json",
    "title": "Generate blog outline from Zoom and send to Marketing team",
    "description": "Automate the task to generate blog outline originating from Zoom and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-zoom-email.json",
    "title": "Generate blog outline from Zoom and send to Email",
    "description": "Automate the task to generate blog outline originating from Zoom and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-zoom-crm.json",
    "title": "Generate ad copy from Zoom and send to CRM",
    "description": "Automate the task to generate ad copy originating from Zoom and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-zoom-slack.json",
    "title": "Generate ad copy from Zoom and send to Slack",
    "description": "Automate the task to generate ad copy originating from Zoom and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-zoom-notion.json",
    "title": "Generate ad copy from Zoom and send to Notion",
    "description": "Automate the task to generate ad copy originating from Zoom and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-zoom-google-sheets.json",
    "title": "Generate ad copy from Zoom and send to Google Sheets",
    "description": "Automate the task to generate ad copy originating from Zoom and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-zoom-salesforce.json",
    "title": "Generate ad copy from Zoom and send to Salesforce",
    "description": "Automate the task to generate ad copy originating from Zoom and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-zoom-trello-card.json",
    "title": "Generate ad copy from Zoom and send to Trello card",
    "description": "Automate the task to generate ad copy originating from Zoom and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-zoom-marketing-team.json",
    "title": "Generate ad copy from Zoom and send to Marketing team",
    "description": "Automate the task to generate ad copy originating from Zoom and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-zoom-email.json",
    "title": "Generate ad copy from Zoom and send to Email",
    "description": "Automate the task to generate ad copy originating from Zoom and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-zoom-crm.json",
    "title": "Generate social media captions from Zoom and send to CRM",
    "description": "Automate the task to generate social media captions originating from Zoom and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-zoom-slack.json",
    "title": "Generate social media captions from Zoom and send to Slack",
    "description": "Automate the task to generate social media captions originating from Zoom and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-zoom-notion.json",
    "title": "Generate social media captions from Zoom and send to Notion",
    "description": "Automate the task to generate social media captions originating from Zoom and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-zoom-google-sheets.json",
    "title": "Generate social media captions from Zoom and send to Google Sheets",
    "description": "Automate the task to generate social media captions originating from Zoom and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-zoom-salesforce.json",
    "title": "Generate social media captions from Zoom and send to Salesforce",
    "description": "Automate the task to generate social media captions originating from Zoom and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-zoom-trello-card.json",
    "title": "Generate social media captions from Zoom and send to Trello card",
    "description": "Automate the task to generate social media captions originating from Zoom and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-zoom-marketing-team.json",
    "title": "Generate social media captions from Zoom and send to Marketing team",
    "description": "Automate the task to generate social media captions originating from Zoom and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-zoom-email.json",
    "title": "Generate social media captions from Zoom and send to Email",
    "description": "Automate the task to generate social media captions originating from Zoom and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-zoom-crm.json",
    "title": "Generate product description from Zoom and send to CRM",
    "description": "Automate the task to generate product description originating from Zoom and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-zoom-slack.json",
    "title": "Generate product description from Zoom and send to Slack",
    "description": "Automate the task to generate product description originating from Zoom and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-zoom-notion.json",
    "title": "Generate product description from Zoom and send to Notion",
    "description": "Automate the task to generate product description originating from Zoom and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-zoom-google-sheets.json",
    "title": "Generate product description from Zoom and send to Google Sheets",
    "description": "Automate the task to generate product description originating from Zoom and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-zoom-salesforce.json",
    "title": "Generate product description from Zoom and send to Salesforce",
    "description": "Automate the task to generate product description originating from Zoom and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-zoom-trello-card.json",
    "title": "Generate product description from Zoom and send to Trello card",
    "description": "Automate the task to generate product description originating from Zoom and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-zoom-marketing-team.json",
    "title": "Generate product description from Zoom and send to Marketing team",
    "description": "Automate the task to generate product description originating from Zoom and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-zoom-email.json",
    "title": "Generate product description from Zoom and send to Email",
    "description": "Automate the task to generate product description originating from Zoom and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Zoom",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zoom",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-google-meet-crm.json",
    "title": "Summarize call from Google Meet and send to CRM",
    "description": "Automate the task to summarize call originating from Google Meet and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-google-meet-slack.json",
    "title": "Summarize call from Google Meet and send to Slack",
    "description": "Automate the task to summarize call originating from Google Meet and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-google-meet-notion.json",
    "title": "Summarize call from Google Meet and send to Notion",
    "description": "Automate the task to summarize call originating from Google Meet and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-google-meet-google-sheets.json",
    "title": "Summarize call from Google Meet and send to Google Sheets",
    "description": "Automate the task to summarize call originating from Google Meet and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-google-meet-salesforce.json",
    "title": "Summarize call from Google Meet and send to Salesforce",
    "description": "Automate the task to summarize call originating from Google Meet and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-google-meet-trello-card.json",
    "title": "Summarize call from Google Meet and send to Trello card",
    "description": "Automate the task to summarize call originating from Google Meet and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-google-meet-marketing-team.json",
    "title": "Summarize call from Google Meet and send to Marketing team",
    "description": "Automate the task to summarize call originating from Google Meet and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-google-meet-email.json",
    "title": "Summarize call from Google Meet and send to Email",
    "description": "Automate the task to summarize call originating from Google Meet and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-google-meet-crm.json",
    "title": "Summarize chat from Google Meet and send to CRM",
    "description": "Automate the task to summarize chat originating from Google Meet and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-google-meet-slack.json",
    "title": "Summarize chat from Google Meet and send to Slack",
    "description": "Automate the task to summarize chat originating from Google Meet and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-google-meet-notion.json",
    "title": "Summarize chat from Google Meet and send to Notion",
    "description": "Automate the task to summarize chat originating from Google Meet and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-google-meet-google-sheets.json",
    "title": "Summarize chat from Google Meet and send to Google Sheets",
    "description": "Automate the task to summarize chat originating from Google Meet and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-google-meet-salesforce.json",
    "title": "Summarize chat from Google Meet and send to Salesforce",
    "description": "Automate the task to summarize chat originating from Google Meet and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-google-meet-trello-card.json",
    "title": "Summarize chat from Google Meet and send to Trello card",
    "description": "Automate the task to summarize chat originating from Google Meet and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-google-meet-marketing-team.json",
    "title": "Summarize chat from Google Meet and send to Marketing team",
    "description": "Automate the task to summarize chat originating from Google Meet and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-google-meet-email.json",
    "title": "Summarize chat from Google Meet and send to Email",
    "description": "Automate the task to summarize chat originating from Google Meet and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-google-meet-crm.json",
    "title": "Draft email response from Google Meet and send to CRM",
    "description": "Automate the task to draft email response originating from Google Meet and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-google-meet-slack.json",
    "title": "Draft email response from Google Meet and send to Slack",
    "description": "Automate the task to draft email response originating from Google Meet and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-google-meet-notion.json",
    "title": "Draft email response from Google Meet and send to Notion",
    "description": "Automate the task to draft email response originating from Google Meet and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-google-meet-google-sheets.json",
    "title": "Draft email response from Google Meet and send to Google Sheets",
    "description": "Automate the task to draft email response originating from Google Meet and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-google-meet-salesforce.json",
    "title": "Draft email response from Google Meet and send to Salesforce",
    "description": "Automate the task to draft email response originating from Google Meet and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-google-meet-trello-card.json",
    "title": "Draft email response from Google Meet and send to Trello card",
    "description": "Automate the task to draft email response originating from Google Meet and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-google-meet-marketing-team.json",
    "title": "Draft email response from Google Meet and send to Marketing team",
    "description": "Automate the task to draft email response originating from Google Meet and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-google-meet-email.json",
    "title": "Draft email response from Google Meet and send to Email",
    "description": "Automate the task to draft email response originating from Google Meet and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-google-meet-crm.json",
    "title": "Generate meeting minutes from Google Meet and send to CRM",
    "description": "Automate the task to generate meeting minutes originating from Google Meet and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-google-meet-slack.json",
    "title": "Generate meeting minutes from Google Meet and send to Slack",
    "description": "Automate the task to generate meeting minutes originating from Google Meet and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-google-meet-notion.json",
    "title": "Generate meeting minutes from Google Meet and send to Notion",
    "description": "Automate the task to generate meeting minutes originating from Google Meet and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-google-meet-google-sheets.json",
    "title": "Generate meeting minutes from Google Meet and send to Google Sheets",
    "description": "Automate the task to generate meeting minutes originating from Google Meet and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-google-meet-salesforce.json",
    "title": "Generate meeting minutes from Google Meet and send to Salesforce",
    "description": "Automate the task to generate meeting minutes originating from Google Meet and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-google-meet-trello-card.json",
    "title": "Generate meeting minutes from Google Meet and send to Trello card",
    "description": "Automate the task to generate meeting minutes originating from Google Meet and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-google-meet-marketing-team.json",
    "title": "Generate meeting minutes from Google Meet and send to Marketing team",
    "description": "Automate the task to generate meeting minutes originating from Google Meet and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-google-meet-email.json",
    "title": "Generate meeting minutes from Google Meet and send to Email",
    "description": "Automate the task to generate meeting minutes originating from Google Meet and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-google-meet-crm.json",
    "title": "Translate meeting transcript from Google Meet and send to CRM",
    "description": "Automate the task to translate meeting transcript originating from Google Meet and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-google-meet-slack.json",
    "title": "Translate meeting transcript from Google Meet and send to Slack",
    "description": "Automate the task to translate meeting transcript originating from Google Meet and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-google-meet-notion.json",
    "title": "Translate meeting transcript from Google Meet and send to Notion",
    "description": "Automate the task to translate meeting transcript originating from Google Meet and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-google-meet-google-sheets.json",
    "title": "Translate meeting transcript from Google Meet and send to Google Sheets",
    "description": "Automate the task to translate meeting transcript originating from Google Meet and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-google-meet-salesforce.json",
    "title": "Translate meeting transcript from Google Meet and send to Salesforce",
    "description": "Automate the task to translate meeting transcript originating from Google Meet and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-google-meet-trello-card.json",
    "title": "Translate meeting transcript from Google Meet and send to Trello card",
    "description": "Automate the task to translate meeting transcript originating from Google Meet and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-google-meet-marketing-team.json",
    "title": "Translate meeting transcript from Google Meet and send to Marketing team",
    "description": "Automate the task to translate meeting transcript originating from Google Meet and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-google-meet-email.json",
    "title": "Translate meeting transcript from Google Meet and send to Email",
    "description": "Automate the task to translate meeting transcript originating from Google Meet and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-google-meet-crm.json",
    "title": "Analyze meeting sentiment from Google Meet and send to CRM",
    "description": "Automate the task to analyze meeting sentiment originating from Google Meet and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-google-meet-slack.json",
    "title": "Analyze meeting sentiment from Google Meet and send to Slack",
    "description": "Automate the task to analyze meeting sentiment originating from Google Meet and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-google-meet-notion.json",
    "title": "Analyze meeting sentiment from Google Meet and send to Notion",
    "description": "Automate the task to analyze meeting sentiment originating from Google Meet and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-google-meet-google-sheets.json",
    "title": "Analyze meeting sentiment from Google Meet and send to Google Sheets",
    "description": "Automate the task to analyze meeting sentiment originating from Google Meet and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-google-meet-salesforce.json",
    "title": "Analyze meeting sentiment from Google Meet and send to Salesforce",
    "description": "Automate the task to analyze meeting sentiment originating from Google Meet and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-google-meet-trello-card.json",
    "title": "Analyze meeting sentiment from Google Meet and send to Trello card",
    "description": "Automate the task to analyze meeting sentiment originating from Google Meet and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-google-meet-marketing-team.json",
    "title": "Analyze meeting sentiment from Google Meet and send to Marketing team",
    "description": "Automate the task to analyze meeting sentiment originating from Google Meet and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-google-meet-email.json",
    "title": "Analyze meeting sentiment from Google Meet and send to Email",
    "description": "Automate the task to analyze meeting sentiment originating from Google Meet and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-google-meet-crm.json",
    "title": "Classify action items from Google Meet and send to CRM",
    "description": "Automate the task to classify action items originating from Google Meet and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-google-meet-slack.json",
    "title": "Classify action items from Google Meet and send to Slack",
    "description": "Automate the task to classify action items originating from Google Meet and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-google-meet-notion.json",
    "title": "Classify action items from Google Meet and send to Notion",
    "description": "Automate the task to classify action items originating from Google Meet and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-google-meet-google-sheets.json",
    "title": "Classify action items from Google Meet and send to Google Sheets",
    "description": "Automate the task to classify action items originating from Google Meet and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-google-meet-salesforce.json",
    "title": "Classify action items from Google Meet and send to Salesforce",
    "description": "Automate the task to classify action items originating from Google Meet and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-google-meet-trello-card.json",
    "title": "Classify action items from Google Meet and send to Trello card",
    "description": "Automate the task to classify action items originating from Google Meet and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-google-meet-marketing-team.json",
    "title": "Classify action items from Google Meet and send to Marketing team",
    "description": "Automate the task to classify action items originating from Google Meet and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-google-meet-email.json",
    "title": "Classify action items from Google Meet and send to Email",
    "description": "Automate the task to classify action items originating from Google Meet and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-google-meet-crm.json",
    "title": "Extract key decisions from Google Meet and send to CRM",
    "description": "Automate the task to extract key decisions originating from Google Meet and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-google-meet-slack.json",
    "title": "Extract key decisions from Google Meet and send to Slack",
    "description": "Automate the task to extract key decisions originating from Google Meet and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-google-meet-notion.json",
    "title": "Extract key decisions from Google Meet and send to Notion",
    "description": "Automate the task to extract key decisions originating from Google Meet and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-google-meet-google-sheets.json",
    "title": "Extract key decisions from Google Meet and send to Google Sheets",
    "description": "Automate the task to extract key decisions originating from Google Meet and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-google-meet-salesforce.json",
    "title": "Extract key decisions from Google Meet and send to Salesforce",
    "description": "Automate the task to extract key decisions originating from Google Meet and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-google-meet-trello-card.json",
    "title": "Extract key decisions from Google Meet and send to Trello card",
    "description": "Automate the task to extract key decisions originating from Google Meet and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-google-meet-marketing-team.json",
    "title": "Extract key decisions from Google Meet and send to Marketing team",
    "description": "Automate the task to extract key decisions originating from Google Meet and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-google-meet-email.json",
    "title": "Extract key decisions from Google Meet and send to Email",
    "description": "Automate the task to extract key decisions originating from Google Meet and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-google-meet-crm.json",
    "title": "Generate blog outline from Google Meet and send to CRM",
    "description": "Automate the task to generate blog outline originating from Google Meet and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-google-meet-slack.json",
    "title": "Generate blog outline from Google Meet and send to Slack",
    "description": "Automate the task to generate blog outline originating from Google Meet and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-google-meet-notion.json",
    "title": "Generate blog outline from Google Meet and send to Notion",
    "description": "Automate the task to generate blog outline originating from Google Meet and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-google-meet-google-sheets.json",
    "title": "Generate blog outline from Google Meet and send to Google Sheets",
    "description": "Automate the task to generate blog outline originating from Google Meet and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-google-meet-salesforce.json",
    "title": "Generate blog outline from Google Meet and send to Salesforce",
    "description": "Automate the task to generate blog outline originating from Google Meet and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-google-meet-trello-card.json",
    "title": "Generate blog outline from Google Meet and send to Trello card",
    "description": "Automate the task to generate blog outline originating from Google Meet and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-google-meet-marketing-team.json",
    "title": "Generate blog outline from Google Meet and send to Marketing team",
    "description": "Automate the task to generate blog outline originating from Google Meet and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-google-meet-email.json",
    "title": "Generate blog outline from Google Meet and send to Email",
    "description": "Automate the task to generate blog outline originating from Google Meet and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-google-meet-crm.json",
    "title": "Generate ad copy from Google Meet and send to CRM",
    "description": "Automate the task to generate ad copy originating from Google Meet and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-google-meet-slack.json",
    "title": "Generate ad copy from Google Meet and send to Slack",
    "description": "Automate the task to generate ad copy originating from Google Meet and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-google-meet-notion.json",
    "title": "Generate ad copy from Google Meet and send to Notion",
    "description": "Automate the task to generate ad copy originating from Google Meet and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-google-meet-google-sheets.json",
    "title": "Generate ad copy from Google Meet and send to Google Sheets",
    "description": "Automate the task to generate ad copy originating from Google Meet and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-google-meet-salesforce.json",
    "title": "Generate ad copy from Google Meet and send to Salesforce",
    "description": "Automate the task to generate ad copy originating from Google Meet and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-google-meet-trello-card.json",
    "title": "Generate ad copy from Google Meet and send to Trello card",
    "description": "Automate the task to generate ad copy originating from Google Meet and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-google-meet-marketing-team.json",
    "title": "Generate ad copy from Google Meet and send to Marketing team",
    "description": "Automate the task to generate ad copy originating from Google Meet and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-google-meet-email.json",
    "title": "Generate ad copy from Google Meet and send to Email",
    "description": "Automate the task to generate ad copy originating from Google Meet and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-google-meet-crm.json",
    "title": "Generate social media captions from Google Meet and send to CRM",
    "description": "Automate the task to generate social media captions originating from Google Meet and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-google-meet-slack.json",
    "title": "Generate social media captions from Google Meet and send to Slack",
    "description": "Automate the task to generate social media captions originating from Google Meet and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-google-meet-notion.json",
    "title": "Generate social media captions from Google Meet and send to Notion",
    "description": "Automate the task to generate social media captions originating from Google Meet and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-google-meet-google-sheets.json",
    "title": "Generate social media captions from Google Meet and send to Google Sheets",
    "description": "Automate the task to generate social media captions originating from Google Meet and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-google-meet-salesforce.json",
    "title": "Generate social media captions from Google Meet and send to Salesforce",
    "description": "Automate the task to generate social media captions originating from Google Meet and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-google-meet-trello-card.json",
    "title": "Generate social media captions from Google Meet and send to Trello card",
    "description": "Automate the task to generate social media captions originating from Google Meet and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-google-meet-marketing-team.json",
    "title": "Generate social media captions from Google Meet and send to Marketing team",
    "description": "Automate the task to generate social media captions originating from Google Meet and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-google-meet-email.json",
    "title": "Generate social media captions from Google Meet and send to Email",
    "description": "Automate the task to generate social media captions originating from Google Meet and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-google-meet-crm.json",
    "title": "Generate product description from Google Meet and send to CRM",
    "description": "Automate the task to generate product description originating from Google Meet and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-google-meet-slack.json",
    "title": "Generate product description from Google Meet and send to Slack",
    "description": "Automate the task to generate product description originating from Google Meet and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-google-meet-notion.json",
    "title": "Generate product description from Google Meet and send to Notion",
    "description": "Automate the task to generate product description originating from Google Meet and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-google-meet-google-sheets.json",
    "title": "Generate product description from Google Meet and send to Google Sheets",
    "description": "Automate the task to generate product description originating from Google Meet and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-google-meet-salesforce.json",
    "title": "Generate product description from Google Meet and send to Salesforce",
    "description": "Automate the task to generate product description originating from Google Meet and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-google-meet-trello-card.json",
    "title": "Generate product description from Google Meet and send to Trello card",
    "description": "Automate the task to generate product description originating from Google Meet and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-google-meet-marketing-team.json",
    "title": "Generate product description from Google Meet and send to Marketing team",
    "description": "Automate the task to generate product description originating from Google Meet and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-google-meet-email.json",
    "title": "Generate product description from Google Meet and send to Email",
    "description": "Automate the task to generate product description originating from Google Meet and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Google Meet",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Meet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-microsoft-teams-crm.json",
    "title": "Summarize call from Microsoft Teams and send to CRM",
    "description": "Automate the task to summarize call originating from Microsoft Teams and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-microsoft-teams-slack.json",
    "title": "Summarize call from Microsoft Teams and send to Slack",
    "description": "Automate the task to summarize call originating from Microsoft Teams and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-microsoft-teams-notion.json",
    "title": "Summarize call from Microsoft Teams and send to Notion",
    "description": "Automate the task to summarize call originating from Microsoft Teams and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-microsoft-teams-google-sheets.json",
    "title": "Summarize call from Microsoft Teams and send to Google Sheets",
    "description": "Automate the task to summarize call originating from Microsoft Teams and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-microsoft-teams-salesforce.json",
    "title": "Summarize call from Microsoft Teams and send to Salesforce",
    "description": "Automate the task to summarize call originating from Microsoft Teams and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-microsoft-teams-trello-card.json",
    "title": "Summarize call from Microsoft Teams and send to Trello card",
    "description": "Automate the task to summarize call originating from Microsoft Teams and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-microsoft-teams-marketing-team.json",
    "title": "Summarize call from Microsoft Teams and send to Marketing team",
    "description": "Automate the task to summarize call originating from Microsoft Teams and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-microsoft-teams-email.json",
    "title": "Summarize call from Microsoft Teams and send to Email",
    "description": "Automate the task to summarize call originating from Microsoft Teams and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-microsoft-teams-crm.json",
    "title": "Summarize chat from Microsoft Teams and send to CRM",
    "description": "Automate the task to summarize chat originating from Microsoft Teams and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-microsoft-teams-slack.json",
    "title": "Summarize chat from Microsoft Teams and send to Slack",
    "description": "Automate the task to summarize chat originating from Microsoft Teams and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-microsoft-teams-notion.json",
    "title": "Summarize chat from Microsoft Teams and send to Notion",
    "description": "Automate the task to summarize chat originating from Microsoft Teams and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-microsoft-teams-google-sheets.json",
    "title": "Summarize chat from Microsoft Teams and send to Google Sheets",
    "description": "Automate the task to summarize chat originating from Microsoft Teams and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-microsoft-teams-salesforce.json",
    "title": "Summarize chat from Microsoft Teams and send to Salesforce",
    "description": "Automate the task to summarize chat originating from Microsoft Teams and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-microsoft-teams-trello-card.json",
    "title": "Summarize chat from Microsoft Teams and send to Trello card",
    "description": "Automate the task to summarize chat originating from Microsoft Teams and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-microsoft-teams-marketing-team.json",
    "title": "Summarize chat from Microsoft Teams and send to Marketing team",
    "description": "Automate the task to summarize chat originating from Microsoft Teams and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-microsoft-teams-email.json",
    "title": "Summarize chat from Microsoft Teams and send to Email",
    "description": "Automate the task to summarize chat originating from Microsoft Teams and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-microsoft-teams-crm.json",
    "title": "Draft email response from Microsoft Teams and send to CRM",
    "description": "Automate the task to draft email response originating from Microsoft Teams and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-microsoft-teams-slack.json",
    "title": "Draft email response from Microsoft Teams and send to Slack",
    "description": "Automate the task to draft email response originating from Microsoft Teams and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-microsoft-teams-notion.json",
    "title": "Draft email response from Microsoft Teams and send to Notion",
    "description": "Automate the task to draft email response originating from Microsoft Teams and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-microsoft-teams-google-sheets.json",
    "title": "Draft email response from Microsoft Teams and send to Google Sheets",
    "description": "Automate the task to draft email response originating from Microsoft Teams and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-microsoft-teams-salesforce.json",
    "title": "Draft email response from Microsoft Teams and send to Salesforce",
    "description": "Automate the task to draft email response originating from Microsoft Teams and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-microsoft-teams-trello-card.json",
    "title": "Draft email response from Microsoft Teams and send to Trello card",
    "description": "Automate the task to draft email response originating from Microsoft Teams and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-microsoft-teams-marketing-team.json",
    "title": "Draft email response from Microsoft Teams and send to Marketing team",
    "description": "Automate the task to draft email response originating from Microsoft Teams and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "draft-email-response-microsoft-teams-email.json",
    "title": "Draft email response from Microsoft Teams and send to Email",
    "description": "Automate the task to draft email response originating from Microsoft Teams and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-microsoft-teams-crm.json",
    "title": "Generate meeting minutes from Microsoft Teams and send to CRM",
    "description": "Automate the task to generate meeting minutes originating from Microsoft Teams and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-microsoft-teams-slack.json",
    "title": "Generate meeting minutes from Microsoft Teams and send to Slack",
    "description": "Automate the task to generate meeting minutes originating from Microsoft Teams and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-microsoft-teams-notion.json",
    "title": "Generate meeting minutes from Microsoft Teams and send to Notion",
    "description": "Automate the task to generate meeting minutes originating from Microsoft Teams and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-microsoft-teams-google-sheets.json",
    "title": "Generate meeting minutes from Microsoft Teams and send to Google Sheets",
    "description": "Automate the task to generate meeting minutes originating from Microsoft Teams and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-microsoft-teams-salesforce.json",
    "title": "Generate meeting minutes from Microsoft Teams and send to Salesforce",
    "description": "Automate the task to generate meeting minutes originating from Microsoft Teams and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-microsoft-teams-trello-card.json",
    "title": "Generate meeting minutes from Microsoft Teams and send to Trello card",
    "description": "Automate the task to generate meeting minutes originating from Microsoft Teams and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-microsoft-teams-marketing-team.json",
    "title": "Generate meeting minutes from Microsoft Teams and send to Marketing team",
    "description": "Automate the task to generate meeting minutes originating from Microsoft Teams and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-meeting-minutes-microsoft-teams-email.json",
    "title": "Generate meeting minutes from Microsoft Teams and send to Email",
    "description": "Automate the task to generate meeting minutes originating from Microsoft Teams and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-microsoft-teams-crm.json",
    "title": "Translate meeting transcript from Microsoft Teams and send to CRM",
    "description": "Automate the task to translate meeting transcript originating from Microsoft Teams and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-microsoft-teams-slack.json",
    "title": "Translate meeting transcript from Microsoft Teams and send to Slack",
    "description": "Automate the task to translate meeting transcript originating from Microsoft Teams and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-microsoft-teams-notion.json",
    "title": "Translate meeting transcript from Microsoft Teams and send to Notion",
    "description": "Automate the task to translate meeting transcript originating from Microsoft Teams and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-microsoft-teams-google-sheets.json",
    "title": "Translate meeting transcript from Microsoft Teams and send to Google Sheets",
    "description": "Automate the task to translate meeting transcript originating from Microsoft Teams and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-microsoft-teams-salesforce.json",
    "title": "Translate meeting transcript from Microsoft Teams and send to Salesforce",
    "description": "Automate the task to translate meeting transcript originating from Microsoft Teams and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-microsoft-teams-trello-card.json",
    "title": "Translate meeting transcript from Microsoft Teams and send to Trello card",
    "description": "Automate the task to translate meeting transcript originating from Microsoft Teams and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-microsoft-teams-marketing-team.json",
    "title": "Translate meeting transcript from Microsoft Teams and send to Marketing team",
    "description": "Automate the task to translate meeting transcript originating from Microsoft Teams and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-meeting-transcript-microsoft-teams-email.json",
    "title": "Translate meeting transcript from Microsoft Teams and send to Email",
    "description": "Automate the task to translate meeting transcript originating from Microsoft Teams and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-microsoft-teams-crm.json",
    "title": "Analyze meeting sentiment from Microsoft Teams and send to CRM",
    "description": "Automate the task to analyze meeting sentiment originating from Microsoft Teams and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-microsoft-teams-slack.json",
    "title": "Analyze meeting sentiment from Microsoft Teams and send to Slack",
    "description": "Automate the task to analyze meeting sentiment originating from Microsoft Teams and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-microsoft-teams-notion.json",
    "title": "Analyze meeting sentiment from Microsoft Teams and send to Notion",
    "description": "Automate the task to analyze meeting sentiment originating from Microsoft Teams and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-microsoft-teams-google-sheets.json",
    "title": "Analyze meeting sentiment from Microsoft Teams and send to Google Sheets",
    "description": "Automate the task to analyze meeting sentiment originating from Microsoft Teams and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-microsoft-teams-salesforce.json",
    "title": "Analyze meeting sentiment from Microsoft Teams and send to Salesforce",
    "description": "Automate the task to analyze meeting sentiment originating from Microsoft Teams and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-microsoft-teams-trello-card.json",
    "title": "Analyze meeting sentiment from Microsoft Teams and send to Trello card",
    "description": "Automate the task to analyze meeting sentiment originating from Microsoft Teams and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-microsoft-teams-marketing-team.json",
    "title": "Analyze meeting sentiment from Microsoft Teams and send to Marketing team",
    "description": "Automate the task to analyze meeting sentiment originating from Microsoft Teams and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-meeting-sentiment-microsoft-teams-email.json",
    "title": "Analyze meeting sentiment from Microsoft Teams and send to Email",
    "description": "Automate the task to analyze meeting sentiment originating from Microsoft Teams and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-microsoft-teams-crm.json",
    "title": "Classify action items from Microsoft Teams and send to CRM",
    "description": "Automate the task to classify action items originating from Microsoft Teams and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-microsoft-teams-slack.json",
    "title": "Classify action items from Microsoft Teams and send to Slack",
    "description": "Automate the task to classify action items originating from Microsoft Teams and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-microsoft-teams-notion.json",
    "title": "Classify action items from Microsoft Teams and send to Notion",
    "description": "Automate the task to classify action items originating from Microsoft Teams and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-microsoft-teams-google-sheets.json",
    "title": "Classify action items from Microsoft Teams and send to Google Sheets",
    "description": "Automate the task to classify action items originating from Microsoft Teams and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-microsoft-teams-salesforce.json",
    "title": "Classify action items from Microsoft Teams and send to Salesforce",
    "description": "Automate the task to classify action items originating from Microsoft Teams and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-microsoft-teams-trello-card.json",
    "title": "Classify action items from Microsoft Teams and send to Trello card",
    "description": "Automate the task to classify action items originating from Microsoft Teams and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-microsoft-teams-marketing-team.json",
    "title": "Classify action items from Microsoft Teams and send to Marketing team",
    "description": "Automate the task to classify action items originating from Microsoft Teams and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-action-items-microsoft-teams-email.json",
    "title": "Classify action items from Microsoft Teams and send to Email",
    "description": "Automate the task to classify action items originating from Microsoft Teams and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-microsoft-teams-crm.json",
    "title": "Extract key decisions from Microsoft Teams and send to CRM",
    "description": "Automate the task to extract key decisions originating from Microsoft Teams and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-microsoft-teams-slack.json",
    "title": "Extract key decisions from Microsoft Teams and send to Slack",
    "description": "Automate the task to extract key decisions originating from Microsoft Teams and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-microsoft-teams-notion.json",
    "title": "Extract key decisions from Microsoft Teams and send to Notion",
    "description": "Automate the task to extract key decisions originating from Microsoft Teams and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-microsoft-teams-google-sheets.json",
    "title": "Extract key decisions from Microsoft Teams and send to Google Sheets",
    "description": "Automate the task to extract key decisions originating from Microsoft Teams and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-microsoft-teams-salesforce.json",
    "title": "Extract key decisions from Microsoft Teams and send to Salesforce",
    "description": "Automate the task to extract key decisions originating from Microsoft Teams and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-microsoft-teams-trello-card.json",
    "title": "Extract key decisions from Microsoft Teams and send to Trello card",
    "description": "Automate the task to extract key decisions originating from Microsoft Teams and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-microsoft-teams-marketing-team.json",
    "title": "Extract key decisions from Microsoft Teams and send to Marketing team",
    "description": "Automate the task to extract key decisions originating from Microsoft Teams and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-key-decisions-microsoft-teams-email.json",
    "title": "Extract key decisions from Microsoft Teams and send to Email",
    "description": "Automate the task to extract key decisions originating from Microsoft Teams and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-microsoft-teams-crm.json",
    "title": "Generate blog outline from Microsoft Teams and send to CRM",
    "description": "Automate the task to generate blog outline originating from Microsoft Teams and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-microsoft-teams-slack.json",
    "title": "Generate blog outline from Microsoft Teams and send to Slack",
    "description": "Automate the task to generate blog outline originating from Microsoft Teams and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-microsoft-teams-notion.json",
    "title": "Generate blog outline from Microsoft Teams and send to Notion",
    "description": "Automate the task to generate blog outline originating from Microsoft Teams and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-microsoft-teams-google-sheets.json",
    "title": "Generate blog outline from Microsoft Teams and send to Google Sheets",
    "description": "Automate the task to generate blog outline originating from Microsoft Teams and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-microsoft-teams-salesforce.json",
    "title": "Generate blog outline from Microsoft Teams and send to Salesforce",
    "description": "Automate the task to generate blog outline originating from Microsoft Teams and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-microsoft-teams-trello-card.json",
    "title": "Generate blog outline from Microsoft Teams and send to Trello card",
    "description": "Automate the task to generate blog outline originating from Microsoft Teams and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-microsoft-teams-marketing-team.json",
    "title": "Generate blog outline from Microsoft Teams and send to Marketing team",
    "description": "Automate the task to generate blog outline originating from Microsoft Teams and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-blog-outline-microsoft-teams-email.json",
    "title": "Generate blog outline from Microsoft Teams and send to Email",
    "description": "Automate the task to generate blog outline originating from Microsoft Teams and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-microsoft-teams-crm.json",
    "title": "Generate ad copy from Microsoft Teams and send to CRM",
    "description": "Automate the task to generate ad copy originating from Microsoft Teams and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-microsoft-teams-slack.json",
    "title": "Generate ad copy from Microsoft Teams and send to Slack",
    "description": "Automate the task to generate ad copy originating from Microsoft Teams and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-microsoft-teams-notion.json",
    "title": "Generate ad copy from Microsoft Teams and send to Notion",
    "description": "Automate the task to generate ad copy originating from Microsoft Teams and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-microsoft-teams-google-sheets.json",
    "title": "Generate ad copy from Microsoft Teams and send to Google Sheets",
    "description": "Automate the task to generate ad copy originating from Microsoft Teams and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-microsoft-teams-salesforce.json",
    "title": "Generate ad copy from Microsoft Teams and send to Salesforce",
    "description": "Automate the task to generate ad copy originating from Microsoft Teams and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-microsoft-teams-trello-card.json",
    "title": "Generate ad copy from Microsoft Teams and send to Trello card",
    "description": "Automate the task to generate ad copy originating from Microsoft Teams and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-microsoft-teams-marketing-team.json",
    "title": "Generate ad copy from Microsoft Teams and send to Marketing team",
    "description": "Automate the task to generate ad copy originating from Microsoft Teams and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-ad-copy-microsoft-teams-email.json",
    "title": "Generate ad copy from Microsoft Teams and send to Email",
    "description": "Automate the task to generate ad copy originating from Microsoft Teams and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-microsoft-teams-crm.json",
    "title": "Generate social media captions from Microsoft Teams and send to CRM",
    "description": "Automate the task to generate social media captions originating from Microsoft Teams and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-microsoft-teams-slack.json",
    "title": "Generate social media captions from Microsoft Teams and send to Slack",
    "description": "Automate the task to generate social media captions originating from Microsoft Teams and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-microsoft-teams-notion.json",
    "title": "Generate social media captions from Microsoft Teams and send to Notion",
    "description": "Automate the task to generate social media captions originating from Microsoft Teams and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-microsoft-teams-google-sheets.json",
    "title": "Generate social media captions from Microsoft Teams and send to Google Sheets",
    "description": "Automate the task to generate social media captions originating from Microsoft Teams and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-microsoft-teams-salesforce.json",
    "title": "Generate social media captions from Microsoft Teams and send to Salesforce",
    "description": "Automate the task to generate social media captions originating from Microsoft Teams and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-microsoft-teams-trello-card.json",
    "title": "Generate social media captions from Microsoft Teams and send to Trello card",
    "description": "Automate the task to generate social media captions originating from Microsoft Teams and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-microsoft-teams-marketing-team.json",
    "title": "Generate social media captions from Microsoft Teams and send to Marketing team",
    "description": "Automate the task to generate social media captions originating from Microsoft Teams and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-social-media-captions-microsoft-teams-email.json",
    "title": "Generate social media captions from Microsoft Teams and send to Email",
    "description": "Automate the task to generate social media captions originating from Microsoft Teams and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-microsoft-teams-crm.json",
    "title": "Generate product description from Microsoft Teams and send to CRM",
    "description": "Automate the task to generate product description originating from Microsoft Teams and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-microsoft-teams-slack.json",
    "title": "Generate product description from Microsoft Teams and send to Slack",
    "description": "Automate the task to generate product description originating from Microsoft Teams and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-microsoft-teams-notion.json",
    "title": "Generate product description from Microsoft Teams and send to Notion",
    "description": "Automate the task to generate product description originating from Microsoft Teams and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-microsoft-teams-google-sheets.json",
    "title": "Generate product description from Microsoft Teams and send to Google Sheets",
    "description": "Automate the task to generate product description originating from Microsoft Teams and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-microsoft-teams-salesforce.json",
    "title": "Generate product description from Microsoft Teams and send to Salesforce",
    "description": "Automate the task to generate product description originating from Microsoft Teams and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-microsoft-teams-trello-card.json",
    "title": "Generate product description from Microsoft Teams and send to Trello card",
    "description": "Automate the task to generate product description originating from Microsoft Teams and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-microsoft-teams-marketing-team.json",
    "title": "Generate product description from Microsoft Teams and send to Marketing team",
    "description": "Automate the task to generate product description originating from Microsoft Teams and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-product-description-microsoft-teams-email.json",
    "title": "Generate product description from Microsoft Teams and send to Email",
    "description": "Automate the task to generate product description originating from Microsoft Teams and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Microsoft Teams",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Microsoft Teams",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-slack-crm.json",
    "title": "Summarize call from Slack and send to CRM",
    "description": "Automate the task to summarize call originating from Slack and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Slack",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Slack",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-slack-slack.json",
    "title": "Summarize call from Slack and send to Slack",
    "description": "Automate the task to summarize call originating from Slack and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Slack",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Slack",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-slack-notion.json",
    "title": "Summarize call from Slack and send to Notion",
    "description": "Automate the task to summarize call originating from Slack and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Slack",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Slack",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-slack-google-sheets.json",
    "title": "Summarize call from Slack and send to Google Sheets",
    "description": "Automate the task to summarize call originating from Slack and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Slack",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Slack",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-slack-salesforce.json",
    "title": "Summarize call from Slack and send to Salesforce",
    "description": "Automate the task to summarize call originating from Slack and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Slack",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Slack",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-slack-trello-card.json",
    "title": "Summarize call from Slack and send to Trello card",
    "description": "Automate the task to summarize call originating from Slack and then send the result to Trello card. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Slack",
      "Trello card",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Slack",
    "output": "Data sent to Trello card",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-slack-marketing-team.json",
    "title": "Summarize call from Slack and send to Marketing team",
    "description": "Automate the task to summarize call originating from Slack and then send the result to Marketing team. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Slack",
      "Marketing team",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Slack",
    "output": "Data sent to Marketing team",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-call-slack-email.json",
    "title": "Summarize call from Slack and send to Email",
    "description": "Automate the task to summarize call originating from Slack and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Slack",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Slack",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-slack-crm.json",
    "title": "Summarize chat from Slack and send to CRM",
    "description": "Automate the task to summarize chat originating from Slack and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Slack",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Slack",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-slack-slack.json",
    "title": "Summarize chat from Slack and send to Slack",
    "description": "Automate the task to summarize chat originating from Slack and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Slack",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Slack",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-slack-notion.json",
    "title": "Summarize chat from Slack and send to Notion",
    "description": "Automate the task to summarize chat originating from Slack and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Slack",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Slack",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-chat-slack-google-sheets.json",
    "title": "Summarize chat from Slack and send to Google Sheets",
    "description": "Automate the task to summarize chat originating from Slack and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "AI Agents",
    "tools_used": [
      "Slack",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Slack",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "capture-lead-facebook-ads-salesforce.json",
    "title": "Capture lead from Facebook Ads and send to Salesforce",
    "description": "Automate the task to capture lead originating from Facebook Ads and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-facebook-ads-hubspot.json",
    "title": "Capture lead from Facebook Ads and send to HubSpot",
    "description": "Automate the task to capture lead originating from Facebook Ads and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-facebook-ads-pipedrive.json",
    "title": "Capture lead from Facebook Ads and send to Pipedrive",
    "description": "Automate the task to capture lead originating from Facebook Ads and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-facebook-ads-zoho-crm.json",
    "title": "Capture lead from Facebook Ads and send to Zoho CRM",
    "description": "Automate the task to capture lead originating from Facebook Ads and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-facebook-ads-copper.json",
    "title": "Capture lead from Facebook Ads and send to Copper",
    "description": "Automate the task to capture lead originating from Facebook Ads and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-facebook-ads-freshsales.json",
    "title": "Capture lead from Facebook Ads and send to Freshsales",
    "description": "Automate the task to capture lead originating from Facebook Ads and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-facebook-ads-gmail.json",
    "title": "Capture lead from Facebook Ads and send to Gmail",
    "description": "Automate the task to capture lead originating from Facebook Ads and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-facebook-ads-salesforce.json",
    "title": "Qualify lead from Facebook Ads and send to Salesforce",
    "description": "Automate the task to qualify lead originating from Facebook Ads and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-facebook-ads-hubspot.json",
    "title": "Qualify lead from Facebook Ads and send to HubSpot",
    "description": "Automate the task to qualify lead originating from Facebook Ads and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-facebook-ads-pipedrive.json",
    "title": "Qualify lead from Facebook Ads and send to Pipedrive",
    "description": "Automate the task to qualify lead originating from Facebook Ads and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-facebook-ads-zoho-crm.json",
    "title": "Qualify lead from Facebook Ads and send to Zoho CRM",
    "description": "Automate the task to qualify lead originating from Facebook Ads and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-facebook-ads-copper.json",
    "title": "Qualify lead from Facebook Ads and send to Copper",
    "description": "Automate the task to qualify lead originating from Facebook Ads and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-facebook-ads-freshsales.json",
    "title": "Qualify lead from Facebook Ads and send to Freshsales",
    "description": "Automate the task to qualify lead originating from Facebook Ads and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-facebook-ads-gmail.json",
    "title": "Qualify lead from Facebook Ads and send to Gmail",
    "description": "Automate the task to qualify lead originating from Facebook Ads and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "score-lead-with-ai-facebook-ads-salesforce.json",
    "title": "Score lead with ai from Facebook Ads and send to Salesforce",
    "description": "Automate the task to score lead with AI originating from Facebook Ads and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-facebook-ads-hubspot.json",
    "title": "Score lead with ai from Facebook Ads and send to HubSpot",
    "description": "Automate the task to score lead with AI originating from Facebook Ads and then send the result to HubSpot. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "HubSpot",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-facebook-ads-pipedrive.json",
    "title": "Score lead with ai from Facebook Ads and send to Pipedrive",
    "description": "Automate the task to score lead with AI originating from Facebook Ads and then send the result to Pipedrive. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Pipedrive",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-facebook-ads-zoho-crm.json",
    "title": "Score lead with ai from Facebook Ads and send to Zoho CRM",
    "description": "Automate the task to score lead with AI originating from Facebook Ads and then send the result to Zoho CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Zoho CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-facebook-ads-copper.json",
    "title": "Score lead with ai from Facebook Ads and send to Copper",
    "description": "Automate the task to score lead with AI originating from Facebook Ads and then send the result to Copper. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Copper",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-facebook-ads-freshsales.json",
    "title": "Score lead with ai from Facebook Ads and send to Freshsales",
    "description": "Automate the task to score lead with AI originating from Facebook Ads and then send the result to Freshsales. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Freshsales",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-facebook-ads-gmail.json",
    "title": "Score lead with ai from Facebook Ads and send to Gmail",
    "description": "Automate the task to score lead with AI originating from Facebook Ads and then send the result to Gmail. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Gmail",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "add-lead-to-crm-facebook-ads-salesforce.json",
    "title": "Add lead to crm from Facebook Ads and send to Salesforce",
    "description": "Automate the task to add lead to CRM originating from Facebook Ads and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-facebook-ads-hubspot.json",
    "title": "Add lead to crm from Facebook Ads and send to HubSpot",
    "description": "Automate the task to add lead to CRM originating from Facebook Ads and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-facebook-ads-pipedrive.json",
    "title": "Add lead to crm from Facebook Ads and send to Pipedrive",
    "description": "Automate the task to add lead to CRM originating from Facebook Ads and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-facebook-ads-zoho-crm.json",
    "title": "Add lead to crm from Facebook Ads and send to Zoho CRM",
    "description": "Automate the task to add lead to CRM originating from Facebook Ads and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-facebook-ads-copper.json",
    "title": "Add lead to crm from Facebook Ads and send to Copper",
    "description": "Automate the task to add lead to CRM originating from Facebook Ads and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-facebook-ads-freshsales.json",
    "title": "Add lead to crm from Facebook Ads and send to Freshsales",
    "description": "Automate the task to add lead to CRM originating from Facebook Ads and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-facebook-ads-gmail.json",
    "title": "Add lead to crm from Facebook Ads and send to Gmail",
    "description": "Automate the task to add lead to CRM originating from Facebook Ads and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-facebook-ads-salesforce.json",
    "title": "Schedule follow-up email from Facebook Ads and send to Salesforce",
    "description": "Automate the task to schedule follow-up email originating from Facebook Ads and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-facebook-ads-hubspot.json",
    "title": "Schedule follow-up email from Facebook Ads and send to HubSpot",
    "description": "Automate the task to schedule follow-up email originating from Facebook Ads and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-facebook-ads-pipedrive.json",
    "title": "Schedule follow-up email from Facebook Ads and send to Pipedrive",
    "description": "Automate the task to schedule follow-up email originating from Facebook Ads and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-facebook-ads-zoho-crm.json",
    "title": "Schedule follow-up email from Facebook Ads and send to Zoho CRM",
    "description": "Automate the task to schedule follow-up email originating from Facebook Ads and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-facebook-ads-copper.json",
    "title": "Schedule follow-up email from Facebook Ads and send to Copper",
    "description": "Automate the task to schedule follow-up email originating from Facebook Ads and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-facebook-ads-freshsales.json",
    "title": "Schedule follow-up email from Facebook Ads and send to Freshsales",
    "description": "Automate the task to schedule follow-up email originating from Facebook Ads and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-facebook-ads-gmail.json",
    "title": "Schedule follow-up email from Facebook Ads and send to Gmail",
    "description": "Automate the task to schedule follow-up email originating from Facebook Ads and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-facebook-ads-salesforce.json",
    "title": "Create deal from Facebook Ads and send to Salesforce",
    "description": "Automate the task to create deal originating from Facebook Ads and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-facebook-ads-hubspot.json",
    "title": "Create deal from Facebook Ads and send to HubSpot",
    "description": "Automate the task to create deal originating from Facebook Ads and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-facebook-ads-pipedrive.json",
    "title": "Create deal from Facebook Ads and send to Pipedrive",
    "description": "Automate the task to create deal originating from Facebook Ads and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-facebook-ads-zoho-crm.json",
    "title": "Create deal from Facebook Ads and send to Zoho CRM",
    "description": "Automate the task to create deal originating from Facebook Ads and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-facebook-ads-copper.json",
    "title": "Create deal from Facebook Ads and send to Copper",
    "description": "Automate the task to create deal originating from Facebook Ads and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-facebook-ads-freshsales.json",
    "title": "Create deal from Facebook Ads and send to Freshsales",
    "description": "Automate the task to create deal originating from Facebook Ads and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-facebook-ads-gmail.json",
    "title": "Create deal from Facebook Ads and send to Gmail",
    "description": "Automate the task to create deal originating from Facebook Ads and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-facebook-ads-salesforce.json",
    "title": "Assign to salesperson from Facebook Ads and send to Salesforce",
    "description": "Automate the task to assign to salesperson originating from Facebook Ads and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-facebook-ads-hubspot.json",
    "title": "Assign to salesperson from Facebook Ads and send to HubSpot",
    "description": "Automate the task to assign to salesperson originating from Facebook Ads and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-facebook-ads-pipedrive.json",
    "title": "Assign to salesperson from Facebook Ads and send to Pipedrive",
    "description": "Automate the task to assign to salesperson originating from Facebook Ads and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-facebook-ads-zoho-crm.json",
    "title": "Assign to salesperson from Facebook Ads and send to Zoho CRM",
    "description": "Automate the task to assign to salesperson originating from Facebook Ads and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-facebook-ads-copper.json",
    "title": "Assign to salesperson from Facebook Ads and send to Copper",
    "description": "Automate the task to assign to salesperson originating from Facebook Ads and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-facebook-ads-freshsales.json",
    "title": "Assign to salesperson from Facebook Ads and send to Freshsales",
    "description": "Automate the task to assign to salesperson originating from Facebook Ads and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-facebook-ads-gmail.json",
    "title": "Assign to salesperson from Facebook Ads and send to Gmail",
    "description": "Automate the task to assign to salesperson originating from Facebook Ads and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-facebook-ads-salesforce.json",
    "title": "Update lead status from Facebook Ads and send to Salesforce",
    "description": "Automate the task to update lead status originating from Facebook Ads and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-facebook-ads-hubspot.json",
    "title": "Update lead status from Facebook Ads and send to HubSpot",
    "description": "Automate the task to update lead status originating from Facebook Ads and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-facebook-ads-pipedrive.json",
    "title": "Update lead status from Facebook Ads and send to Pipedrive",
    "description": "Automate the task to update lead status originating from Facebook Ads and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-facebook-ads-zoho-crm.json",
    "title": "Update lead status from Facebook Ads and send to Zoho CRM",
    "description": "Automate the task to update lead status originating from Facebook Ads and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-facebook-ads-copper.json",
    "title": "Update lead status from Facebook Ads and send to Copper",
    "description": "Automate the task to update lead status originating from Facebook Ads and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-facebook-ads-freshsales.json",
    "title": "Update lead status from Facebook Ads and send to Freshsales",
    "description": "Automate the task to update lead status originating from Facebook Ads and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-facebook-ads-gmail.json",
    "title": "Update lead status from Facebook Ads and send to Gmail",
    "description": "Automate the task to update lead status originating from Facebook Ads and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Facebook Ads",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Facebook Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-google-ads-salesforce.json",
    "title": "Capture lead from Google Ads and send to Salesforce",
    "description": "Automate the task to capture lead originating from Google Ads and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-google-ads-hubspot.json",
    "title": "Capture lead from Google Ads and send to HubSpot",
    "description": "Automate the task to capture lead originating from Google Ads and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-google-ads-pipedrive.json",
    "title": "Capture lead from Google Ads and send to Pipedrive",
    "description": "Automate the task to capture lead originating from Google Ads and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-google-ads-zoho-crm.json",
    "title": "Capture lead from Google Ads and send to Zoho CRM",
    "description": "Automate the task to capture lead originating from Google Ads and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-google-ads-copper.json",
    "title": "Capture lead from Google Ads and send to Copper",
    "description": "Automate the task to capture lead originating from Google Ads and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-google-ads-freshsales.json",
    "title": "Capture lead from Google Ads and send to Freshsales",
    "description": "Automate the task to capture lead originating from Google Ads and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-google-ads-gmail.json",
    "title": "Capture lead from Google Ads and send to Gmail",
    "description": "Automate the task to capture lead originating from Google Ads and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-google-ads-salesforce.json",
    "title": "Qualify lead from Google Ads and send to Salesforce",
    "description": "Automate the task to qualify lead originating from Google Ads and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-google-ads-hubspot.json",
    "title": "Qualify lead from Google Ads and send to HubSpot",
    "description": "Automate the task to qualify lead originating from Google Ads and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-google-ads-pipedrive.json",
    "title": "Qualify lead from Google Ads and send to Pipedrive",
    "description": "Automate the task to qualify lead originating from Google Ads and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-google-ads-zoho-crm.json",
    "title": "Qualify lead from Google Ads and send to Zoho CRM",
    "description": "Automate the task to qualify lead originating from Google Ads and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-google-ads-copper.json",
    "title": "Qualify lead from Google Ads and send to Copper",
    "description": "Automate the task to qualify lead originating from Google Ads and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-google-ads-freshsales.json",
    "title": "Qualify lead from Google Ads and send to Freshsales",
    "description": "Automate the task to qualify lead originating from Google Ads and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-google-ads-gmail.json",
    "title": "Qualify lead from Google Ads and send to Gmail",
    "description": "Automate the task to qualify lead originating from Google Ads and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "score-lead-with-ai-google-ads-salesforce.json",
    "title": "Score lead with ai from Google Ads and send to Salesforce",
    "description": "Automate the task to score lead with AI originating from Google Ads and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-google-ads-hubspot.json",
    "title": "Score lead with ai from Google Ads and send to HubSpot",
    "description": "Automate the task to score lead with AI originating from Google Ads and then send the result to HubSpot. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "HubSpot",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-google-ads-pipedrive.json",
    "title": "Score lead with ai from Google Ads and send to Pipedrive",
    "description": "Automate the task to score lead with AI originating from Google Ads and then send the result to Pipedrive. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Pipedrive",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-google-ads-zoho-crm.json",
    "title": "Score lead with ai from Google Ads and send to Zoho CRM",
    "description": "Automate the task to score lead with AI originating from Google Ads and then send the result to Zoho CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Zoho CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-google-ads-copper.json",
    "title": "Score lead with ai from Google Ads and send to Copper",
    "description": "Automate the task to score lead with AI originating from Google Ads and then send the result to Copper. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Copper",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-google-ads-freshsales.json",
    "title": "Score lead with ai from Google Ads and send to Freshsales",
    "description": "Automate the task to score lead with AI originating from Google Ads and then send the result to Freshsales. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Freshsales",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-google-ads-gmail.json",
    "title": "Score lead with ai from Google Ads and send to Gmail",
    "description": "Automate the task to score lead with AI originating from Google Ads and then send the result to Gmail. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Gmail",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "add-lead-to-crm-google-ads-salesforce.json",
    "title": "Add lead to crm from Google Ads and send to Salesforce",
    "description": "Automate the task to add lead to CRM originating from Google Ads and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-google-ads-hubspot.json",
    "title": "Add lead to crm from Google Ads and send to HubSpot",
    "description": "Automate the task to add lead to CRM originating from Google Ads and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-google-ads-pipedrive.json",
    "title": "Add lead to crm from Google Ads and send to Pipedrive",
    "description": "Automate the task to add lead to CRM originating from Google Ads and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-google-ads-zoho-crm.json",
    "title": "Add lead to crm from Google Ads and send to Zoho CRM",
    "description": "Automate the task to add lead to CRM originating from Google Ads and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-google-ads-copper.json",
    "title": "Add lead to crm from Google Ads and send to Copper",
    "description": "Automate the task to add lead to CRM originating from Google Ads and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-google-ads-freshsales.json",
    "title": "Add lead to crm from Google Ads and send to Freshsales",
    "description": "Automate the task to add lead to CRM originating from Google Ads and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-google-ads-gmail.json",
    "title": "Add lead to crm from Google Ads and send to Gmail",
    "description": "Automate the task to add lead to CRM originating from Google Ads and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-google-ads-salesforce.json",
    "title": "Schedule follow-up email from Google Ads and send to Salesforce",
    "description": "Automate the task to schedule follow-up email originating from Google Ads and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-google-ads-hubspot.json",
    "title": "Schedule follow-up email from Google Ads and send to HubSpot",
    "description": "Automate the task to schedule follow-up email originating from Google Ads and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-google-ads-pipedrive.json",
    "title": "Schedule follow-up email from Google Ads and send to Pipedrive",
    "description": "Automate the task to schedule follow-up email originating from Google Ads and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-google-ads-zoho-crm.json",
    "title": "Schedule follow-up email from Google Ads and send to Zoho CRM",
    "description": "Automate the task to schedule follow-up email originating from Google Ads and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-google-ads-copper.json",
    "title": "Schedule follow-up email from Google Ads and send to Copper",
    "description": "Automate the task to schedule follow-up email originating from Google Ads and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-google-ads-freshsales.json",
    "title": "Schedule follow-up email from Google Ads and send to Freshsales",
    "description": "Automate the task to schedule follow-up email originating from Google Ads and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-google-ads-gmail.json",
    "title": "Schedule follow-up email from Google Ads and send to Gmail",
    "description": "Automate the task to schedule follow-up email originating from Google Ads and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-google-ads-salesforce.json",
    "title": "Create deal from Google Ads and send to Salesforce",
    "description": "Automate the task to create deal originating from Google Ads and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-google-ads-hubspot.json",
    "title": "Create deal from Google Ads and send to HubSpot",
    "description": "Automate the task to create deal originating from Google Ads and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-google-ads-pipedrive.json",
    "title": "Create deal from Google Ads and send to Pipedrive",
    "description": "Automate the task to create deal originating from Google Ads and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-google-ads-zoho-crm.json",
    "title": "Create deal from Google Ads and send to Zoho CRM",
    "description": "Automate the task to create deal originating from Google Ads and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-google-ads-copper.json",
    "title": "Create deal from Google Ads and send to Copper",
    "description": "Automate the task to create deal originating from Google Ads and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-google-ads-freshsales.json",
    "title": "Create deal from Google Ads and send to Freshsales",
    "description": "Automate the task to create deal originating from Google Ads and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-google-ads-gmail.json",
    "title": "Create deal from Google Ads and send to Gmail",
    "description": "Automate the task to create deal originating from Google Ads and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-google-ads-salesforce.json",
    "title": "Assign to salesperson from Google Ads and send to Salesforce",
    "description": "Automate the task to assign to salesperson originating from Google Ads and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-google-ads-hubspot.json",
    "title": "Assign to salesperson from Google Ads and send to HubSpot",
    "description": "Automate the task to assign to salesperson originating from Google Ads and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-google-ads-pipedrive.json",
    "title": "Assign to salesperson from Google Ads and send to Pipedrive",
    "description": "Automate the task to assign to salesperson originating from Google Ads and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-google-ads-zoho-crm.json",
    "title": "Assign to salesperson from Google Ads and send to Zoho CRM",
    "description": "Automate the task to assign to salesperson originating from Google Ads and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-google-ads-copper.json",
    "title": "Assign to salesperson from Google Ads and send to Copper",
    "description": "Automate the task to assign to salesperson originating from Google Ads and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-google-ads-freshsales.json",
    "title": "Assign to salesperson from Google Ads and send to Freshsales",
    "description": "Automate the task to assign to salesperson originating from Google Ads and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-google-ads-gmail.json",
    "title": "Assign to salesperson from Google Ads and send to Gmail",
    "description": "Automate the task to assign to salesperson originating from Google Ads and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-google-ads-salesforce.json",
    "title": "Update lead status from Google Ads and send to Salesforce",
    "description": "Automate the task to update lead status originating from Google Ads and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-google-ads-hubspot.json",
    "title": "Update lead status from Google Ads and send to HubSpot",
    "description": "Automate the task to update lead status originating from Google Ads and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-google-ads-pipedrive.json",
    "title": "Update lead status from Google Ads and send to Pipedrive",
    "description": "Automate the task to update lead status originating from Google Ads and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-google-ads-zoho-crm.json",
    "title": "Update lead status from Google Ads and send to Zoho CRM",
    "description": "Automate the task to update lead status originating from Google Ads and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-google-ads-copper.json",
    "title": "Update lead status from Google Ads and send to Copper",
    "description": "Automate the task to update lead status originating from Google Ads and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-google-ads-freshsales.json",
    "title": "Update lead status from Google Ads and send to Freshsales",
    "description": "Automate the task to update lead status originating from Google Ads and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-google-ads-gmail.json",
    "title": "Update lead status from Google Ads and send to Gmail",
    "description": "Automate the task to update lead status originating from Google Ads and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Google Ads",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Google Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-linkedin-ads-salesforce.json",
    "title": "Capture lead from LinkedIn Ads and send to Salesforce",
    "description": "Automate the task to capture lead originating from LinkedIn Ads and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-linkedin-ads-hubspot.json",
    "title": "Capture lead from LinkedIn Ads and send to HubSpot",
    "description": "Automate the task to capture lead originating from LinkedIn Ads and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-linkedin-ads-pipedrive.json",
    "title": "Capture lead from LinkedIn Ads and send to Pipedrive",
    "description": "Automate the task to capture lead originating from LinkedIn Ads and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-linkedin-ads-zoho-crm.json",
    "title": "Capture lead from LinkedIn Ads and send to Zoho CRM",
    "description": "Automate the task to capture lead originating from LinkedIn Ads and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-linkedin-ads-copper.json",
    "title": "Capture lead from LinkedIn Ads and send to Copper",
    "description": "Automate the task to capture lead originating from LinkedIn Ads and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-linkedin-ads-freshsales.json",
    "title": "Capture lead from LinkedIn Ads and send to Freshsales",
    "description": "Automate the task to capture lead originating from LinkedIn Ads and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-linkedin-ads-gmail.json",
    "title": "Capture lead from LinkedIn Ads and send to Gmail",
    "description": "Automate the task to capture lead originating from LinkedIn Ads and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-linkedin-ads-salesforce.json",
    "title": "Qualify lead from LinkedIn Ads and send to Salesforce",
    "description": "Automate the task to qualify lead originating from LinkedIn Ads and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-linkedin-ads-hubspot.json",
    "title": "Qualify lead from LinkedIn Ads and send to HubSpot",
    "description": "Automate the task to qualify lead originating from LinkedIn Ads and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-linkedin-ads-pipedrive.json",
    "title": "Qualify lead from LinkedIn Ads and send to Pipedrive",
    "description": "Automate the task to qualify lead originating from LinkedIn Ads and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-linkedin-ads-zoho-crm.json",
    "title": "Qualify lead from LinkedIn Ads and send to Zoho CRM",
    "description": "Automate the task to qualify lead originating from LinkedIn Ads and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-linkedin-ads-copper.json",
    "title": "Qualify lead from LinkedIn Ads and send to Copper",
    "description": "Automate the task to qualify lead originating from LinkedIn Ads and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-linkedin-ads-freshsales.json",
    "title": "Qualify lead from LinkedIn Ads and send to Freshsales",
    "description": "Automate the task to qualify lead originating from LinkedIn Ads and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-linkedin-ads-gmail.json",
    "title": "Qualify lead from LinkedIn Ads and send to Gmail",
    "description": "Automate the task to qualify lead originating from LinkedIn Ads and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "score-lead-with-ai-linkedin-ads-salesforce.json",
    "title": "Score lead with ai from LinkedIn Ads and send to Salesforce",
    "description": "Automate the task to score lead with AI originating from LinkedIn Ads and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-linkedin-ads-hubspot.json",
    "title": "Score lead with ai from LinkedIn Ads and send to HubSpot",
    "description": "Automate the task to score lead with AI originating from LinkedIn Ads and then send the result to HubSpot. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "HubSpot",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-linkedin-ads-pipedrive.json",
    "title": "Score lead with ai from LinkedIn Ads and send to Pipedrive",
    "description": "Automate the task to score lead with AI originating from LinkedIn Ads and then send the result to Pipedrive. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Pipedrive",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-linkedin-ads-zoho-crm.json",
    "title": "Score lead with ai from LinkedIn Ads and send to Zoho CRM",
    "description": "Automate the task to score lead with AI originating from LinkedIn Ads and then send the result to Zoho CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Zoho CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-linkedin-ads-copper.json",
    "title": "Score lead with ai from LinkedIn Ads and send to Copper",
    "description": "Automate the task to score lead with AI originating from LinkedIn Ads and then send the result to Copper. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Copper",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-linkedin-ads-freshsales.json",
    "title": "Score lead with ai from LinkedIn Ads and send to Freshsales",
    "description": "Automate the task to score lead with AI originating from LinkedIn Ads and then send the result to Freshsales. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Freshsales",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-linkedin-ads-gmail.json",
    "title": "Score lead with ai from LinkedIn Ads and send to Gmail",
    "description": "Automate the task to score lead with AI originating from LinkedIn Ads and then send the result to Gmail. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Gmail",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "add-lead-to-crm-linkedin-ads-salesforce.json",
    "title": "Add lead to crm from LinkedIn Ads and send to Salesforce",
    "description": "Automate the task to add lead to CRM originating from LinkedIn Ads and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-linkedin-ads-hubspot.json",
    "title": "Add lead to crm from LinkedIn Ads and send to HubSpot",
    "description": "Automate the task to add lead to CRM originating from LinkedIn Ads and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-linkedin-ads-pipedrive.json",
    "title": "Add lead to crm from LinkedIn Ads and send to Pipedrive",
    "description": "Automate the task to add lead to CRM originating from LinkedIn Ads and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-linkedin-ads-zoho-crm.json",
    "title": "Add lead to crm from LinkedIn Ads and send to Zoho CRM",
    "description": "Automate the task to add lead to CRM originating from LinkedIn Ads and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-linkedin-ads-copper.json",
    "title": "Add lead to crm from LinkedIn Ads and send to Copper",
    "description": "Automate the task to add lead to CRM originating from LinkedIn Ads and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-linkedin-ads-freshsales.json",
    "title": "Add lead to crm from LinkedIn Ads and send to Freshsales",
    "description": "Automate the task to add lead to CRM originating from LinkedIn Ads and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-linkedin-ads-gmail.json",
    "title": "Add lead to crm from LinkedIn Ads and send to Gmail",
    "description": "Automate the task to add lead to CRM originating from LinkedIn Ads and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-linkedin-ads-salesforce.json",
    "title": "Schedule follow-up email from LinkedIn Ads and send to Salesforce",
    "description": "Automate the task to schedule follow-up email originating from LinkedIn Ads and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-linkedin-ads-hubspot.json",
    "title": "Schedule follow-up email from LinkedIn Ads and send to HubSpot",
    "description": "Automate the task to schedule follow-up email originating from LinkedIn Ads and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-linkedin-ads-pipedrive.json",
    "title": "Schedule follow-up email from LinkedIn Ads and send to Pipedrive",
    "description": "Automate the task to schedule follow-up email originating from LinkedIn Ads and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-linkedin-ads-zoho-crm.json",
    "title": "Schedule follow-up email from LinkedIn Ads and send to Zoho CRM",
    "description": "Automate the task to schedule follow-up email originating from LinkedIn Ads and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-linkedin-ads-copper.json",
    "title": "Schedule follow-up email from LinkedIn Ads and send to Copper",
    "description": "Automate the task to schedule follow-up email originating from LinkedIn Ads and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-linkedin-ads-freshsales.json",
    "title": "Schedule follow-up email from LinkedIn Ads and send to Freshsales",
    "description": "Automate the task to schedule follow-up email originating from LinkedIn Ads and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-linkedin-ads-gmail.json",
    "title": "Schedule follow-up email from LinkedIn Ads and send to Gmail",
    "description": "Automate the task to schedule follow-up email originating from LinkedIn Ads and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-linkedin-ads-salesforce.json",
    "title": "Create deal from LinkedIn Ads and send to Salesforce",
    "description": "Automate the task to create deal originating from LinkedIn Ads and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-linkedin-ads-hubspot.json",
    "title": "Create deal from LinkedIn Ads and send to HubSpot",
    "description": "Automate the task to create deal originating from LinkedIn Ads and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-linkedin-ads-pipedrive.json",
    "title": "Create deal from LinkedIn Ads and send to Pipedrive",
    "description": "Automate the task to create deal originating from LinkedIn Ads and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-linkedin-ads-zoho-crm.json",
    "title": "Create deal from LinkedIn Ads and send to Zoho CRM",
    "description": "Automate the task to create deal originating from LinkedIn Ads and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-linkedin-ads-copper.json",
    "title": "Create deal from LinkedIn Ads and send to Copper",
    "description": "Automate the task to create deal originating from LinkedIn Ads and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-linkedin-ads-freshsales.json",
    "title": "Create deal from LinkedIn Ads and send to Freshsales",
    "description": "Automate the task to create deal originating from LinkedIn Ads and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-linkedin-ads-gmail.json",
    "title": "Create deal from LinkedIn Ads and send to Gmail",
    "description": "Automate the task to create deal originating from LinkedIn Ads and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-linkedin-ads-salesforce.json",
    "title": "Assign to salesperson from LinkedIn Ads and send to Salesforce",
    "description": "Automate the task to assign to salesperson originating from LinkedIn Ads and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-linkedin-ads-hubspot.json",
    "title": "Assign to salesperson from LinkedIn Ads and send to HubSpot",
    "description": "Automate the task to assign to salesperson originating from LinkedIn Ads and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-linkedin-ads-pipedrive.json",
    "title": "Assign to salesperson from LinkedIn Ads and send to Pipedrive",
    "description": "Automate the task to assign to salesperson originating from LinkedIn Ads and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-linkedin-ads-zoho-crm.json",
    "title": "Assign to salesperson from LinkedIn Ads and send to Zoho CRM",
    "description": "Automate the task to assign to salesperson originating from LinkedIn Ads and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-linkedin-ads-copper.json",
    "title": "Assign to salesperson from LinkedIn Ads and send to Copper",
    "description": "Automate the task to assign to salesperson originating from LinkedIn Ads and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-linkedin-ads-freshsales.json",
    "title": "Assign to salesperson from LinkedIn Ads and send to Freshsales",
    "description": "Automate the task to assign to salesperson originating from LinkedIn Ads and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-linkedin-ads-gmail.json",
    "title": "Assign to salesperson from LinkedIn Ads and send to Gmail",
    "description": "Automate the task to assign to salesperson originating from LinkedIn Ads and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-linkedin-ads-salesforce.json",
    "title": "Update lead status from LinkedIn Ads and send to Salesforce",
    "description": "Automate the task to update lead status originating from LinkedIn Ads and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-linkedin-ads-hubspot.json",
    "title": "Update lead status from LinkedIn Ads and send to HubSpot",
    "description": "Automate the task to update lead status originating from LinkedIn Ads and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-linkedin-ads-pipedrive.json",
    "title": "Update lead status from LinkedIn Ads and send to Pipedrive",
    "description": "Automate the task to update lead status originating from LinkedIn Ads and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-linkedin-ads-zoho-crm.json",
    "title": "Update lead status from LinkedIn Ads and send to Zoho CRM",
    "description": "Automate the task to update lead status originating from LinkedIn Ads and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-linkedin-ads-copper.json",
    "title": "Update lead status from LinkedIn Ads and send to Copper",
    "description": "Automate the task to update lead status originating from LinkedIn Ads and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-linkedin-ads-freshsales.json",
    "title": "Update lead status from LinkedIn Ads and send to Freshsales",
    "description": "Automate the task to update lead status originating from LinkedIn Ads and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-linkedin-ads-gmail.json",
    "title": "Update lead status from LinkedIn Ads and send to Gmail",
    "description": "Automate the task to update lead status originating from LinkedIn Ads and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "LinkedIn Ads",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn Ads",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-web-form-salesforce.json",
    "title": "Capture lead from Web form and send to Salesforce",
    "description": "Automate the task to capture lead originating from Web form and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-web-form-hubspot.json",
    "title": "Capture lead from Web form and send to HubSpot",
    "description": "Automate the task to capture lead originating from Web form and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-web-form-pipedrive.json",
    "title": "Capture lead from Web form and send to Pipedrive",
    "description": "Automate the task to capture lead originating from Web form and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-web-form-zoho-crm.json",
    "title": "Capture lead from Web form and send to Zoho CRM",
    "description": "Automate the task to capture lead originating from Web form and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-web-form-copper.json",
    "title": "Capture lead from Web form and send to Copper",
    "description": "Automate the task to capture lead originating from Web form and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-web-form-freshsales.json",
    "title": "Capture lead from Web form and send to Freshsales",
    "description": "Automate the task to capture lead originating from Web form and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-web-form-gmail.json",
    "title": "Capture lead from Web form and send to Gmail",
    "description": "Automate the task to capture lead originating from Web form and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-web-form-salesforce.json",
    "title": "Qualify lead from Web form and send to Salesforce",
    "description": "Automate the task to qualify lead originating from Web form and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-web-form-hubspot.json",
    "title": "Qualify lead from Web form and send to HubSpot",
    "description": "Automate the task to qualify lead originating from Web form and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-web-form-pipedrive.json",
    "title": "Qualify lead from Web form and send to Pipedrive",
    "description": "Automate the task to qualify lead originating from Web form and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-web-form-zoho-crm.json",
    "title": "Qualify lead from Web form and send to Zoho CRM",
    "description": "Automate the task to qualify lead originating from Web form and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-web-form-copper.json",
    "title": "Qualify lead from Web form and send to Copper",
    "description": "Automate the task to qualify lead originating from Web form and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-web-form-freshsales.json",
    "title": "Qualify lead from Web form and send to Freshsales",
    "description": "Automate the task to qualify lead originating from Web form and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-web-form-gmail.json",
    "title": "Qualify lead from Web form and send to Gmail",
    "description": "Automate the task to qualify lead originating from Web form and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "score-lead-with-ai-web-form-salesforce.json",
    "title": "Score lead with ai from Web form and send to Salesforce",
    "description": "Automate the task to score lead with AI originating from Web form and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-web-form-hubspot.json",
    "title": "Score lead with ai from Web form and send to HubSpot",
    "description": "Automate the task to score lead with AI originating from Web form and then send the result to HubSpot. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "HubSpot",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-web-form-pipedrive.json",
    "title": "Score lead with ai from Web form and send to Pipedrive",
    "description": "Automate the task to score lead with AI originating from Web form and then send the result to Pipedrive. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Pipedrive",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-web-form-zoho-crm.json",
    "title": "Score lead with ai from Web form and send to Zoho CRM",
    "description": "Automate the task to score lead with AI originating from Web form and then send the result to Zoho CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Zoho CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-web-form-copper.json",
    "title": "Score lead with ai from Web form and send to Copper",
    "description": "Automate the task to score lead with AI originating from Web form and then send the result to Copper. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Copper",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-web-form-freshsales.json",
    "title": "Score lead with ai from Web form and send to Freshsales",
    "description": "Automate the task to score lead with AI originating from Web form and then send the result to Freshsales. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Freshsales",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-web-form-gmail.json",
    "title": "Score lead with ai from Web form and send to Gmail",
    "description": "Automate the task to score lead with AI originating from Web form and then send the result to Gmail. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Gmail",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "add-lead-to-crm-web-form-salesforce.json",
    "title": "Add lead to crm from Web form and send to Salesforce",
    "description": "Automate the task to add lead to CRM originating from Web form and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-web-form-hubspot.json",
    "title": "Add lead to crm from Web form and send to HubSpot",
    "description": "Automate the task to add lead to CRM originating from Web form and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-web-form-pipedrive.json",
    "title": "Add lead to crm from Web form and send to Pipedrive",
    "description": "Automate the task to add lead to CRM originating from Web form and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-web-form-zoho-crm.json",
    "title": "Add lead to crm from Web form and send to Zoho CRM",
    "description": "Automate the task to add lead to CRM originating from Web form and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-web-form-copper.json",
    "title": "Add lead to crm from Web form and send to Copper",
    "description": "Automate the task to add lead to CRM originating from Web form and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-web-form-freshsales.json",
    "title": "Add lead to crm from Web form and send to Freshsales",
    "description": "Automate the task to add lead to CRM originating from Web form and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-web-form-gmail.json",
    "title": "Add lead to crm from Web form and send to Gmail",
    "description": "Automate the task to add lead to CRM originating from Web form and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-web-form-salesforce.json",
    "title": "Schedule follow-up email from Web form and send to Salesforce",
    "description": "Automate the task to schedule follow-up email originating from Web form and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-web-form-hubspot.json",
    "title": "Schedule follow-up email from Web form and send to HubSpot",
    "description": "Automate the task to schedule follow-up email originating from Web form and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-web-form-pipedrive.json",
    "title": "Schedule follow-up email from Web form and send to Pipedrive",
    "description": "Automate the task to schedule follow-up email originating from Web form and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-web-form-zoho-crm.json",
    "title": "Schedule follow-up email from Web form and send to Zoho CRM",
    "description": "Automate the task to schedule follow-up email originating from Web form and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-web-form-copper.json",
    "title": "Schedule follow-up email from Web form and send to Copper",
    "description": "Automate the task to schedule follow-up email originating from Web form and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-web-form-freshsales.json",
    "title": "Schedule follow-up email from Web form and send to Freshsales",
    "description": "Automate the task to schedule follow-up email originating from Web form and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-follow-up-email-web-form-gmail.json",
    "title": "Schedule follow-up email from Web form and send to Gmail",
    "description": "Automate the task to schedule follow-up email originating from Web form and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-web-form-salesforce.json",
    "title": "Create deal from Web form and send to Salesforce",
    "description": "Automate the task to create deal originating from Web form and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-web-form-hubspot.json",
    "title": "Create deal from Web form and send to HubSpot",
    "description": "Automate the task to create deal originating from Web form and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-web-form-pipedrive.json",
    "title": "Create deal from Web form and send to Pipedrive",
    "description": "Automate the task to create deal originating from Web form and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-web-form-zoho-crm.json",
    "title": "Create deal from Web form and send to Zoho CRM",
    "description": "Automate the task to create deal originating from Web form and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-web-form-copper.json",
    "title": "Create deal from Web form and send to Copper",
    "description": "Automate the task to create deal originating from Web form and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-web-form-freshsales.json",
    "title": "Create deal from Web form and send to Freshsales",
    "description": "Automate the task to create deal originating from Web form and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-deal-web-form-gmail.json",
    "title": "Create deal from Web form and send to Gmail",
    "description": "Automate the task to create deal originating from Web form and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-web-form-salesforce.json",
    "title": "Assign to salesperson from Web form and send to Salesforce",
    "description": "Automate the task to assign to salesperson originating from Web form and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-web-form-hubspot.json",
    "title": "Assign to salesperson from Web form and send to HubSpot",
    "description": "Automate the task to assign to salesperson originating from Web form and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-web-form-pipedrive.json",
    "title": "Assign to salesperson from Web form and send to Pipedrive",
    "description": "Automate the task to assign to salesperson originating from Web form and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-web-form-zoho-crm.json",
    "title": "Assign to salesperson from Web form and send to Zoho CRM",
    "description": "Automate the task to assign to salesperson originating from Web form and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-web-form-copper.json",
    "title": "Assign to salesperson from Web form and send to Copper",
    "description": "Automate the task to assign to salesperson originating from Web form and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-web-form-freshsales.json",
    "title": "Assign to salesperson from Web form and send to Freshsales",
    "description": "Automate the task to assign to salesperson originating from Web form and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-salesperson-web-form-gmail.json",
    "title": "Assign to salesperson from Web form and send to Gmail",
    "description": "Automate the task to assign to salesperson originating from Web form and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-web-form-salesforce.json",
    "title": "Update lead status from Web form and send to Salesforce",
    "description": "Automate the task to update lead status originating from Web form and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-web-form-hubspot.json",
    "title": "Update lead status from Web form and send to HubSpot",
    "description": "Automate the task to update lead status originating from Web form and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-web-form-pipedrive.json",
    "title": "Update lead status from Web form and send to Pipedrive",
    "description": "Automate the task to update lead status originating from Web form and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-web-form-zoho-crm.json",
    "title": "Update lead status from Web form and send to Zoho CRM",
    "description": "Automate the task to update lead status originating from Web form and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-web-form-copper.json",
    "title": "Update lead status from Web form and send to Copper",
    "description": "Automate the task to update lead status originating from Web form and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-web-form-freshsales.json",
    "title": "Update lead status from Web form and send to Freshsales",
    "description": "Automate the task to update lead status originating from Web form and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-lead-status-web-form-gmail.json",
    "title": "Update lead status from Web form and send to Gmail",
    "description": "Automate the task to update lead status originating from Web form and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Web form",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Web form",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-cold-email-replies-salesforce.json",
    "title": "Capture lead from Cold email replies and send to Salesforce",
    "description": "Automate the task to capture lead originating from Cold email replies and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-cold-email-replies-hubspot.json",
    "title": "Capture lead from Cold email replies and send to HubSpot",
    "description": "Automate the task to capture lead originating from Cold email replies and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-cold-email-replies-pipedrive.json",
    "title": "Capture lead from Cold email replies and send to Pipedrive",
    "description": "Automate the task to capture lead originating from Cold email replies and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-cold-email-replies-zoho-crm.json",
    "title": "Capture lead from Cold email replies and send to Zoho CRM",
    "description": "Automate the task to capture lead originating from Cold email replies and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-cold-email-replies-copper.json",
    "title": "Capture lead from Cold email replies and send to Copper",
    "description": "Automate the task to capture lead originating from Cold email replies and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-cold-email-replies-freshsales.json",
    "title": "Capture lead from Cold email replies and send to Freshsales",
    "description": "Automate the task to capture lead originating from Cold email replies and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "capture-lead-cold-email-replies-gmail.json",
    "title": "Capture lead from Cold email replies and send to Gmail",
    "description": "Automate the task to capture lead originating from Cold email replies and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-cold-email-replies-salesforce.json",
    "title": "Qualify lead from Cold email replies and send to Salesforce",
    "description": "Automate the task to qualify lead originating from Cold email replies and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-cold-email-replies-hubspot.json",
    "title": "Qualify lead from Cold email replies and send to HubSpot",
    "description": "Automate the task to qualify lead originating from Cold email replies and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-cold-email-replies-pipedrive.json",
    "title": "Qualify lead from Cold email replies and send to Pipedrive",
    "description": "Automate the task to qualify lead originating from Cold email replies and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-cold-email-replies-zoho-crm.json",
    "title": "Qualify lead from Cold email replies and send to Zoho CRM",
    "description": "Automate the task to qualify lead originating from Cold email replies and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-cold-email-replies-copper.json",
    "title": "Qualify lead from Cold email replies and send to Copper",
    "description": "Automate the task to qualify lead originating from Cold email replies and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-cold-email-replies-freshsales.json",
    "title": "Qualify lead from Cold email replies and send to Freshsales",
    "description": "Automate the task to qualify lead originating from Cold email replies and then send the result to Freshsales. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Freshsales",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-cold-email-replies-gmail.json",
    "title": "Qualify lead from Cold email replies and send to Gmail",
    "description": "Automate the task to qualify lead originating from Cold email replies and then send the result to Gmail. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Gmail",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "score-lead-with-ai-cold-email-replies-salesforce.json",
    "title": "Score lead with ai from Cold email replies and send to Salesforce",
    "description": "Automate the task to score lead with AI originating from Cold email replies and then send the result to Salesforce. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Salesforce",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-cold-email-replies-hubspot.json",
    "title": "Score lead with ai from Cold email replies and send to HubSpot",
    "description": "Automate the task to score lead with AI originating from Cold email replies and then send the result to HubSpot. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "HubSpot",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-cold-email-replies-pipedrive.json",
    "title": "Score lead with ai from Cold email replies and send to Pipedrive",
    "description": "Automate the task to score lead with AI originating from Cold email replies and then send the result to Pipedrive. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Pipedrive",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-cold-email-replies-zoho-crm.json",
    "title": "Score lead with ai from Cold email replies and send to Zoho CRM",
    "description": "Automate the task to score lead with AI originating from Cold email replies and then send the result to Zoho CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Zoho CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-cold-email-replies-copper.json",
    "title": "Score lead with ai from Cold email replies and send to Copper",
    "description": "Automate the task to score lead with AI originating from Cold email replies and then send the result to Copper. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Copper",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-cold-email-replies-freshsales.json",
    "title": "Score lead with ai from Cold email replies and send to Freshsales",
    "description": "Automate the task to score lead with AI originating from Cold email replies and then send the result to Freshsales. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Freshsales",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Freshsales",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "score-lead-with-ai-cold-email-replies-gmail.json",
    "title": "Score lead with ai from Cold email replies and send to Gmail",
    "description": "Automate the task to score lead with AI originating from Cold email replies and then send the result to Gmail. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Gmail",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Gmail",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "add-lead-to-crm-cold-email-replies-salesforce.json",
    "title": "Add lead to crm from Cold email replies and send to Salesforce",
    "description": "Automate the task to add lead to CRM originating from Cold email replies and then send the result to Salesforce. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Salesforce",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Salesforce",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-cold-email-replies-hubspot.json",
    "title": "Add lead to crm from Cold email replies and send to HubSpot",
    "description": "Automate the task to add lead to CRM originating from Cold email replies and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-cold-email-replies-pipedrive.json",
    "title": "Add lead to crm from Cold email replies and send to Pipedrive",
    "description": "Automate the task to add lead to CRM originating from Cold email replies and then send the result to Pipedrive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Pipedrive",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Pipedrive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-cold-email-replies-zoho-crm.json",
    "title": "Add lead to crm from Cold email replies and send to Zoho CRM",
    "description": "Automate the task to add lead to CRM originating from Cold email replies and then send the result to Zoho CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Zoho CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Zoho CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "add-lead-to-crm-cold-email-replies-copper.json",
    "title": "Add lead to crm from Cold email replies and send to Copper",
    "description": "Automate the task to add lead to CRM originating from Cold email replies and then send the result to Copper. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Sales Automation",
    "tools_used": [
      "Cold email replies",
      "Copper",
      "Slack"
    ],
    "trigger": "Incoming event from Cold email replies",
    "output": "Data sent to Copper",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-content-calendar-twitter.json",
    "title": "Create social media posts from Content calendar and send to Twitter",
    "description": "Automate the task to create social media posts originating from Content calendar and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-content-calendar-facebook.json",
    "title": "Create social media posts from Content calendar and send to Facebook",
    "description": "Automate the task to create social media posts originating from Content calendar and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-content-calendar-linkedin.json",
    "title": "Create social media posts from Content calendar and send to LinkedIn",
    "description": "Automate the task to create social media posts originating from Content calendar and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-content-calendar-instagram.json",
    "title": "Create social media posts from Content calendar and send to Instagram",
    "description": "Automate the task to create social media posts originating from Content calendar and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-content-calendar-mailchimp.json",
    "title": "Create social media posts from Content calendar and send to Mailchimp",
    "description": "Automate the task to create social media posts originating from Content calendar and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-content-calendar-sendgrid.json",
    "title": "Create social media posts from Content calendar and send to SendGrid",
    "description": "Automate the task to create social media posts originating from Content calendar and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-content-calendar-hubspot.json",
    "title": "Create social media posts from Content calendar and send to HubSpot",
    "description": "Automate the task to create social media posts originating from Content calendar and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-content-calendar-google-ads.json",
    "title": "Create social media posts from Content calendar and send to Google Ads",
    "description": "Automate the task to create social media posts originating from Content calendar and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-marketing-copy-with-ai-content-calendar-twitter.json",
    "title": "Generate marketing copy with ai from Content calendar and send to Twitter",
    "description": "Automate the task to generate marketing copy with AI originating from Content calendar and then send the result to Twitter. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Twitter",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-content-calendar-facebook.json",
    "title": "Generate marketing copy with ai from Content calendar and send to Facebook",
    "description": "Automate the task to generate marketing copy with AI originating from Content calendar and then send the result to Facebook. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Facebook",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-content-calendar-linkedin.json",
    "title": "Generate marketing copy with ai from Content calendar and send to LinkedIn",
    "description": "Automate the task to generate marketing copy with AI originating from Content calendar and then send the result to LinkedIn. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "LinkedIn",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-content-calendar-instagram.json",
    "title": "Generate marketing copy with ai from Content calendar and send to Instagram",
    "description": "Automate the task to generate marketing copy with AI originating from Content calendar and then send the result to Instagram. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Instagram",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-content-calendar-mailchimp.json",
    "title": "Generate marketing copy with ai from Content calendar and send to Mailchimp",
    "description": "Automate the task to generate marketing copy with AI originating from Content calendar and then send the result to Mailchimp. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Mailchimp",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-content-calendar-sendgrid.json",
    "title": "Generate marketing copy with ai from Content calendar and send to SendGrid",
    "description": "Automate the task to generate marketing copy with AI originating from Content calendar and then send the result to SendGrid. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "SendGrid",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-content-calendar-hubspot.json",
    "title": "Generate marketing copy with ai from Content calendar and send to HubSpot",
    "description": "Automate the task to generate marketing copy with AI originating from Content calendar and then send the result to HubSpot. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "HubSpot",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-content-calendar-google-ads.json",
    "title": "Generate marketing copy with ai from Content calendar and send to Google Ads",
    "description": "Automate the task to generate marketing copy with AI originating from Content calendar and then send the result to Google Ads. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Google Ads",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "schedule-posts-content-calendar-twitter.json",
    "title": "Schedule posts from Content calendar and send to Twitter",
    "description": "Automate the task to schedule posts originating from Content calendar and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-content-calendar-facebook.json",
    "title": "Schedule posts from Content calendar and send to Facebook",
    "description": "Automate the task to schedule posts originating from Content calendar and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-content-calendar-linkedin.json",
    "title": "Schedule posts from Content calendar and send to LinkedIn",
    "description": "Automate the task to schedule posts originating from Content calendar and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-content-calendar-instagram.json",
    "title": "Schedule posts from Content calendar and send to Instagram",
    "description": "Automate the task to schedule posts originating from Content calendar and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-content-calendar-mailchimp.json",
    "title": "Schedule posts from Content calendar and send to Mailchimp",
    "description": "Automate the task to schedule posts originating from Content calendar and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-content-calendar-sendgrid.json",
    "title": "Schedule posts from Content calendar and send to SendGrid",
    "description": "Automate the task to schedule posts originating from Content calendar and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-content-calendar-hubspot.json",
    "title": "Schedule posts from Content calendar and send to HubSpot",
    "description": "Automate the task to schedule posts originating from Content calendar and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-content-calendar-google-ads.json",
    "title": "Schedule posts from Content calendar and send to Google Ads",
    "description": "Automate the task to schedule posts originating from Content calendar and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-content-calendar-twitter.json",
    "title": "Update campaign analytics from Content calendar and send to Twitter",
    "description": "Automate the task to update campaign analytics originating from Content calendar and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-content-calendar-facebook.json",
    "title": "Update campaign analytics from Content calendar and send to Facebook",
    "description": "Automate the task to update campaign analytics originating from Content calendar and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-content-calendar-linkedin.json",
    "title": "Update campaign analytics from Content calendar and send to LinkedIn",
    "description": "Automate the task to update campaign analytics originating from Content calendar and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-content-calendar-instagram.json",
    "title": "Update campaign analytics from Content calendar and send to Instagram",
    "description": "Automate the task to update campaign analytics originating from Content calendar and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-content-calendar-mailchimp.json",
    "title": "Update campaign analytics from Content calendar and send to Mailchimp",
    "description": "Automate the task to update campaign analytics originating from Content calendar and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-content-calendar-sendgrid.json",
    "title": "Update campaign analytics from Content calendar and send to SendGrid",
    "description": "Automate the task to update campaign analytics originating from Content calendar and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-content-calendar-hubspot.json",
    "title": "Update campaign analytics from Content calendar and send to HubSpot",
    "description": "Automate the task to update campaign analytics originating from Content calendar and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-content-calendar-google-ads.json",
    "title": "Update campaign analytics from Content calendar and send to Google Ads",
    "description": "Automate the task to update campaign analytics originating from Content calendar and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-content-calendar-twitter.json",
    "title": "Send marketing email from Content calendar and send to Twitter",
    "description": "Automate the task to send marketing email originating from Content calendar and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-content-calendar-facebook.json",
    "title": "Send marketing email from Content calendar and send to Facebook",
    "description": "Automate the task to send marketing email originating from Content calendar and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-content-calendar-linkedin.json",
    "title": "Send marketing email from Content calendar and send to LinkedIn",
    "description": "Automate the task to send marketing email originating from Content calendar and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-content-calendar-instagram.json",
    "title": "Send marketing email from Content calendar and send to Instagram",
    "description": "Automate the task to send marketing email originating from Content calendar and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-content-calendar-mailchimp.json",
    "title": "Send marketing email from Content calendar and send to Mailchimp",
    "description": "Automate the task to send marketing email originating from Content calendar and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-content-calendar-sendgrid.json",
    "title": "Send marketing email from Content calendar and send to SendGrid",
    "description": "Automate the task to send marketing email originating from Content calendar and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-content-calendar-hubspot.json",
    "title": "Send marketing email from Content calendar and send to HubSpot",
    "description": "Automate the task to send marketing email originating from Content calendar and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-content-calendar-google-ads.json",
    "title": "Send marketing email from Content calendar and send to Google Ads",
    "description": "Automate the task to send marketing email originating from Content calendar and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-content-calendar-twitter.json",
    "title": "Create ad campaign from Content calendar and send to Twitter",
    "description": "Automate the task to create ad campaign originating from Content calendar and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-content-calendar-facebook.json",
    "title": "Create ad campaign from Content calendar and send to Facebook",
    "description": "Automate the task to create ad campaign originating from Content calendar and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-content-calendar-linkedin.json",
    "title": "Create ad campaign from Content calendar and send to LinkedIn",
    "description": "Automate the task to create ad campaign originating from Content calendar and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-content-calendar-instagram.json",
    "title": "Create ad campaign from Content calendar and send to Instagram",
    "description": "Automate the task to create ad campaign originating from Content calendar and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-content-calendar-mailchimp.json",
    "title": "Create ad campaign from Content calendar and send to Mailchimp",
    "description": "Automate the task to create ad campaign originating from Content calendar and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-content-calendar-sendgrid.json",
    "title": "Create ad campaign from Content calendar and send to SendGrid",
    "description": "Automate the task to create ad campaign originating from Content calendar and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-content-calendar-hubspot.json",
    "title": "Create ad campaign from Content calendar and send to HubSpot",
    "description": "Automate the task to create ad campaign originating from Content calendar and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-content-calendar-google-ads.json",
    "title": "Create ad campaign from Content calendar and send to Google Ads",
    "description": "Automate the task to create ad campaign originating from Content calendar and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-new-blog-post-twitter.json",
    "title": "Create social media posts from New blog post and send to Twitter",
    "description": "Automate the task to create social media posts originating from New blog post and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-new-blog-post-facebook.json",
    "title": "Create social media posts from New blog post and send to Facebook",
    "description": "Automate the task to create social media posts originating from New blog post and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-new-blog-post-linkedin.json",
    "title": "Create social media posts from New blog post and send to LinkedIn",
    "description": "Automate the task to create social media posts originating from New blog post and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-new-blog-post-instagram.json",
    "title": "Create social media posts from New blog post and send to Instagram",
    "description": "Automate the task to create social media posts originating from New blog post and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-new-blog-post-mailchimp.json",
    "title": "Create social media posts from New blog post and send to Mailchimp",
    "description": "Automate the task to create social media posts originating from New blog post and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-new-blog-post-sendgrid.json",
    "title": "Create social media posts from New blog post and send to SendGrid",
    "description": "Automate the task to create social media posts originating from New blog post and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-new-blog-post-hubspot.json",
    "title": "Create social media posts from New blog post and send to HubSpot",
    "description": "Automate the task to create social media posts originating from New blog post and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-new-blog-post-google-ads.json",
    "title": "Create social media posts from New blog post and send to Google Ads",
    "description": "Automate the task to create social media posts originating from New blog post and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-marketing-copy-with-ai-new-blog-post-twitter.json",
    "title": "Generate marketing copy with ai from New blog post and send to Twitter",
    "description": "Automate the task to generate marketing copy with AI originating from New blog post and then send the result to Twitter. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Twitter",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-new-blog-post-facebook.json",
    "title": "Generate marketing copy with ai from New blog post and send to Facebook",
    "description": "Automate the task to generate marketing copy with AI originating from New blog post and then send the result to Facebook. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Facebook",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-new-blog-post-linkedin.json",
    "title": "Generate marketing copy with ai from New blog post and send to LinkedIn",
    "description": "Automate the task to generate marketing copy with AI originating from New blog post and then send the result to LinkedIn. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "LinkedIn",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-new-blog-post-instagram.json",
    "title": "Generate marketing copy with ai from New blog post and send to Instagram",
    "description": "Automate the task to generate marketing copy with AI originating from New blog post and then send the result to Instagram. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Instagram",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-new-blog-post-mailchimp.json",
    "title": "Generate marketing copy with ai from New blog post and send to Mailchimp",
    "description": "Automate the task to generate marketing copy with AI originating from New blog post and then send the result to Mailchimp. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Mailchimp",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-new-blog-post-sendgrid.json",
    "title": "Generate marketing copy with ai from New blog post and send to SendGrid",
    "description": "Automate the task to generate marketing copy with AI originating from New blog post and then send the result to SendGrid. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "SendGrid",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-new-blog-post-hubspot.json",
    "title": "Generate marketing copy with ai from New blog post and send to HubSpot",
    "description": "Automate the task to generate marketing copy with AI originating from New blog post and then send the result to HubSpot. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "HubSpot",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-new-blog-post-google-ads.json",
    "title": "Generate marketing copy with ai from New blog post and send to Google Ads",
    "description": "Automate the task to generate marketing copy with AI originating from New blog post and then send the result to Google Ads. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Google Ads",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "schedule-posts-new-blog-post-twitter.json",
    "title": "Schedule posts from New blog post and send to Twitter",
    "description": "Automate the task to schedule posts originating from New blog post and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-new-blog-post-facebook.json",
    "title": "Schedule posts from New blog post and send to Facebook",
    "description": "Automate the task to schedule posts originating from New blog post and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-new-blog-post-linkedin.json",
    "title": "Schedule posts from New blog post and send to LinkedIn",
    "description": "Automate the task to schedule posts originating from New blog post and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-new-blog-post-instagram.json",
    "title": "Schedule posts from New blog post and send to Instagram",
    "description": "Automate the task to schedule posts originating from New blog post and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-new-blog-post-mailchimp.json",
    "title": "Schedule posts from New blog post and send to Mailchimp",
    "description": "Automate the task to schedule posts originating from New blog post and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-new-blog-post-sendgrid.json",
    "title": "Schedule posts from New blog post and send to SendGrid",
    "description": "Automate the task to schedule posts originating from New blog post and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-new-blog-post-hubspot.json",
    "title": "Schedule posts from New blog post and send to HubSpot",
    "description": "Automate the task to schedule posts originating from New blog post and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-new-blog-post-google-ads.json",
    "title": "Schedule posts from New blog post and send to Google Ads",
    "description": "Automate the task to schedule posts originating from New blog post and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-new-blog-post-twitter.json",
    "title": "Update campaign analytics from New blog post and send to Twitter",
    "description": "Automate the task to update campaign analytics originating from New blog post and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-new-blog-post-facebook.json",
    "title": "Update campaign analytics from New blog post and send to Facebook",
    "description": "Automate the task to update campaign analytics originating from New blog post and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-new-blog-post-linkedin.json",
    "title": "Update campaign analytics from New blog post and send to LinkedIn",
    "description": "Automate the task to update campaign analytics originating from New blog post and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-new-blog-post-instagram.json",
    "title": "Update campaign analytics from New blog post and send to Instagram",
    "description": "Automate the task to update campaign analytics originating from New blog post and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-new-blog-post-mailchimp.json",
    "title": "Update campaign analytics from New blog post and send to Mailchimp",
    "description": "Automate the task to update campaign analytics originating from New blog post and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-new-blog-post-sendgrid.json",
    "title": "Update campaign analytics from New blog post and send to SendGrid",
    "description": "Automate the task to update campaign analytics originating from New blog post and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-new-blog-post-hubspot.json",
    "title": "Update campaign analytics from New blog post and send to HubSpot",
    "description": "Automate the task to update campaign analytics originating from New blog post and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-new-blog-post-google-ads.json",
    "title": "Update campaign analytics from New blog post and send to Google Ads",
    "description": "Automate the task to update campaign analytics originating from New blog post and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-new-blog-post-twitter.json",
    "title": "Send marketing email from New blog post and send to Twitter",
    "description": "Automate the task to send marketing email originating from New blog post and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-new-blog-post-facebook.json",
    "title": "Send marketing email from New blog post and send to Facebook",
    "description": "Automate the task to send marketing email originating from New blog post and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-new-blog-post-linkedin.json",
    "title": "Send marketing email from New blog post and send to LinkedIn",
    "description": "Automate the task to send marketing email originating from New blog post and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-new-blog-post-instagram.json",
    "title": "Send marketing email from New blog post and send to Instagram",
    "description": "Automate the task to send marketing email originating from New blog post and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-new-blog-post-mailchimp.json",
    "title": "Send marketing email from New blog post and send to Mailchimp",
    "description": "Automate the task to send marketing email originating from New blog post and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-new-blog-post-sendgrid.json",
    "title": "Send marketing email from New blog post and send to SendGrid",
    "description": "Automate the task to send marketing email originating from New blog post and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-new-blog-post-hubspot.json",
    "title": "Send marketing email from New blog post and send to HubSpot",
    "description": "Automate the task to send marketing email originating from New blog post and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-new-blog-post-google-ads.json",
    "title": "Send marketing email from New blog post and send to Google Ads",
    "description": "Automate the task to send marketing email originating from New blog post and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-new-blog-post-twitter.json",
    "title": "Create ad campaign from New blog post and send to Twitter",
    "description": "Automate the task to create ad campaign originating from New blog post and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-new-blog-post-facebook.json",
    "title": "Create ad campaign from New blog post and send to Facebook",
    "description": "Automate the task to create ad campaign originating from New blog post and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-new-blog-post-linkedin.json",
    "title": "Create ad campaign from New blog post and send to LinkedIn",
    "description": "Automate the task to create ad campaign originating from New blog post and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-new-blog-post-instagram.json",
    "title": "Create ad campaign from New blog post and send to Instagram",
    "description": "Automate the task to create ad campaign originating from New blog post and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-new-blog-post-mailchimp.json",
    "title": "Create ad campaign from New blog post and send to Mailchimp",
    "description": "Automate the task to create ad campaign originating from New blog post and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-new-blog-post-sendgrid.json",
    "title": "Create ad campaign from New blog post and send to SendGrid",
    "description": "Automate the task to create ad campaign originating from New blog post and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-new-blog-post-hubspot.json",
    "title": "Create ad campaign from New blog post and send to HubSpot",
    "description": "Automate the task to create ad campaign originating from New blog post and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-new-blog-post-google-ads.json",
    "title": "Create ad campaign from New blog post and send to Google Ads",
    "description": "Automate the task to create ad campaign originating from New blog post and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "New blog post",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from New blog post",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-product-launch-doc-twitter.json",
    "title": "Create social media posts from Product launch doc and send to Twitter",
    "description": "Automate the task to create social media posts originating from Product launch doc and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-product-launch-doc-facebook.json",
    "title": "Create social media posts from Product launch doc and send to Facebook",
    "description": "Automate the task to create social media posts originating from Product launch doc and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-product-launch-doc-linkedin.json",
    "title": "Create social media posts from Product launch doc and send to LinkedIn",
    "description": "Automate the task to create social media posts originating from Product launch doc and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-product-launch-doc-instagram.json",
    "title": "Create social media posts from Product launch doc and send to Instagram",
    "description": "Automate the task to create social media posts originating from Product launch doc and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-product-launch-doc-mailchimp.json",
    "title": "Create social media posts from Product launch doc and send to Mailchimp",
    "description": "Automate the task to create social media posts originating from Product launch doc and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-product-launch-doc-sendgrid.json",
    "title": "Create social media posts from Product launch doc and send to SendGrid",
    "description": "Automate the task to create social media posts originating from Product launch doc and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-product-launch-doc-hubspot.json",
    "title": "Create social media posts from Product launch doc and send to HubSpot",
    "description": "Automate the task to create social media posts originating from Product launch doc and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-product-launch-doc-google-ads.json",
    "title": "Create social media posts from Product launch doc and send to Google Ads",
    "description": "Automate the task to create social media posts originating from Product launch doc and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-marketing-copy-with-ai-product-launch-doc-twitter.json",
    "title": "Generate marketing copy with ai from Product launch doc and send to Twitter",
    "description": "Automate the task to generate marketing copy with AI originating from Product launch doc and then send the result to Twitter. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Twitter",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-product-launch-doc-facebook.json",
    "title": "Generate marketing copy with ai from Product launch doc and send to Facebook",
    "description": "Automate the task to generate marketing copy with AI originating from Product launch doc and then send the result to Facebook. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Facebook",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-product-launch-doc-linkedin.json",
    "title": "Generate marketing copy with ai from Product launch doc and send to LinkedIn",
    "description": "Automate the task to generate marketing copy with AI originating from Product launch doc and then send the result to LinkedIn. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "LinkedIn",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-product-launch-doc-instagram.json",
    "title": "Generate marketing copy with ai from Product launch doc and send to Instagram",
    "description": "Automate the task to generate marketing copy with AI originating from Product launch doc and then send the result to Instagram. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Instagram",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-product-launch-doc-mailchimp.json",
    "title": "Generate marketing copy with ai from Product launch doc and send to Mailchimp",
    "description": "Automate the task to generate marketing copy with AI originating from Product launch doc and then send the result to Mailchimp. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Mailchimp",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-product-launch-doc-sendgrid.json",
    "title": "Generate marketing copy with ai from Product launch doc and send to SendGrid",
    "description": "Automate the task to generate marketing copy with AI originating from Product launch doc and then send the result to SendGrid. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "SendGrid",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-product-launch-doc-hubspot.json",
    "title": "Generate marketing copy with ai from Product launch doc and send to HubSpot",
    "description": "Automate the task to generate marketing copy with AI originating from Product launch doc and then send the result to HubSpot. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "HubSpot",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-product-launch-doc-google-ads.json",
    "title": "Generate marketing copy with ai from Product launch doc and send to Google Ads",
    "description": "Automate the task to generate marketing copy with AI originating from Product launch doc and then send the result to Google Ads. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Google Ads",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "schedule-posts-product-launch-doc-twitter.json",
    "title": "Schedule posts from Product launch doc and send to Twitter",
    "description": "Automate the task to schedule posts originating from Product launch doc and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-product-launch-doc-facebook.json",
    "title": "Schedule posts from Product launch doc and send to Facebook",
    "description": "Automate the task to schedule posts originating from Product launch doc and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-product-launch-doc-linkedin.json",
    "title": "Schedule posts from Product launch doc and send to LinkedIn",
    "description": "Automate the task to schedule posts originating from Product launch doc and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-product-launch-doc-instagram.json",
    "title": "Schedule posts from Product launch doc and send to Instagram",
    "description": "Automate the task to schedule posts originating from Product launch doc and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-product-launch-doc-mailchimp.json",
    "title": "Schedule posts from Product launch doc and send to Mailchimp",
    "description": "Automate the task to schedule posts originating from Product launch doc and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-product-launch-doc-sendgrid.json",
    "title": "Schedule posts from Product launch doc and send to SendGrid",
    "description": "Automate the task to schedule posts originating from Product launch doc and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-product-launch-doc-hubspot.json",
    "title": "Schedule posts from Product launch doc and send to HubSpot",
    "description": "Automate the task to schedule posts originating from Product launch doc and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-product-launch-doc-google-ads.json",
    "title": "Schedule posts from Product launch doc and send to Google Ads",
    "description": "Automate the task to schedule posts originating from Product launch doc and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-product-launch-doc-twitter.json",
    "title": "Update campaign analytics from Product launch doc and send to Twitter",
    "description": "Automate the task to update campaign analytics originating from Product launch doc and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-product-launch-doc-facebook.json",
    "title": "Update campaign analytics from Product launch doc and send to Facebook",
    "description": "Automate the task to update campaign analytics originating from Product launch doc and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-product-launch-doc-linkedin.json",
    "title": "Update campaign analytics from Product launch doc and send to LinkedIn",
    "description": "Automate the task to update campaign analytics originating from Product launch doc and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-product-launch-doc-instagram.json",
    "title": "Update campaign analytics from Product launch doc and send to Instagram",
    "description": "Automate the task to update campaign analytics originating from Product launch doc and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-product-launch-doc-mailchimp.json",
    "title": "Update campaign analytics from Product launch doc and send to Mailchimp",
    "description": "Automate the task to update campaign analytics originating from Product launch doc and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-product-launch-doc-sendgrid.json",
    "title": "Update campaign analytics from Product launch doc and send to SendGrid",
    "description": "Automate the task to update campaign analytics originating from Product launch doc and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-product-launch-doc-hubspot.json",
    "title": "Update campaign analytics from Product launch doc and send to HubSpot",
    "description": "Automate the task to update campaign analytics originating from Product launch doc and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-product-launch-doc-google-ads.json",
    "title": "Update campaign analytics from Product launch doc and send to Google Ads",
    "description": "Automate the task to update campaign analytics originating from Product launch doc and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-product-launch-doc-twitter.json",
    "title": "Send marketing email from Product launch doc and send to Twitter",
    "description": "Automate the task to send marketing email originating from Product launch doc and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-product-launch-doc-facebook.json",
    "title": "Send marketing email from Product launch doc and send to Facebook",
    "description": "Automate the task to send marketing email originating from Product launch doc and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-product-launch-doc-linkedin.json",
    "title": "Send marketing email from Product launch doc and send to LinkedIn",
    "description": "Automate the task to send marketing email originating from Product launch doc and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-product-launch-doc-instagram.json",
    "title": "Send marketing email from Product launch doc and send to Instagram",
    "description": "Automate the task to send marketing email originating from Product launch doc and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-product-launch-doc-mailchimp.json",
    "title": "Send marketing email from Product launch doc and send to Mailchimp",
    "description": "Automate the task to send marketing email originating from Product launch doc and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-product-launch-doc-sendgrid.json",
    "title": "Send marketing email from Product launch doc and send to SendGrid",
    "description": "Automate the task to send marketing email originating from Product launch doc and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-product-launch-doc-hubspot.json",
    "title": "Send marketing email from Product launch doc and send to HubSpot",
    "description": "Automate the task to send marketing email originating from Product launch doc and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-product-launch-doc-google-ads.json",
    "title": "Send marketing email from Product launch doc and send to Google Ads",
    "description": "Automate the task to send marketing email originating from Product launch doc and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-product-launch-doc-twitter.json",
    "title": "Create ad campaign from Product launch doc and send to Twitter",
    "description": "Automate the task to create ad campaign originating from Product launch doc and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-product-launch-doc-facebook.json",
    "title": "Create ad campaign from Product launch doc and send to Facebook",
    "description": "Automate the task to create ad campaign originating from Product launch doc and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-product-launch-doc-linkedin.json",
    "title": "Create ad campaign from Product launch doc and send to LinkedIn",
    "description": "Automate the task to create ad campaign originating from Product launch doc and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-product-launch-doc-instagram.json",
    "title": "Create ad campaign from Product launch doc and send to Instagram",
    "description": "Automate the task to create ad campaign originating from Product launch doc and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-product-launch-doc-mailchimp.json",
    "title": "Create ad campaign from Product launch doc and send to Mailchimp",
    "description": "Automate the task to create ad campaign originating from Product launch doc and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-product-launch-doc-sendgrid.json",
    "title": "Create ad campaign from Product launch doc and send to SendGrid",
    "description": "Automate the task to create ad campaign originating from Product launch doc and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-product-launch-doc-hubspot.json",
    "title": "Create ad campaign from Product launch doc and send to HubSpot",
    "description": "Automate the task to create ad campaign originating from Product launch doc and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-product-launch-doc-google-ads.json",
    "title": "Create ad campaign from Product launch doc and send to Google Ads",
    "description": "Automate the task to create ad campaign originating from Product launch doc and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Product launch doc",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from Product launch doc",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-campaign-brief-twitter.json",
    "title": "Create social media posts from Campaign brief and send to Twitter",
    "description": "Automate the task to create social media posts originating from Campaign brief and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-campaign-brief-facebook.json",
    "title": "Create social media posts from Campaign brief and send to Facebook",
    "description": "Automate the task to create social media posts originating from Campaign brief and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-campaign-brief-linkedin.json",
    "title": "Create social media posts from Campaign brief and send to LinkedIn",
    "description": "Automate the task to create social media posts originating from Campaign brief and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-campaign-brief-instagram.json",
    "title": "Create social media posts from Campaign brief and send to Instagram",
    "description": "Automate the task to create social media posts originating from Campaign brief and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-campaign-brief-mailchimp.json",
    "title": "Create social media posts from Campaign brief and send to Mailchimp",
    "description": "Automate the task to create social media posts originating from Campaign brief and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-campaign-brief-sendgrid.json",
    "title": "Create social media posts from Campaign brief and send to SendGrid",
    "description": "Automate the task to create social media posts originating from Campaign brief and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-campaign-brief-hubspot.json",
    "title": "Create social media posts from Campaign brief and send to HubSpot",
    "description": "Automate the task to create social media posts originating from Campaign brief and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-campaign-brief-google-ads.json",
    "title": "Create social media posts from Campaign brief and send to Google Ads",
    "description": "Automate the task to create social media posts originating from Campaign brief and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-marketing-copy-with-ai-campaign-brief-twitter.json",
    "title": "Generate marketing copy with ai from Campaign brief and send to Twitter",
    "description": "Automate the task to generate marketing copy with AI originating from Campaign brief and then send the result to Twitter. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Twitter",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-campaign-brief-facebook.json",
    "title": "Generate marketing copy with ai from Campaign brief and send to Facebook",
    "description": "Automate the task to generate marketing copy with AI originating from Campaign brief and then send the result to Facebook. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Facebook",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-campaign-brief-linkedin.json",
    "title": "Generate marketing copy with ai from Campaign brief and send to LinkedIn",
    "description": "Automate the task to generate marketing copy with AI originating from Campaign brief and then send the result to LinkedIn. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "LinkedIn",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-campaign-brief-instagram.json",
    "title": "Generate marketing copy with ai from Campaign brief and send to Instagram",
    "description": "Automate the task to generate marketing copy with AI originating from Campaign brief and then send the result to Instagram. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Instagram",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-campaign-brief-mailchimp.json",
    "title": "Generate marketing copy with ai from Campaign brief and send to Mailchimp",
    "description": "Automate the task to generate marketing copy with AI originating from Campaign brief and then send the result to Mailchimp. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Mailchimp",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-campaign-brief-sendgrid.json",
    "title": "Generate marketing copy with ai from Campaign brief and send to SendGrid",
    "description": "Automate the task to generate marketing copy with AI originating from Campaign brief and then send the result to SendGrid. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "SendGrid",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-campaign-brief-hubspot.json",
    "title": "Generate marketing copy with ai from Campaign brief and send to HubSpot",
    "description": "Automate the task to generate marketing copy with AI originating from Campaign brief and then send the result to HubSpot. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "HubSpot",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-campaign-brief-google-ads.json",
    "title": "Generate marketing copy with ai from Campaign brief and send to Google Ads",
    "description": "Automate the task to generate marketing copy with AI originating from Campaign brief and then send the result to Google Ads. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Google Ads",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "schedule-posts-campaign-brief-twitter.json",
    "title": "Schedule posts from Campaign brief and send to Twitter",
    "description": "Automate the task to schedule posts originating from Campaign brief and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-campaign-brief-facebook.json",
    "title": "Schedule posts from Campaign brief and send to Facebook",
    "description": "Automate the task to schedule posts originating from Campaign brief and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-campaign-brief-linkedin.json",
    "title": "Schedule posts from Campaign brief and send to LinkedIn",
    "description": "Automate the task to schedule posts originating from Campaign brief and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-campaign-brief-instagram.json",
    "title": "Schedule posts from Campaign brief and send to Instagram",
    "description": "Automate the task to schedule posts originating from Campaign brief and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-campaign-brief-mailchimp.json",
    "title": "Schedule posts from Campaign brief and send to Mailchimp",
    "description": "Automate the task to schedule posts originating from Campaign brief and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-campaign-brief-sendgrid.json",
    "title": "Schedule posts from Campaign brief and send to SendGrid",
    "description": "Automate the task to schedule posts originating from Campaign brief and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-campaign-brief-hubspot.json",
    "title": "Schedule posts from Campaign brief and send to HubSpot",
    "description": "Automate the task to schedule posts originating from Campaign brief and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-campaign-brief-google-ads.json",
    "title": "Schedule posts from Campaign brief and send to Google Ads",
    "description": "Automate the task to schedule posts originating from Campaign brief and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-campaign-brief-twitter.json",
    "title": "Update campaign analytics from Campaign brief and send to Twitter",
    "description": "Automate the task to update campaign analytics originating from Campaign brief and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-campaign-brief-facebook.json",
    "title": "Update campaign analytics from Campaign brief and send to Facebook",
    "description": "Automate the task to update campaign analytics originating from Campaign brief and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-campaign-brief-linkedin.json",
    "title": "Update campaign analytics from Campaign brief and send to LinkedIn",
    "description": "Automate the task to update campaign analytics originating from Campaign brief and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-campaign-brief-instagram.json",
    "title": "Update campaign analytics from Campaign brief and send to Instagram",
    "description": "Automate the task to update campaign analytics originating from Campaign brief and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-campaign-brief-mailchimp.json",
    "title": "Update campaign analytics from Campaign brief and send to Mailchimp",
    "description": "Automate the task to update campaign analytics originating from Campaign brief and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-campaign-brief-sendgrid.json",
    "title": "Update campaign analytics from Campaign brief and send to SendGrid",
    "description": "Automate the task to update campaign analytics originating from Campaign brief and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-campaign-brief-hubspot.json",
    "title": "Update campaign analytics from Campaign brief and send to HubSpot",
    "description": "Automate the task to update campaign analytics originating from Campaign brief and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-campaign-brief-google-ads.json",
    "title": "Update campaign analytics from Campaign brief and send to Google Ads",
    "description": "Automate the task to update campaign analytics originating from Campaign brief and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-campaign-brief-twitter.json",
    "title": "Send marketing email from Campaign brief and send to Twitter",
    "description": "Automate the task to send marketing email originating from Campaign brief and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-campaign-brief-facebook.json",
    "title": "Send marketing email from Campaign brief and send to Facebook",
    "description": "Automate the task to send marketing email originating from Campaign brief and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-campaign-brief-linkedin.json",
    "title": "Send marketing email from Campaign brief and send to LinkedIn",
    "description": "Automate the task to send marketing email originating from Campaign brief and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-campaign-brief-instagram.json",
    "title": "Send marketing email from Campaign brief and send to Instagram",
    "description": "Automate the task to send marketing email originating from Campaign brief and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-campaign-brief-mailchimp.json",
    "title": "Send marketing email from Campaign brief and send to Mailchimp",
    "description": "Automate the task to send marketing email originating from Campaign brief and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-campaign-brief-sendgrid.json",
    "title": "Send marketing email from Campaign brief and send to SendGrid",
    "description": "Automate the task to send marketing email originating from Campaign brief and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-campaign-brief-hubspot.json",
    "title": "Send marketing email from Campaign brief and send to HubSpot",
    "description": "Automate the task to send marketing email originating from Campaign brief and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-campaign-brief-google-ads.json",
    "title": "Send marketing email from Campaign brief and send to Google Ads",
    "description": "Automate the task to send marketing email originating from Campaign brief and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-campaign-brief-twitter.json",
    "title": "Create ad campaign from Campaign brief and send to Twitter",
    "description": "Automate the task to create ad campaign originating from Campaign brief and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-campaign-brief-facebook.json",
    "title": "Create ad campaign from Campaign brief and send to Facebook",
    "description": "Automate the task to create ad campaign originating from Campaign brief and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-campaign-brief-linkedin.json",
    "title": "Create ad campaign from Campaign brief and send to LinkedIn",
    "description": "Automate the task to create ad campaign originating from Campaign brief and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-campaign-brief-instagram.json",
    "title": "Create ad campaign from Campaign brief and send to Instagram",
    "description": "Automate the task to create ad campaign originating from Campaign brief and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-campaign-brief-mailchimp.json",
    "title": "Create ad campaign from Campaign brief and send to Mailchimp",
    "description": "Automate the task to create ad campaign originating from Campaign brief and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-campaign-brief-sendgrid.json",
    "title": "Create ad campaign from Campaign brief and send to SendGrid",
    "description": "Automate the task to create ad campaign originating from Campaign brief and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-campaign-brief-hubspot.json",
    "title": "Create ad campaign from Campaign brief and send to HubSpot",
    "description": "Automate the task to create ad campaign originating from Campaign brief and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-campaign-brief-google-ads.json",
    "title": "Create ad campaign from Campaign brief and send to Google Ads",
    "description": "Automate the task to create ad campaign originating from Campaign brief and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Campaign brief",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from Campaign brief",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-airtable-campaign-table-twitter.json",
    "title": "Create social media posts from Airtable campaign table and send to Twitter",
    "description": "Automate the task to create social media posts originating from Airtable campaign table and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-airtable-campaign-table-facebook.json",
    "title": "Create social media posts from Airtable campaign table and send to Facebook",
    "description": "Automate the task to create social media posts originating from Airtable campaign table and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-airtable-campaign-table-linkedin.json",
    "title": "Create social media posts from Airtable campaign table and send to LinkedIn",
    "description": "Automate the task to create social media posts originating from Airtable campaign table and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-airtable-campaign-table-instagram.json",
    "title": "Create social media posts from Airtable campaign table and send to Instagram",
    "description": "Automate the task to create social media posts originating from Airtable campaign table and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-airtable-campaign-table-mailchimp.json",
    "title": "Create social media posts from Airtable campaign table and send to Mailchimp",
    "description": "Automate the task to create social media posts originating from Airtable campaign table and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-airtable-campaign-table-sendgrid.json",
    "title": "Create social media posts from Airtable campaign table and send to SendGrid",
    "description": "Automate the task to create social media posts originating from Airtable campaign table and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-airtable-campaign-table-hubspot.json",
    "title": "Create social media posts from Airtable campaign table and send to HubSpot",
    "description": "Automate the task to create social media posts originating from Airtable campaign table and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-airtable-campaign-table-google-ads.json",
    "title": "Create social media posts from Airtable campaign table and send to Google Ads",
    "description": "Automate the task to create social media posts originating from Airtable campaign table and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-marketing-copy-with-ai-airtable-campaign-table-twitter.json",
    "title": "Generate marketing copy with ai from Airtable campaign table and send to Twitter",
    "description": "Automate the task to generate marketing copy with AI originating from Airtable campaign table and then send the result to Twitter. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Twitter",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-airtable-campaign-table-facebook.json",
    "title": "Generate marketing copy with ai from Airtable campaign table and send to Facebook",
    "description": "Automate the task to generate marketing copy with AI originating from Airtable campaign table and then send the result to Facebook. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Facebook",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-airtable-campaign-table-linkedin.json",
    "title": "Generate marketing copy with ai from Airtable campaign table and send to LinkedIn",
    "description": "Automate the task to generate marketing copy with AI originating from Airtable campaign table and then send the result to LinkedIn. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "LinkedIn",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-airtable-campaign-table-instagram.json",
    "title": "Generate marketing copy with ai from Airtable campaign table and send to Instagram",
    "description": "Automate the task to generate marketing copy with AI originating from Airtable campaign table and then send the result to Instagram. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Instagram",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-airtable-campaign-table-mailchimp.json",
    "title": "Generate marketing copy with ai from Airtable campaign table and send to Mailchimp",
    "description": "Automate the task to generate marketing copy with AI originating from Airtable campaign table and then send the result to Mailchimp. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Mailchimp",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-airtable-campaign-table-sendgrid.json",
    "title": "Generate marketing copy with ai from Airtable campaign table and send to SendGrid",
    "description": "Automate the task to generate marketing copy with AI originating from Airtable campaign table and then send the result to SendGrid. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "SendGrid",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-airtable-campaign-table-hubspot.json",
    "title": "Generate marketing copy with ai from Airtable campaign table and send to HubSpot",
    "description": "Automate the task to generate marketing copy with AI originating from Airtable campaign table and then send the result to HubSpot. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "HubSpot",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-airtable-campaign-table-google-ads.json",
    "title": "Generate marketing copy with ai from Airtable campaign table and send to Google Ads",
    "description": "Automate the task to generate marketing copy with AI originating from Airtable campaign table and then send the result to Google Ads. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Google Ads",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "schedule-posts-airtable-campaign-table-twitter.json",
    "title": "Schedule posts from Airtable campaign table and send to Twitter",
    "description": "Automate the task to schedule posts originating from Airtable campaign table and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-airtable-campaign-table-facebook.json",
    "title": "Schedule posts from Airtable campaign table and send to Facebook",
    "description": "Automate the task to schedule posts originating from Airtable campaign table and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-airtable-campaign-table-linkedin.json",
    "title": "Schedule posts from Airtable campaign table and send to LinkedIn",
    "description": "Automate the task to schedule posts originating from Airtable campaign table and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-airtable-campaign-table-instagram.json",
    "title": "Schedule posts from Airtable campaign table and send to Instagram",
    "description": "Automate the task to schedule posts originating from Airtable campaign table and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-airtable-campaign-table-mailchimp.json",
    "title": "Schedule posts from Airtable campaign table and send to Mailchimp",
    "description": "Automate the task to schedule posts originating from Airtable campaign table and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-airtable-campaign-table-sendgrid.json",
    "title": "Schedule posts from Airtable campaign table and send to SendGrid",
    "description": "Automate the task to schedule posts originating from Airtable campaign table and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-airtable-campaign-table-hubspot.json",
    "title": "Schedule posts from Airtable campaign table and send to HubSpot",
    "description": "Automate the task to schedule posts originating from Airtable campaign table and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-posts-airtable-campaign-table-google-ads.json",
    "title": "Schedule posts from Airtable campaign table and send to Google Ads",
    "description": "Automate the task to schedule posts originating from Airtable campaign table and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-airtable-campaign-table-twitter.json",
    "title": "Update campaign analytics from Airtable campaign table and send to Twitter",
    "description": "Automate the task to update campaign analytics originating from Airtable campaign table and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-airtable-campaign-table-facebook.json",
    "title": "Update campaign analytics from Airtable campaign table and send to Facebook",
    "description": "Automate the task to update campaign analytics originating from Airtable campaign table and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-airtable-campaign-table-linkedin.json",
    "title": "Update campaign analytics from Airtable campaign table and send to LinkedIn",
    "description": "Automate the task to update campaign analytics originating from Airtable campaign table and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-airtable-campaign-table-instagram.json",
    "title": "Update campaign analytics from Airtable campaign table and send to Instagram",
    "description": "Automate the task to update campaign analytics originating from Airtable campaign table and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-airtable-campaign-table-mailchimp.json",
    "title": "Update campaign analytics from Airtable campaign table and send to Mailchimp",
    "description": "Automate the task to update campaign analytics originating from Airtable campaign table and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-airtable-campaign-table-sendgrid.json",
    "title": "Update campaign analytics from Airtable campaign table and send to SendGrid",
    "description": "Automate the task to update campaign analytics originating from Airtable campaign table and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-airtable-campaign-table-hubspot.json",
    "title": "Update campaign analytics from Airtable campaign table and send to HubSpot",
    "description": "Automate the task to update campaign analytics originating from Airtable campaign table and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-campaign-analytics-airtable-campaign-table-google-ads.json",
    "title": "Update campaign analytics from Airtable campaign table and send to Google Ads",
    "description": "Automate the task to update campaign analytics originating from Airtable campaign table and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-airtable-campaign-table-twitter.json",
    "title": "Send marketing email from Airtable campaign table and send to Twitter",
    "description": "Automate the task to send marketing email originating from Airtable campaign table and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-airtable-campaign-table-facebook.json",
    "title": "Send marketing email from Airtable campaign table and send to Facebook",
    "description": "Automate the task to send marketing email originating from Airtable campaign table and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-airtable-campaign-table-linkedin.json",
    "title": "Send marketing email from Airtable campaign table and send to LinkedIn",
    "description": "Automate the task to send marketing email originating from Airtable campaign table and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-airtable-campaign-table-instagram.json",
    "title": "Send marketing email from Airtable campaign table and send to Instagram",
    "description": "Automate the task to send marketing email originating from Airtable campaign table and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-airtable-campaign-table-mailchimp.json",
    "title": "Send marketing email from Airtable campaign table and send to Mailchimp",
    "description": "Automate the task to send marketing email originating from Airtable campaign table and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-airtable-campaign-table-sendgrid.json",
    "title": "Send marketing email from Airtable campaign table and send to SendGrid",
    "description": "Automate the task to send marketing email originating from Airtable campaign table and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-airtable-campaign-table-hubspot.json",
    "title": "Send marketing email from Airtable campaign table and send to HubSpot",
    "description": "Automate the task to send marketing email originating from Airtable campaign table and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-marketing-email-airtable-campaign-table-google-ads.json",
    "title": "Send marketing email from Airtable campaign table and send to Google Ads",
    "description": "Automate the task to send marketing email originating from Airtable campaign table and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-airtable-campaign-table-twitter.json",
    "title": "Create ad campaign from Airtable campaign table and send to Twitter",
    "description": "Automate the task to create ad campaign originating from Airtable campaign table and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-airtable-campaign-table-facebook.json",
    "title": "Create ad campaign from Airtable campaign table and send to Facebook",
    "description": "Automate the task to create ad campaign originating from Airtable campaign table and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-airtable-campaign-table-linkedin.json",
    "title": "Create ad campaign from Airtable campaign table and send to LinkedIn",
    "description": "Automate the task to create ad campaign originating from Airtable campaign table and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-airtable-campaign-table-instagram.json",
    "title": "Create ad campaign from Airtable campaign table and send to Instagram",
    "description": "Automate the task to create ad campaign originating from Airtable campaign table and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-airtable-campaign-table-mailchimp.json",
    "title": "Create ad campaign from Airtable campaign table and send to Mailchimp",
    "description": "Automate the task to create ad campaign originating from Airtable campaign table and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-airtable-campaign-table-sendgrid.json",
    "title": "Create ad campaign from Airtable campaign table and send to SendGrid",
    "description": "Automate the task to create ad campaign originating from Airtable campaign table and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-airtable-campaign-table-hubspot.json",
    "title": "Create ad campaign from Airtable campaign table and send to HubSpot",
    "description": "Automate the task to create ad campaign originating from Airtable campaign table and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-ad-campaign-airtable-campaign-table-google-ads.json",
    "title": "Create ad campaign from Airtable campaign table and send to Google Ads",
    "description": "Automate the task to create ad campaign originating from Airtable campaign table and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Airtable campaign table",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from Airtable campaign table",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-content-calendar-twitter-1.json",
    "title": "Create social media posts from Content calendar and send to Twitter",
    "description": "Automate the task to create social media posts originating from Content calendar and then send the result to Twitter. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Twitter",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-content-calendar-facebook-1.json",
    "title": "Create social media posts from Content calendar and send to Facebook",
    "description": "Automate the task to create social media posts originating from Content calendar and then send the result to Facebook. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Facebook",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-content-calendar-linkedin-1.json",
    "title": "Create social media posts from Content calendar and send to LinkedIn",
    "description": "Automate the task to create social media posts originating from Content calendar and then send the result to LinkedIn. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "LinkedIn",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to LinkedIn",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-content-calendar-instagram-1.json",
    "title": "Create social media posts from Content calendar and send to Instagram",
    "description": "Automate the task to create social media posts originating from Content calendar and then send the result to Instagram. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Instagram",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Instagram",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-content-calendar-mailchimp-1.json",
    "title": "Create social media posts from Content calendar and send to Mailchimp",
    "description": "Automate the task to create social media posts originating from Content calendar and then send the result to Mailchimp. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Mailchimp",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Mailchimp",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-content-calendar-sendgrid-1.json",
    "title": "Create social media posts from Content calendar and send to SendGrid",
    "description": "Automate the task to create social media posts originating from Content calendar and then send the result to SendGrid. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "SendGrid",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to SendGrid",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-content-calendar-hubspot-1.json",
    "title": "Create social media posts from Content calendar and send to HubSpot",
    "description": "Automate the task to create social media posts originating from Content calendar and then send the result to HubSpot. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "HubSpot",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to HubSpot",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-social-media-posts-content-calendar-google-ads-1.json",
    "title": "Create social media posts from Content calendar and send to Google Ads",
    "description": "Automate the task to create social media posts originating from Content calendar and then send the result to Google Ads. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Google Ads",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Google Ads",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-marketing-copy-with-ai-content-calendar-twitter-1.json",
    "title": "Generate marketing copy with ai from Content calendar and send to Twitter",
    "description": "Automate the task to generate marketing copy with AI originating from Content calendar and then send the result to Twitter. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Twitter",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Twitter",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-marketing-copy-with-ai-content-calendar-facebook-1.json",
    "title": "Generate marketing copy with ai from Content calendar and send to Facebook",
    "description": "Automate the task to generate marketing copy with AI originating from Content calendar and then send the result to Facebook. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Marketing Workflows",
    "tools_used": [
      "Content calendar",
      "Facebook",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Content calendar",
    "output": "Data sent to Facebook",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-zendesk-ticket-slack.json",
    "title": "Classify ticket with ai from Zendesk ticket and send to Slack",
    "description": "Automate the task to classify ticket with AI originating from Zendesk ticket and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-zendesk-ticket-email.json",
    "title": "Classify ticket with ai from Zendesk ticket and send to Email",
    "description": "Automate the task to classify ticket with AI originating from Zendesk ticket and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-zendesk-ticket-jira.json",
    "title": "Classify ticket with ai from Zendesk ticket and send to Jira",
    "description": "Automate the task to classify ticket with AI originating from Zendesk ticket and then send the result to Jira. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Jira",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-zendesk-ticket-crm.json",
    "title": "Classify ticket with ai from Zendesk ticket and send to CRM",
    "description": "Automate the task to classify ticket with AI originating from Zendesk ticket and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-zendesk-ticket-knowledge-base.json",
    "title": "Classify ticket with ai from Zendesk ticket and send to Knowledge base",
    "description": "Automate the task to classify ticket with AI originating from Zendesk ticket and then send the result to Knowledge base. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Knowledge base",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-zendesk-ticket-notion.json",
    "title": "Classify ticket with ai from Zendesk ticket and send to Notion",
    "description": "Automate the task to classify ticket with AI originating from Zendesk ticket and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "assign-to-agent-zendesk-ticket-slack.json",
    "title": "Assign to agent from Zendesk ticket and send to Slack",
    "description": "Automate the task to assign to agent originating from Zendesk ticket and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-zendesk-ticket-email.json",
    "title": "Assign to agent from Zendesk ticket and send to Email",
    "description": "Automate the task to assign to agent originating from Zendesk ticket and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-zendesk-ticket-jira.json",
    "title": "Assign to agent from Zendesk ticket and send to Jira",
    "description": "Automate the task to assign to agent originating from Zendesk ticket and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-zendesk-ticket-crm.json",
    "title": "Assign to agent from Zendesk ticket and send to CRM",
    "description": "Automate the task to assign to agent originating from Zendesk ticket and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-zendesk-ticket-knowledge-base.json",
    "title": "Assign to agent from Zendesk ticket and send to Knowledge base",
    "description": "Automate the task to assign to agent originating from Zendesk ticket and then send the result to Knowledge base. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Knowledge base",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-zendesk-ticket-notion.json",
    "title": "Assign to agent from Zendesk ticket and send to Notion",
    "description": "Automate the task to assign to agent originating from Zendesk ticket and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-response-draft-zendesk-ticket-slack.json",
    "title": "Create response draft from Zendesk ticket and send to Slack",
    "description": "Automate the task to create response draft originating from Zendesk ticket and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-zendesk-ticket-email.json",
    "title": "Create response draft from Zendesk ticket and send to Email",
    "description": "Automate the task to create response draft originating from Zendesk ticket and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-zendesk-ticket-jira.json",
    "title": "Create response draft from Zendesk ticket and send to Jira",
    "description": "Automate the task to create response draft originating from Zendesk ticket and then send the result to Jira. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Jira",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-zendesk-ticket-crm.json",
    "title": "Create response draft from Zendesk ticket and send to CRM",
    "description": "Automate the task to create response draft originating from Zendesk ticket and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-zendesk-ticket-knowledge-base.json",
    "title": "Create response draft from Zendesk ticket and send to Knowledge base",
    "description": "Automate the task to create response draft originating from Zendesk ticket and then send the result to Knowledge base. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Knowledge base",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-zendesk-ticket-notion.json",
    "title": "Create response draft from Zendesk ticket and send to Notion",
    "description": "Automate the task to create response draft originating from Zendesk ticket and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "update-ticket-status-zendesk-ticket-slack.json",
    "title": "Update ticket status from Zendesk ticket and send to Slack",
    "description": "Automate the task to update ticket status originating from Zendesk ticket and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-zendesk-ticket-email.json",
    "title": "Update ticket status from Zendesk ticket and send to Email",
    "description": "Automate the task to update ticket status originating from Zendesk ticket and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-zendesk-ticket-jira.json",
    "title": "Update ticket status from Zendesk ticket and send to Jira",
    "description": "Automate the task to update ticket status originating from Zendesk ticket and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-zendesk-ticket-crm.json",
    "title": "Update ticket status from Zendesk ticket and send to CRM",
    "description": "Automate the task to update ticket status originating from Zendesk ticket and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-zendesk-ticket-knowledge-base.json",
    "title": "Update ticket status from Zendesk ticket and send to Knowledge base",
    "description": "Automate the task to update ticket status originating from Zendesk ticket and then send the result to Knowledge base. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Knowledge base",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-zendesk-ticket-notion.json",
    "title": "Update ticket status from Zendesk ticket and send to Notion",
    "description": "Automate the task to update ticket status originating from Zendesk ticket and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-zendesk-ticket-slack.json",
    "title": "Escalate priority from Zendesk ticket and send to Slack",
    "description": "Automate the task to escalate priority originating from Zendesk ticket and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-zendesk-ticket-email.json",
    "title": "Escalate priority from Zendesk ticket and send to Email",
    "description": "Automate the task to escalate priority originating from Zendesk ticket and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-zendesk-ticket-jira.json",
    "title": "Escalate priority from Zendesk ticket and send to Jira",
    "description": "Automate the task to escalate priority originating from Zendesk ticket and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-zendesk-ticket-crm.json",
    "title": "Escalate priority from Zendesk ticket and send to CRM",
    "description": "Automate the task to escalate priority originating from Zendesk ticket and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-zendesk-ticket-knowledge-base.json",
    "title": "Escalate priority from Zendesk ticket and send to Knowledge base",
    "description": "Automate the task to escalate priority originating from Zendesk ticket and then send the result to Knowledge base. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Knowledge base",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-zendesk-ticket-notion.json",
    "title": "Escalate priority from Zendesk ticket and send to Notion",
    "description": "Automate the task to escalate priority originating from Zendesk ticket and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "translate-customer-request-zendesk-ticket-slack.json",
    "title": "Translate customer request from Zendesk ticket and send to Slack",
    "description": "Automate the task to translate customer request originating from Zendesk ticket and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-zendesk-ticket-email.json",
    "title": "Translate customer request from Zendesk ticket and send to Email",
    "description": "Automate the task to translate customer request originating from Zendesk ticket and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-zendesk-ticket-jira.json",
    "title": "Translate customer request from Zendesk ticket and send to Jira",
    "description": "Automate the task to translate customer request originating from Zendesk ticket and then send the result to Jira. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Jira",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-zendesk-ticket-crm.json",
    "title": "Translate customer request from Zendesk ticket and send to CRM",
    "description": "Automate the task to translate customer request originating from Zendesk ticket and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-zendesk-ticket-knowledge-base.json",
    "title": "Translate customer request from Zendesk ticket and send to Knowledge base",
    "description": "Automate the task to translate customer request originating from Zendesk ticket and then send the result to Knowledge base. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Knowledge base",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-zendesk-ticket-notion.json",
    "title": "Translate customer request from Zendesk ticket and send to Notion",
    "description": "Automate the task to translate customer request originating from Zendesk ticket and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Zendesk ticket",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Zendesk ticket",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-intercom-chat-slack.json",
    "title": "Classify ticket with ai from Intercom chat and send to Slack",
    "description": "Automate the task to classify ticket with AI originating from Intercom chat and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-intercom-chat-email.json",
    "title": "Classify ticket with ai from Intercom chat and send to Email",
    "description": "Automate the task to classify ticket with AI originating from Intercom chat and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-intercom-chat-jira.json",
    "title": "Classify ticket with ai from Intercom chat and send to Jira",
    "description": "Automate the task to classify ticket with AI originating from Intercom chat and then send the result to Jira. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Jira",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-intercom-chat-crm.json",
    "title": "Classify ticket with ai from Intercom chat and send to CRM",
    "description": "Automate the task to classify ticket with AI originating from Intercom chat and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-intercom-chat-knowledge-base.json",
    "title": "Classify ticket with ai from Intercom chat and send to Knowledge base",
    "description": "Automate the task to classify ticket with AI originating from Intercom chat and then send the result to Knowledge base. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Knowledge base",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-intercom-chat-notion.json",
    "title": "Classify ticket with ai from Intercom chat and send to Notion",
    "description": "Automate the task to classify ticket with AI originating from Intercom chat and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "assign-to-agent-intercom-chat-slack.json",
    "title": "Assign to agent from Intercom chat and send to Slack",
    "description": "Automate the task to assign to agent originating from Intercom chat and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-intercom-chat-email.json",
    "title": "Assign to agent from Intercom chat and send to Email",
    "description": "Automate the task to assign to agent originating from Intercom chat and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-intercom-chat-jira.json",
    "title": "Assign to agent from Intercom chat and send to Jira",
    "description": "Automate the task to assign to agent originating from Intercom chat and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-intercom-chat-crm.json",
    "title": "Assign to agent from Intercom chat and send to CRM",
    "description": "Automate the task to assign to agent originating from Intercom chat and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-intercom-chat-knowledge-base.json",
    "title": "Assign to agent from Intercom chat and send to Knowledge base",
    "description": "Automate the task to assign to agent originating from Intercom chat and then send the result to Knowledge base. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Knowledge base",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-intercom-chat-notion.json",
    "title": "Assign to agent from Intercom chat and send to Notion",
    "description": "Automate the task to assign to agent originating from Intercom chat and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-response-draft-intercom-chat-slack.json",
    "title": "Create response draft from Intercom chat and send to Slack",
    "description": "Automate the task to create response draft originating from Intercom chat and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-intercom-chat-email.json",
    "title": "Create response draft from Intercom chat and send to Email",
    "description": "Automate the task to create response draft originating from Intercom chat and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-intercom-chat-jira.json",
    "title": "Create response draft from Intercom chat and send to Jira",
    "description": "Automate the task to create response draft originating from Intercom chat and then send the result to Jira. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Jira",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-intercom-chat-crm.json",
    "title": "Create response draft from Intercom chat and send to CRM",
    "description": "Automate the task to create response draft originating from Intercom chat and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-intercom-chat-knowledge-base.json",
    "title": "Create response draft from Intercom chat and send to Knowledge base",
    "description": "Automate the task to create response draft originating from Intercom chat and then send the result to Knowledge base. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Knowledge base",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-intercom-chat-notion.json",
    "title": "Create response draft from Intercom chat and send to Notion",
    "description": "Automate the task to create response draft originating from Intercom chat and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "update-ticket-status-intercom-chat-slack.json",
    "title": "Update ticket status from Intercom chat and send to Slack",
    "description": "Automate the task to update ticket status originating from Intercom chat and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-intercom-chat-email.json",
    "title": "Update ticket status from Intercom chat and send to Email",
    "description": "Automate the task to update ticket status originating from Intercom chat and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-intercom-chat-jira.json",
    "title": "Update ticket status from Intercom chat and send to Jira",
    "description": "Automate the task to update ticket status originating from Intercom chat and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-intercom-chat-crm.json",
    "title": "Update ticket status from Intercom chat and send to CRM",
    "description": "Automate the task to update ticket status originating from Intercom chat and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-intercom-chat-knowledge-base.json",
    "title": "Update ticket status from Intercom chat and send to Knowledge base",
    "description": "Automate the task to update ticket status originating from Intercom chat and then send the result to Knowledge base. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Knowledge base",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-intercom-chat-notion.json",
    "title": "Update ticket status from Intercom chat and send to Notion",
    "description": "Automate the task to update ticket status originating from Intercom chat and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-intercom-chat-slack.json",
    "title": "Escalate priority from Intercom chat and send to Slack",
    "description": "Automate the task to escalate priority originating from Intercom chat and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-intercom-chat-email.json",
    "title": "Escalate priority from Intercom chat and send to Email",
    "description": "Automate the task to escalate priority originating from Intercom chat and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-intercom-chat-jira.json",
    "title": "Escalate priority from Intercom chat and send to Jira",
    "description": "Automate the task to escalate priority originating from Intercom chat and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-intercom-chat-crm.json",
    "title": "Escalate priority from Intercom chat and send to CRM",
    "description": "Automate the task to escalate priority originating from Intercom chat and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-intercom-chat-knowledge-base.json",
    "title": "Escalate priority from Intercom chat and send to Knowledge base",
    "description": "Automate the task to escalate priority originating from Intercom chat and then send the result to Knowledge base. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Knowledge base",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-intercom-chat-notion.json",
    "title": "Escalate priority from Intercom chat and send to Notion",
    "description": "Automate the task to escalate priority originating from Intercom chat and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "translate-customer-request-intercom-chat-slack.json",
    "title": "Translate customer request from Intercom chat and send to Slack",
    "description": "Automate the task to translate customer request originating from Intercom chat and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-intercom-chat-email.json",
    "title": "Translate customer request from Intercom chat and send to Email",
    "description": "Automate the task to translate customer request originating from Intercom chat and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-intercom-chat-jira.json",
    "title": "Translate customer request from Intercom chat and send to Jira",
    "description": "Automate the task to translate customer request originating from Intercom chat and then send the result to Jira. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Jira",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-intercom-chat-crm.json",
    "title": "Translate customer request from Intercom chat and send to CRM",
    "description": "Automate the task to translate customer request originating from Intercom chat and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-intercom-chat-knowledge-base.json",
    "title": "Translate customer request from Intercom chat and send to Knowledge base",
    "description": "Automate the task to translate customer request originating from Intercom chat and then send the result to Knowledge base. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Knowledge base",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-intercom-chat-notion.json",
    "title": "Translate customer request from Intercom chat and send to Notion",
    "description": "Automate the task to translate customer request originating from Intercom chat and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Intercom chat",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Intercom chat",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-help-desk-email-slack.json",
    "title": "Classify ticket with ai from Help desk email and send to Slack",
    "description": "Automate the task to classify ticket with AI originating from Help desk email and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-help-desk-email-email.json",
    "title": "Classify ticket with ai from Help desk email and send to Email",
    "description": "Automate the task to classify ticket with AI originating from Help desk email and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-help-desk-email-jira.json",
    "title": "Classify ticket with ai from Help desk email and send to Jira",
    "description": "Automate the task to classify ticket with AI originating from Help desk email and then send the result to Jira. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Jira",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-help-desk-email-crm.json",
    "title": "Classify ticket with ai from Help desk email and send to CRM",
    "description": "Automate the task to classify ticket with AI originating from Help desk email and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-help-desk-email-knowledge-base.json",
    "title": "Classify ticket with ai from Help desk email and send to Knowledge base",
    "description": "Automate the task to classify ticket with AI originating from Help desk email and then send the result to Knowledge base. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Knowledge base",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-help-desk-email-notion.json",
    "title": "Classify ticket with ai from Help desk email and send to Notion",
    "description": "Automate the task to classify ticket with AI originating from Help desk email and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "assign-to-agent-help-desk-email-slack.json",
    "title": "Assign to agent from Help desk email and send to Slack",
    "description": "Automate the task to assign to agent originating from Help desk email and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-help-desk-email-email.json",
    "title": "Assign to agent from Help desk email and send to Email",
    "description": "Automate the task to assign to agent originating from Help desk email and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-help-desk-email-jira.json",
    "title": "Assign to agent from Help desk email and send to Jira",
    "description": "Automate the task to assign to agent originating from Help desk email and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-help-desk-email-crm.json",
    "title": "Assign to agent from Help desk email and send to CRM",
    "description": "Automate the task to assign to agent originating from Help desk email and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-help-desk-email-knowledge-base.json",
    "title": "Assign to agent from Help desk email and send to Knowledge base",
    "description": "Automate the task to assign to agent originating from Help desk email and then send the result to Knowledge base. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Knowledge base",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-help-desk-email-notion.json",
    "title": "Assign to agent from Help desk email and send to Notion",
    "description": "Automate the task to assign to agent originating from Help desk email and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-response-draft-help-desk-email-slack.json",
    "title": "Create response draft from Help desk email and send to Slack",
    "description": "Automate the task to create response draft originating from Help desk email and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-help-desk-email-email.json",
    "title": "Create response draft from Help desk email and send to Email",
    "description": "Automate the task to create response draft originating from Help desk email and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-help-desk-email-jira.json",
    "title": "Create response draft from Help desk email and send to Jira",
    "description": "Automate the task to create response draft originating from Help desk email and then send the result to Jira. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Jira",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-help-desk-email-crm.json",
    "title": "Create response draft from Help desk email and send to CRM",
    "description": "Automate the task to create response draft originating from Help desk email and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-help-desk-email-knowledge-base.json",
    "title": "Create response draft from Help desk email and send to Knowledge base",
    "description": "Automate the task to create response draft originating from Help desk email and then send the result to Knowledge base. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Knowledge base",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-help-desk-email-notion.json",
    "title": "Create response draft from Help desk email and send to Notion",
    "description": "Automate the task to create response draft originating from Help desk email and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "update-ticket-status-help-desk-email-slack.json",
    "title": "Update ticket status from Help desk email and send to Slack",
    "description": "Automate the task to update ticket status originating from Help desk email and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-help-desk-email-email.json",
    "title": "Update ticket status from Help desk email and send to Email",
    "description": "Automate the task to update ticket status originating from Help desk email and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-help-desk-email-jira.json",
    "title": "Update ticket status from Help desk email and send to Jira",
    "description": "Automate the task to update ticket status originating from Help desk email and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-help-desk-email-crm.json",
    "title": "Update ticket status from Help desk email and send to CRM",
    "description": "Automate the task to update ticket status originating from Help desk email and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-help-desk-email-knowledge-base.json",
    "title": "Update ticket status from Help desk email and send to Knowledge base",
    "description": "Automate the task to update ticket status originating from Help desk email and then send the result to Knowledge base. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Knowledge base",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-help-desk-email-notion.json",
    "title": "Update ticket status from Help desk email and send to Notion",
    "description": "Automate the task to update ticket status originating from Help desk email and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-help-desk-email-slack.json",
    "title": "Escalate priority from Help desk email and send to Slack",
    "description": "Automate the task to escalate priority originating from Help desk email and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-help-desk-email-email.json",
    "title": "Escalate priority from Help desk email and send to Email",
    "description": "Automate the task to escalate priority originating from Help desk email and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-help-desk-email-jira.json",
    "title": "Escalate priority from Help desk email and send to Jira",
    "description": "Automate the task to escalate priority originating from Help desk email and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-help-desk-email-crm.json",
    "title": "Escalate priority from Help desk email and send to CRM",
    "description": "Automate the task to escalate priority originating from Help desk email and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-help-desk-email-knowledge-base.json",
    "title": "Escalate priority from Help desk email and send to Knowledge base",
    "description": "Automate the task to escalate priority originating from Help desk email and then send the result to Knowledge base. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Knowledge base",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-help-desk-email-notion.json",
    "title": "Escalate priority from Help desk email and send to Notion",
    "description": "Automate the task to escalate priority originating from Help desk email and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "translate-customer-request-help-desk-email-slack.json",
    "title": "Translate customer request from Help desk email and send to Slack",
    "description": "Automate the task to translate customer request originating from Help desk email and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-help-desk-email-email.json",
    "title": "Translate customer request from Help desk email and send to Email",
    "description": "Automate the task to translate customer request originating from Help desk email and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-help-desk-email-jira.json",
    "title": "Translate customer request from Help desk email and send to Jira",
    "description": "Automate the task to translate customer request originating from Help desk email and then send the result to Jira. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Jira",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-help-desk-email-crm.json",
    "title": "Translate customer request from Help desk email and send to CRM",
    "description": "Automate the task to translate customer request originating from Help desk email and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-help-desk-email-knowledge-base.json",
    "title": "Translate customer request from Help desk email and send to Knowledge base",
    "description": "Automate the task to translate customer request originating from Help desk email and then send the result to Knowledge base. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Knowledge base",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-help-desk-email-notion.json",
    "title": "Translate customer request from Help desk email and send to Notion",
    "description": "Automate the task to translate customer request originating from Help desk email and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Help desk email",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Help desk email",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-github-issue-slack.json",
    "title": "Classify ticket with ai from GitHub issue and send to Slack",
    "description": "Automate the task to classify ticket with AI originating from GitHub issue and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-github-issue-email.json",
    "title": "Classify ticket with ai from GitHub issue and send to Email",
    "description": "Automate the task to classify ticket with AI originating from GitHub issue and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-github-issue-jira.json",
    "title": "Classify ticket with ai from GitHub issue and send to Jira",
    "description": "Automate the task to classify ticket with AI originating from GitHub issue and then send the result to Jira. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Jira",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-github-issue-crm.json",
    "title": "Classify ticket with ai from GitHub issue and send to CRM",
    "description": "Automate the task to classify ticket with AI originating from GitHub issue and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-github-issue-knowledge-base.json",
    "title": "Classify ticket with ai from GitHub issue and send to Knowledge base",
    "description": "Automate the task to classify ticket with AI originating from GitHub issue and then send the result to Knowledge base. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Knowledge base",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-github-issue-notion.json",
    "title": "Classify ticket with ai from GitHub issue and send to Notion",
    "description": "Automate the task to classify ticket with AI originating from GitHub issue and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "assign-to-agent-github-issue-slack.json",
    "title": "Assign to agent from GitHub issue and send to Slack",
    "description": "Automate the task to assign to agent originating from GitHub issue and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-github-issue-email.json",
    "title": "Assign to agent from GitHub issue and send to Email",
    "description": "Automate the task to assign to agent originating from GitHub issue and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-github-issue-jira.json",
    "title": "Assign to agent from GitHub issue and send to Jira",
    "description": "Automate the task to assign to agent originating from GitHub issue and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-github-issue-crm.json",
    "title": "Assign to agent from GitHub issue and send to CRM",
    "description": "Automate the task to assign to agent originating from GitHub issue and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-github-issue-knowledge-base.json",
    "title": "Assign to agent from GitHub issue and send to Knowledge base",
    "description": "Automate the task to assign to agent originating from GitHub issue and then send the result to Knowledge base. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Knowledge base",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-github-issue-notion.json",
    "title": "Assign to agent from GitHub issue and send to Notion",
    "description": "Automate the task to assign to agent originating from GitHub issue and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-response-draft-github-issue-slack.json",
    "title": "Create response draft from GitHub issue and send to Slack",
    "description": "Automate the task to create response draft originating from GitHub issue and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-github-issue-email.json",
    "title": "Create response draft from GitHub issue and send to Email",
    "description": "Automate the task to create response draft originating from GitHub issue and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-github-issue-jira.json",
    "title": "Create response draft from GitHub issue and send to Jira",
    "description": "Automate the task to create response draft originating from GitHub issue and then send the result to Jira. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Jira",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-github-issue-crm.json",
    "title": "Create response draft from GitHub issue and send to CRM",
    "description": "Automate the task to create response draft originating from GitHub issue and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-github-issue-knowledge-base.json",
    "title": "Create response draft from GitHub issue and send to Knowledge base",
    "description": "Automate the task to create response draft originating from GitHub issue and then send the result to Knowledge base. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Knowledge base",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-github-issue-notion.json",
    "title": "Create response draft from GitHub issue and send to Notion",
    "description": "Automate the task to create response draft originating from GitHub issue and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "update-ticket-status-github-issue-slack.json",
    "title": "Update ticket status from GitHub issue and send to Slack",
    "description": "Automate the task to update ticket status originating from GitHub issue and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-github-issue-email.json",
    "title": "Update ticket status from GitHub issue and send to Email",
    "description": "Automate the task to update ticket status originating from GitHub issue and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-github-issue-jira.json",
    "title": "Update ticket status from GitHub issue and send to Jira",
    "description": "Automate the task to update ticket status originating from GitHub issue and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-github-issue-crm.json",
    "title": "Update ticket status from GitHub issue and send to CRM",
    "description": "Automate the task to update ticket status originating from GitHub issue and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-github-issue-knowledge-base.json",
    "title": "Update ticket status from GitHub issue and send to Knowledge base",
    "description": "Automate the task to update ticket status originating from GitHub issue and then send the result to Knowledge base. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Knowledge base",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-github-issue-notion.json",
    "title": "Update ticket status from GitHub issue and send to Notion",
    "description": "Automate the task to update ticket status originating from GitHub issue and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-github-issue-slack.json",
    "title": "Escalate priority from GitHub issue and send to Slack",
    "description": "Automate the task to escalate priority originating from GitHub issue and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-github-issue-email.json",
    "title": "Escalate priority from GitHub issue and send to Email",
    "description": "Automate the task to escalate priority originating from GitHub issue and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-github-issue-jira.json",
    "title": "Escalate priority from GitHub issue and send to Jira",
    "description": "Automate the task to escalate priority originating from GitHub issue and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-github-issue-crm.json",
    "title": "Escalate priority from GitHub issue and send to CRM",
    "description": "Automate the task to escalate priority originating from GitHub issue and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-github-issue-knowledge-base.json",
    "title": "Escalate priority from GitHub issue and send to Knowledge base",
    "description": "Automate the task to escalate priority originating from GitHub issue and then send the result to Knowledge base. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Knowledge base",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-github-issue-notion.json",
    "title": "Escalate priority from GitHub issue and send to Notion",
    "description": "Automate the task to escalate priority originating from GitHub issue and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "translate-customer-request-github-issue-slack.json",
    "title": "Translate customer request from GitHub issue and send to Slack",
    "description": "Automate the task to translate customer request originating from GitHub issue and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-github-issue-email.json",
    "title": "Translate customer request from GitHub issue and send to Email",
    "description": "Automate the task to translate customer request originating from GitHub issue and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-github-issue-jira.json",
    "title": "Translate customer request from GitHub issue and send to Jira",
    "description": "Automate the task to translate customer request originating from GitHub issue and then send the result to Jira. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Jira",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-github-issue-crm.json",
    "title": "Translate customer request from GitHub issue and send to CRM",
    "description": "Automate the task to translate customer request originating from GitHub issue and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-github-issue-knowledge-base.json",
    "title": "Translate customer request from GitHub issue and send to Knowledge base",
    "description": "Automate the task to translate customer request originating from GitHub issue and then send the result to Knowledge base. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Knowledge base",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-github-issue-notion.json",
    "title": "Translate customer request from GitHub issue and send to Notion",
    "description": "Automate the task to translate customer request originating from GitHub issue and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "GitHub issue",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-call-transcript-slack.json",
    "title": "Classify ticket with ai from Call transcript and send to Slack",
    "description": "Automate the task to classify ticket with AI originating from Call transcript and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-call-transcript-email.json",
    "title": "Classify ticket with ai from Call transcript and send to Email",
    "description": "Automate the task to classify ticket with AI originating from Call transcript and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-call-transcript-jira.json",
    "title": "Classify ticket with ai from Call transcript and send to Jira",
    "description": "Automate the task to classify ticket with AI originating from Call transcript and then send the result to Jira. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Jira",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-call-transcript-crm.json",
    "title": "Classify ticket with ai from Call transcript and send to CRM",
    "description": "Automate the task to classify ticket with AI originating from Call transcript and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-call-transcript-knowledge-base.json",
    "title": "Classify ticket with ai from Call transcript and send to Knowledge base",
    "description": "Automate the task to classify ticket with AI originating from Call transcript and then send the result to Knowledge base. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Knowledge base",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-call-transcript-notion.json",
    "title": "Classify ticket with ai from Call transcript and send to Notion",
    "description": "Automate the task to classify ticket with AI originating from Call transcript and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "assign-to-agent-call-transcript-slack.json",
    "title": "Assign to agent from Call transcript and send to Slack",
    "description": "Automate the task to assign to agent originating from Call transcript and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-call-transcript-email.json",
    "title": "Assign to agent from Call transcript and send to Email",
    "description": "Automate the task to assign to agent originating from Call transcript and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-call-transcript-jira.json",
    "title": "Assign to agent from Call transcript and send to Jira",
    "description": "Automate the task to assign to agent originating from Call transcript and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-call-transcript-crm.json",
    "title": "Assign to agent from Call transcript and send to CRM",
    "description": "Automate the task to assign to agent originating from Call transcript and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-call-transcript-knowledge-base.json",
    "title": "Assign to agent from Call transcript and send to Knowledge base",
    "description": "Automate the task to assign to agent originating from Call transcript and then send the result to Knowledge base. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Knowledge base",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-call-transcript-notion.json",
    "title": "Assign to agent from Call transcript and send to Notion",
    "description": "Automate the task to assign to agent originating from Call transcript and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-response-draft-call-transcript-slack.json",
    "title": "Create response draft from Call transcript and send to Slack",
    "description": "Automate the task to create response draft originating from Call transcript and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-call-transcript-email.json",
    "title": "Create response draft from Call transcript and send to Email",
    "description": "Automate the task to create response draft originating from Call transcript and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-call-transcript-jira.json",
    "title": "Create response draft from Call transcript and send to Jira",
    "description": "Automate the task to create response draft originating from Call transcript and then send the result to Jira. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Jira",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-call-transcript-crm.json",
    "title": "Create response draft from Call transcript and send to CRM",
    "description": "Automate the task to create response draft originating from Call transcript and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-call-transcript-knowledge-base.json",
    "title": "Create response draft from Call transcript and send to Knowledge base",
    "description": "Automate the task to create response draft originating from Call transcript and then send the result to Knowledge base. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Knowledge base",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-call-transcript-notion.json",
    "title": "Create response draft from Call transcript and send to Notion",
    "description": "Automate the task to create response draft originating from Call transcript and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "update-ticket-status-call-transcript-slack.json",
    "title": "Update ticket status from Call transcript and send to Slack",
    "description": "Automate the task to update ticket status originating from Call transcript and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-call-transcript-email.json",
    "title": "Update ticket status from Call transcript and send to Email",
    "description": "Automate the task to update ticket status originating from Call transcript and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-call-transcript-jira.json",
    "title": "Update ticket status from Call transcript and send to Jira",
    "description": "Automate the task to update ticket status originating from Call transcript and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-call-transcript-crm.json",
    "title": "Update ticket status from Call transcript and send to CRM",
    "description": "Automate the task to update ticket status originating from Call transcript and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-call-transcript-knowledge-base.json",
    "title": "Update ticket status from Call transcript and send to Knowledge base",
    "description": "Automate the task to update ticket status originating from Call transcript and then send the result to Knowledge base. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Knowledge base",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-call-transcript-notion.json",
    "title": "Update ticket status from Call transcript and send to Notion",
    "description": "Automate the task to update ticket status originating from Call transcript and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-call-transcript-slack.json",
    "title": "Escalate priority from Call transcript and send to Slack",
    "description": "Automate the task to escalate priority originating from Call transcript and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-call-transcript-email.json",
    "title": "Escalate priority from Call transcript and send to Email",
    "description": "Automate the task to escalate priority originating from Call transcript and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-call-transcript-jira.json",
    "title": "Escalate priority from Call transcript and send to Jira",
    "description": "Automate the task to escalate priority originating from Call transcript and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-call-transcript-crm.json",
    "title": "Escalate priority from Call transcript and send to CRM",
    "description": "Automate the task to escalate priority originating from Call transcript and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-call-transcript-knowledge-base.json",
    "title": "Escalate priority from Call transcript and send to Knowledge base",
    "description": "Automate the task to escalate priority originating from Call transcript and then send the result to Knowledge base. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Knowledge base",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "escalate-priority-call-transcript-notion.json",
    "title": "Escalate priority from Call transcript and send to Notion",
    "description": "Automate the task to escalate priority originating from Call transcript and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "translate-customer-request-call-transcript-slack.json",
    "title": "Translate customer request from Call transcript and send to Slack",
    "description": "Automate the task to translate customer request originating from Call transcript and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-call-transcript-email.json",
    "title": "Translate customer request from Call transcript and send to Email",
    "description": "Automate the task to translate customer request originating from Call transcript and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-call-transcript-jira.json",
    "title": "Translate customer request from Call transcript and send to Jira",
    "description": "Automate the task to translate customer request originating from Call transcript and then send the result to Jira. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Jira",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-call-transcript-crm.json",
    "title": "Translate customer request from Call transcript and send to CRM",
    "description": "Automate the task to translate customer request originating from Call transcript and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-call-transcript-knowledge-base.json",
    "title": "Translate customer request from Call transcript and send to Knowledge base",
    "description": "Automate the task to translate customer request originating from Call transcript and then send the result to Knowledge base. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Knowledge base",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "translate-customer-request-call-transcript-notion.json",
    "title": "Translate customer request from Call transcript and send to Notion",
    "description": "Automate the task to translate customer request originating from Call transcript and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Call transcript",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Call transcript",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-freshdesk-ticket-slack.json",
    "title": "Classify ticket with ai from Freshdesk ticket and send to Slack",
    "description": "Automate the task to classify ticket with AI originating from Freshdesk ticket and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Freshdesk ticket",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Freshdesk ticket",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-freshdesk-ticket-email.json",
    "title": "Classify ticket with ai from Freshdesk ticket and send to Email",
    "description": "Automate the task to classify ticket with AI originating from Freshdesk ticket and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Freshdesk ticket",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Freshdesk ticket",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-freshdesk-ticket-jira.json",
    "title": "Classify ticket with ai from Freshdesk ticket and send to Jira",
    "description": "Automate the task to classify ticket with AI originating from Freshdesk ticket and then send the result to Jira. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Freshdesk ticket",
      "Jira",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Freshdesk ticket",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-freshdesk-ticket-crm.json",
    "title": "Classify ticket with ai from Freshdesk ticket and send to CRM",
    "description": "Automate the task to classify ticket with AI originating from Freshdesk ticket and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Freshdesk ticket",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Freshdesk ticket",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-freshdesk-ticket-knowledge-base.json",
    "title": "Classify ticket with ai from Freshdesk ticket and send to Knowledge base",
    "description": "Automate the task to classify ticket with AI originating from Freshdesk ticket and then send the result to Knowledge base. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Freshdesk ticket",
      "Knowledge base",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Freshdesk ticket",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-ticket-with-ai-freshdesk-ticket-notion.json",
    "title": "Classify ticket with ai from Freshdesk ticket and send to Notion",
    "description": "Automate the task to classify ticket with AI originating from Freshdesk ticket and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Freshdesk ticket",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Freshdesk ticket",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "assign-to-agent-freshdesk-ticket-slack.json",
    "title": "Assign to agent from Freshdesk ticket and send to Slack",
    "description": "Automate the task to assign to agent originating from Freshdesk ticket and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Freshdesk ticket",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Freshdesk ticket",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-freshdesk-ticket-email.json",
    "title": "Assign to agent from Freshdesk ticket and send to Email",
    "description": "Automate the task to assign to agent originating from Freshdesk ticket and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Freshdesk ticket",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Freshdesk ticket",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-freshdesk-ticket-jira.json",
    "title": "Assign to agent from Freshdesk ticket and send to Jira",
    "description": "Automate the task to assign to agent originating from Freshdesk ticket and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Freshdesk ticket",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Freshdesk ticket",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-freshdesk-ticket-crm.json",
    "title": "Assign to agent from Freshdesk ticket and send to CRM",
    "description": "Automate the task to assign to agent originating from Freshdesk ticket and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Freshdesk ticket",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Freshdesk ticket",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-freshdesk-ticket-knowledge-base.json",
    "title": "Assign to agent from Freshdesk ticket and send to Knowledge base",
    "description": "Automate the task to assign to agent originating from Freshdesk ticket and then send the result to Knowledge base. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Freshdesk ticket",
      "Knowledge base",
      "Slack"
    ],
    "trigger": "Incoming event from Freshdesk ticket",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-agent-freshdesk-ticket-notion.json",
    "title": "Assign to agent from Freshdesk ticket and send to Notion",
    "description": "Automate the task to assign to agent originating from Freshdesk ticket and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Freshdesk ticket",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Freshdesk ticket",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-response-draft-freshdesk-ticket-slack.json",
    "title": "Create response draft from Freshdesk ticket and send to Slack",
    "description": "Automate the task to create response draft originating from Freshdesk ticket and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Freshdesk ticket",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Freshdesk ticket",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-freshdesk-ticket-email.json",
    "title": "Create response draft from Freshdesk ticket and send to Email",
    "description": "Automate the task to create response draft originating from Freshdesk ticket and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Freshdesk ticket",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Freshdesk ticket",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-freshdesk-ticket-jira.json",
    "title": "Create response draft from Freshdesk ticket and send to Jira",
    "description": "Automate the task to create response draft originating from Freshdesk ticket and then send the result to Jira. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Freshdesk ticket",
      "Jira",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Freshdesk ticket",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-freshdesk-ticket-crm.json",
    "title": "Create response draft from Freshdesk ticket and send to CRM",
    "description": "Automate the task to create response draft originating from Freshdesk ticket and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Freshdesk ticket",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Freshdesk ticket",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-freshdesk-ticket-knowledge-base.json",
    "title": "Create response draft from Freshdesk ticket and send to Knowledge base",
    "description": "Automate the task to create response draft originating from Freshdesk ticket and then send the result to Knowledge base. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Freshdesk ticket",
      "Knowledge base",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Freshdesk ticket",
    "output": "Data sent to Knowledge base",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-response-draft-freshdesk-ticket-notion.json",
    "title": "Create response draft from Freshdesk ticket and send to Notion",
    "description": "Automate the task to create response draft originating from Freshdesk ticket and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Freshdesk ticket",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Freshdesk ticket",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "update-ticket-status-freshdesk-ticket-slack.json",
    "title": "Update ticket status from Freshdesk ticket and send to Slack",
    "description": "Automate the task to update ticket status originating from Freshdesk ticket and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Freshdesk ticket",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Freshdesk ticket",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ticket-status-freshdesk-ticket-email.json",
    "title": "Update ticket status from Freshdesk ticket and send to Email",
    "description": "Automate the task to update ticket status originating from Freshdesk ticket and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Customer Support",
    "tools_used": [
      "Freshdesk ticket",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Freshdesk ticket",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "classify-resume-with-ai-resume-email-google-sheets.json",
    "title": "Classify resume with ai from Resume email and send to Google Sheets",
    "description": "Automate the task to classify resume with AI originating from Resume email and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-resume-email-airtable.json",
    "title": "Classify resume with ai from Resume email and send to Airtable",
    "description": "Automate the task to classify resume with AI originating from Resume email and then send the result to Airtable. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Airtable",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-resume-email-slack.json",
    "title": "Classify resume with ai from Resume email and send to Slack",
    "description": "Automate the task to classify resume with AI originating from Resume email and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-resume-email-email.json",
    "title": "Classify resume with ai from Resume email and send to Email",
    "description": "Automate the task to classify resume with AI originating from Resume email and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-resume-email-bamboohr.json",
    "title": "Classify resume with ai from Resume email and send to BambooHR",
    "description": "Automate the task to classify resume with AI originating from Resume email and then send the result to BambooHR. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "BambooHR",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-resume-email-workday.json",
    "title": "Classify resume with ai from Resume email and send to Workday",
    "description": "Automate the task to classify resume with AI originating from Resume email and then send the result to Workday. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Workday",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "schedule-interview-resume-email-google-sheets.json",
    "title": "Schedule interview from Resume email and send to Google Sheets",
    "description": "Automate the task to schedule interview originating from Resume email and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-resume-email-airtable.json",
    "title": "Schedule interview from Resume email and send to Airtable",
    "description": "Automate the task to schedule interview originating from Resume email and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-resume-email-slack.json",
    "title": "Schedule interview from Resume email and send to Slack",
    "description": "Automate the task to schedule interview originating from Resume email and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-resume-email-email.json",
    "title": "Schedule interview from Resume email and send to Email",
    "description": "Automate the task to schedule interview originating from Resume email and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-resume-email-bamboohr.json",
    "title": "Schedule interview from Resume email and send to BambooHR",
    "description": "Automate the task to schedule interview originating from Resume email and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-resume-email-workday.json",
    "title": "Schedule interview from Resume email and send to Workday",
    "description": "Automate the task to schedule interview originating from Resume email and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-resume-email-google-sheets.json",
    "title": "Send rejection email from Resume email and send to Google Sheets",
    "description": "Automate the task to send rejection email originating from Resume email and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-resume-email-airtable.json",
    "title": "Send rejection email from Resume email and send to Airtable",
    "description": "Automate the task to send rejection email originating from Resume email and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-resume-email-slack.json",
    "title": "Send rejection email from Resume email and send to Slack",
    "description": "Automate the task to send rejection email originating from Resume email and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-resume-email-email.json",
    "title": "Send rejection email from Resume email and send to Email",
    "description": "Automate the task to send rejection email originating from Resume email and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-resume-email-bamboohr.json",
    "title": "Send rejection email from Resume email and send to BambooHR",
    "description": "Automate the task to send rejection email originating from Resume email and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-resume-email-workday.json",
    "title": "Send rejection email from Resume email and send to Workday",
    "description": "Automate the task to send rejection email originating from Resume email and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-resume-email-google-sheets.json",
    "title": "Update candidate database from Resume email and send to Google Sheets",
    "description": "Automate the task to update candidate database originating from Resume email and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-resume-email-airtable.json",
    "title": "Update candidate database from Resume email and send to Airtable",
    "description": "Automate the task to update candidate database originating from Resume email and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-resume-email-slack.json",
    "title": "Update candidate database from Resume email and send to Slack",
    "description": "Automate the task to update candidate database originating from Resume email and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-resume-email-email.json",
    "title": "Update candidate database from Resume email and send to Email",
    "description": "Automate the task to update candidate database originating from Resume email and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-resume-email-bamboohr.json",
    "title": "Update candidate database from Resume email and send to BambooHR",
    "description": "Automate the task to update candidate database originating from Resume email and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-resume-email-workday.json",
    "title": "Update candidate database from Resume email and send to Workday",
    "description": "Automate the task to update candidate database originating from Resume email and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-offer-letter-resume-email-google-sheets.json",
    "title": "Generate offer letter from Resume email and send to Google Sheets",
    "description": "Automate the task to generate offer letter originating from Resume email and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-resume-email-airtable.json",
    "title": "Generate offer letter from Resume email and send to Airtable",
    "description": "Automate the task to generate offer letter originating from Resume email and then send the result to Airtable. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Airtable",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-resume-email-slack.json",
    "title": "Generate offer letter from Resume email and send to Slack",
    "description": "Automate the task to generate offer letter originating from Resume email and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-resume-email-email.json",
    "title": "Generate offer letter from Resume email and send to Email",
    "description": "Automate the task to generate offer letter originating from Resume email and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-resume-email-bamboohr.json",
    "title": "Generate offer letter from Resume email and send to BambooHR",
    "description": "Automate the task to generate offer letter originating from Resume email and then send the result to BambooHR. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "BambooHR",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-resume-email-workday.json",
    "title": "Generate offer letter from Resume email and send to Workday",
    "description": "Automate the task to generate offer letter originating from Resume email and then send the result to Workday. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Workday",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "run-background-check-resume-email-google-sheets.json",
    "title": "Run background check from Resume email and send to Google Sheets",
    "description": "Automate the task to run background check originating from Resume email and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-resume-email-airtable.json",
    "title": "Run background check from Resume email and send to Airtable",
    "description": "Automate the task to run background check originating from Resume email and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-resume-email-slack.json",
    "title": "Run background check from Resume email and send to Slack",
    "description": "Automate the task to run background check originating from Resume email and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-resume-email-email.json",
    "title": "Run background check from Resume email and send to Email",
    "description": "Automate the task to run background check originating from Resume email and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-resume-email-bamboohr.json",
    "title": "Run background check from Resume email and send to BambooHR",
    "description": "Automate the task to run background check originating from Resume email and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-resume-email-workday.json",
    "title": "Run background check from Resume email and send to Workday",
    "description": "Automate the task to run background check originating from Resume email and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "classify-resume-with-ai-application-form-google-sheets.json",
    "title": "Classify resume with ai from Application form and send to Google Sheets",
    "description": "Automate the task to classify resume with AI originating from Application form and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-application-form-airtable.json",
    "title": "Classify resume with ai from Application form and send to Airtable",
    "description": "Automate the task to classify resume with AI originating from Application form and then send the result to Airtable. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Airtable",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-application-form-slack.json",
    "title": "Classify resume with ai from Application form and send to Slack",
    "description": "Automate the task to classify resume with AI originating from Application form and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-application-form-email.json",
    "title": "Classify resume with ai from Application form and send to Email",
    "description": "Automate the task to classify resume with AI originating from Application form and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-application-form-bamboohr.json",
    "title": "Classify resume with ai from Application form and send to BambooHR",
    "description": "Automate the task to classify resume with AI originating from Application form and then send the result to BambooHR. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "BambooHR",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-application-form-workday.json",
    "title": "Classify resume with ai from Application form and send to Workday",
    "description": "Automate the task to classify resume with AI originating from Application form and then send the result to Workday. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Workday",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "schedule-interview-application-form-google-sheets.json",
    "title": "Schedule interview from Application form and send to Google Sheets",
    "description": "Automate the task to schedule interview originating from Application form and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-application-form-airtable.json",
    "title": "Schedule interview from Application form and send to Airtable",
    "description": "Automate the task to schedule interview originating from Application form and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-application-form-slack.json",
    "title": "Schedule interview from Application form and send to Slack",
    "description": "Automate the task to schedule interview originating from Application form and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-application-form-email.json",
    "title": "Schedule interview from Application form and send to Email",
    "description": "Automate the task to schedule interview originating from Application form and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-application-form-bamboohr.json",
    "title": "Schedule interview from Application form and send to BambooHR",
    "description": "Automate the task to schedule interview originating from Application form and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-application-form-workday.json",
    "title": "Schedule interview from Application form and send to Workday",
    "description": "Automate the task to schedule interview originating from Application form and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-application-form-google-sheets.json",
    "title": "Send rejection email from Application form and send to Google Sheets",
    "description": "Automate the task to send rejection email originating from Application form and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-application-form-airtable.json",
    "title": "Send rejection email from Application form and send to Airtable",
    "description": "Automate the task to send rejection email originating from Application form and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-application-form-slack.json",
    "title": "Send rejection email from Application form and send to Slack",
    "description": "Automate the task to send rejection email originating from Application form and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-application-form-email.json",
    "title": "Send rejection email from Application form and send to Email",
    "description": "Automate the task to send rejection email originating from Application form and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-application-form-bamboohr.json",
    "title": "Send rejection email from Application form and send to BambooHR",
    "description": "Automate the task to send rejection email originating from Application form and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-application-form-workday.json",
    "title": "Send rejection email from Application form and send to Workday",
    "description": "Automate the task to send rejection email originating from Application form and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-application-form-google-sheets.json",
    "title": "Update candidate database from Application form and send to Google Sheets",
    "description": "Automate the task to update candidate database originating from Application form and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-application-form-airtable.json",
    "title": "Update candidate database from Application form and send to Airtable",
    "description": "Automate the task to update candidate database originating from Application form and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-application-form-slack.json",
    "title": "Update candidate database from Application form and send to Slack",
    "description": "Automate the task to update candidate database originating from Application form and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-application-form-email.json",
    "title": "Update candidate database from Application form and send to Email",
    "description": "Automate the task to update candidate database originating from Application form and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-application-form-bamboohr.json",
    "title": "Update candidate database from Application form and send to BambooHR",
    "description": "Automate the task to update candidate database originating from Application form and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-application-form-workday.json",
    "title": "Update candidate database from Application form and send to Workday",
    "description": "Automate the task to update candidate database originating from Application form and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-offer-letter-application-form-google-sheets.json",
    "title": "Generate offer letter from Application form and send to Google Sheets",
    "description": "Automate the task to generate offer letter originating from Application form and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-application-form-airtable.json",
    "title": "Generate offer letter from Application form and send to Airtable",
    "description": "Automate the task to generate offer letter originating from Application form and then send the result to Airtable. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Airtable",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-application-form-slack.json",
    "title": "Generate offer letter from Application form and send to Slack",
    "description": "Automate the task to generate offer letter originating from Application form and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-application-form-email.json",
    "title": "Generate offer letter from Application form and send to Email",
    "description": "Automate the task to generate offer letter originating from Application form and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-application-form-bamboohr.json",
    "title": "Generate offer letter from Application form and send to BambooHR",
    "description": "Automate the task to generate offer letter originating from Application form and then send the result to BambooHR. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "BambooHR",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-application-form-workday.json",
    "title": "Generate offer letter from Application form and send to Workday",
    "description": "Automate the task to generate offer letter originating from Application form and then send the result to Workday. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Workday",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "run-background-check-application-form-google-sheets.json",
    "title": "Run background check from Application form and send to Google Sheets",
    "description": "Automate the task to run background check originating from Application form and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-application-form-airtable.json",
    "title": "Run background check from Application form and send to Airtable",
    "description": "Automate the task to run background check originating from Application form and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-application-form-slack.json",
    "title": "Run background check from Application form and send to Slack",
    "description": "Automate the task to run background check originating from Application form and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-application-form-email.json",
    "title": "Run background check from Application form and send to Email",
    "description": "Automate the task to run background check originating from Application form and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-application-form-bamboohr.json",
    "title": "Run background check from Application form and send to BambooHR",
    "description": "Automate the task to run background check originating from Application form and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-application-form-workday.json",
    "title": "Run background check from Application form and send to Workday",
    "description": "Automate the task to run background check originating from Application form and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Application form",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from Application form",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "classify-resume-with-ai-greenhouse-candidate-google-sheets.json",
    "title": "Classify resume with ai from Greenhouse candidate and send to Google Sheets",
    "description": "Automate the task to classify resume with AI originating from Greenhouse candidate and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-greenhouse-candidate-airtable.json",
    "title": "Classify resume with ai from Greenhouse candidate and send to Airtable",
    "description": "Automate the task to classify resume with AI originating from Greenhouse candidate and then send the result to Airtable. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Airtable",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-greenhouse-candidate-slack.json",
    "title": "Classify resume with ai from Greenhouse candidate and send to Slack",
    "description": "Automate the task to classify resume with AI originating from Greenhouse candidate and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-greenhouse-candidate-email.json",
    "title": "Classify resume with ai from Greenhouse candidate and send to Email",
    "description": "Automate the task to classify resume with AI originating from Greenhouse candidate and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-greenhouse-candidate-bamboohr.json",
    "title": "Classify resume with ai from Greenhouse candidate and send to BambooHR",
    "description": "Automate the task to classify resume with AI originating from Greenhouse candidate and then send the result to BambooHR. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "BambooHR",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-greenhouse-candidate-workday.json",
    "title": "Classify resume with ai from Greenhouse candidate and send to Workday",
    "description": "Automate the task to classify resume with AI originating from Greenhouse candidate and then send the result to Workday. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Workday",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "schedule-interview-greenhouse-candidate-google-sheets.json",
    "title": "Schedule interview from Greenhouse candidate and send to Google Sheets",
    "description": "Automate the task to schedule interview originating from Greenhouse candidate and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-greenhouse-candidate-airtable.json",
    "title": "Schedule interview from Greenhouse candidate and send to Airtable",
    "description": "Automate the task to schedule interview originating from Greenhouse candidate and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-greenhouse-candidate-slack.json",
    "title": "Schedule interview from Greenhouse candidate and send to Slack",
    "description": "Automate the task to schedule interview originating from Greenhouse candidate and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-greenhouse-candidate-email.json",
    "title": "Schedule interview from Greenhouse candidate and send to Email",
    "description": "Automate the task to schedule interview originating from Greenhouse candidate and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-greenhouse-candidate-bamboohr.json",
    "title": "Schedule interview from Greenhouse candidate and send to BambooHR",
    "description": "Automate the task to schedule interview originating from Greenhouse candidate and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-greenhouse-candidate-workday.json",
    "title": "Schedule interview from Greenhouse candidate and send to Workday",
    "description": "Automate the task to schedule interview originating from Greenhouse candidate and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-greenhouse-candidate-google-sheets.json",
    "title": "Send rejection email from Greenhouse candidate and send to Google Sheets",
    "description": "Automate the task to send rejection email originating from Greenhouse candidate and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-greenhouse-candidate-airtable.json",
    "title": "Send rejection email from Greenhouse candidate and send to Airtable",
    "description": "Automate the task to send rejection email originating from Greenhouse candidate and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-greenhouse-candidate-slack.json",
    "title": "Send rejection email from Greenhouse candidate and send to Slack",
    "description": "Automate the task to send rejection email originating from Greenhouse candidate and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-greenhouse-candidate-email.json",
    "title": "Send rejection email from Greenhouse candidate and send to Email",
    "description": "Automate the task to send rejection email originating from Greenhouse candidate and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-greenhouse-candidate-bamboohr.json",
    "title": "Send rejection email from Greenhouse candidate and send to BambooHR",
    "description": "Automate the task to send rejection email originating from Greenhouse candidate and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-greenhouse-candidate-workday.json",
    "title": "Send rejection email from Greenhouse candidate and send to Workday",
    "description": "Automate the task to send rejection email originating from Greenhouse candidate and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-greenhouse-candidate-google-sheets.json",
    "title": "Update candidate database from Greenhouse candidate and send to Google Sheets",
    "description": "Automate the task to update candidate database originating from Greenhouse candidate and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-greenhouse-candidate-airtable.json",
    "title": "Update candidate database from Greenhouse candidate and send to Airtable",
    "description": "Automate the task to update candidate database originating from Greenhouse candidate and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-greenhouse-candidate-slack.json",
    "title": "Update candidate database from Greenhouse candidate and send to Slack",
    "description": "Automate the task to update candidate database originating from Greenhouse candidate and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-greenhouse-candidate-email.json",
    "title": "Update candidate database from Greenhouse candidate and send to Email",
    "description": "Automate the task to update candidate database originating from Greenhouse candidate and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-greenhouse-candidate-bamboohr.json",
    "title": "Update candidate database from Greenhouse candidate and send to BambooHR",
    "description": "Automate the task to update candidate database originating from Greenhouse candidate and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-greenhouse-candidate-workday.json",
    "title": "Update candidate database from Greenhouse candidate and send to Workday",
    "description": "Automate the task to update candidate database originating from Greenhouse candidate and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-offer-letter-greenhouse-candidate-google-sheets.json",
    "title": "Generate offer letter from Greenhouse candidate and send to Google Sheets",
    "description": "Automate the task to generate offer letter originating from Greenhouse candidate and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-greenhouse-candidate-airtable.json",
    "title": "Generate offer letter from Greenhouse candidate and send to Airtable",
    "description": "Automate the task to generate offer letter originating from Greenhouse candidate and then send the result to Airtable. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Airtable",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-greenhouse-candidate-slack.json",
    "title": "Generate offer letter from Greenhouse candidate and send to Slack",
    "description": "Automate the task to generate offer letter originating from Greenhouse candidate and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-greenhouse-candidate-email.json",
    "title": "Generate offer letter from Greenhouse candidate and send to Email",
    "description": "Automate the task to generate offer letter originating from Greenhouse candidate and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-greenhouse-candidate-bamboohr.json",
    "title": "Generate offer letter from Greenhouse candidate and send to BambooHR",
    "description": "Automate the task to generate offer letter originating from Greenhouse candidate and then send the result to BambooHR. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "BambooHR",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-greenhouse-candidate-workday.json",
    "title": "Generate offer letter from Greenhouse candidate and send to Workday",
    "description": "Automate the task to generate offer letter originating from Greenhouse candidate and then send the result to Workday. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Workday",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "run-background-check-greenhouse-candidate-google-sheets.json",
    "title": "Run background check from Greenhouse candidate and send to Google Sheets",
    "description": "Automate the task to run background check originating from Greenhouse candidate and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-greenhouse-candidate-airtable.json",
    "title": "Run background check from Greenhouse candidate and send to Airtable",
    "description": "Automate the task to run background check originating from Greenhouse candidate and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-greenhouse-candidate-slack.json",
    "title": "Run background check from Greenhouse candidate and send to Slack",
    "description": "Automate the task to run background check originating from Greenhouse candidate and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-greenhouse-candidate-email.json",
    "title": "Run background check from Greenhouse candidate and send to Email",
    "description": "Automate the task to run background check originating from Greenhouse candidate and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-greenhouse-candidate-bamboohr.json",
    "title": "Run background check from Greenhouse candidate and send to BambooHR",
    "description": "Automate the task to run background check originating from Greenhouse candidate and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-greenhouse-candidate-workday.json",
    "title": "Run background check from Greenhouse candidate and send to Workday",
    "description": "Automate the task to run background check originating from Greenhouse candidate and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Greenhouse candidate",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from Greenhouse candidate",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "classify-resume-with-ai-job-portal-google-sheets.json",
    "title": "Classify resume with ai from Job portal and send to Google Sheets",
    "description": "Automate the task to classify resume with AI originating from Job portal and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-job-portal-airtable.json",
    "title": "Classify resume with ai from Job portal and send to Airtable",
    "description": "Automate the task to classify resume with AI originating from Job portal and then send the result to Airtable. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Airtable",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-job-portal-slack.json",
    "title": "Classify resume with ai from Job portal and send to Slack",
    "description": "Automate the task to classify resume with AI originating from Job portal and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-job-portal-email.json",
    "title": "Classify resume with ai from Job portal and send to Email",
    "description": "Automate the task to classify resume with AI originating from Job portal and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-job-portal-bamboohr.json",
    "title": "Classify resume with ai from Job portal and send to BambooHR",
    "description": "Automate the task to classify resume with AI originating from Job portal and then send the result to BambooHR. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "BambooHR",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-job-portal-workday.json",
    "title": "Classify resume with ai from Job portal and send to Workday",
    "description": "Automate the task to classify resume with AI originating from Job portal and then send the result to Workday. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Workday",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "schedule-interview-job-portal-google-sheets.json",
    "title": "Schedule interview from Job portal and send to Google Sheets",
    "description": "Automate the task to schedule interview originating from Job portal and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-job-portal-airtable.json",
    "title": "Schedule interview from Job portal and send to Airtable",
    "description": "Automate the task to schedule interview originating from Job portal and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-job-portal-slack.json",
    "title": "Schedule interview from Job portal and send to Slack",
    "description": "Automate the task to schedule interview originating from Job portal and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-job-portal-email.json",
    "title": "Schedule interview from Job portal and send to Email",
    "description": "Automate the task to schedule interview originating from Job portal and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-job-portal-bamboohr.json",
    "title": "Schedule interview from Job portal and send to BambooHR",
    "description": "Automate the task to schedule interview originating from Job portal and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-job-portal-workday.json",
    "title": "Schedule interview from Job portal and send to Workday",
    "description": "Automate the task to schedule interview originating from Job portal and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-job-portal-google-sheets.json",
    "title": "Send rejection email from Job portal and send to Google Sheets",
    "description": "Automate the task to send rejection email originating from Job portal and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-job-portal-airtable.json",
    "title": "Send rejection email from Job portal and send to Airtable",
    "description": "Automate the task to send rejection email originating from Job portal and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-job-portal-slack.json",
    "title": "Send rejection email from Job portal and send to Slack",
    "description": "Automate the task to send rejection email originating from Job portal and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-job-portal-email.json",
    "title": "Send rejection email from Job portal and send to Email",
    "description": "Automate the task to send rejection email originating from Job portal and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-job-portal-bamboohr.json",
    "title": "Send rejection email from Job portal and send to BambooHR",
    "description": "Automate the task to send rejection email originating from Job portal and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-job-portal-workday.json",
    "title": "Send rejection email from Job portal and send to Workday",
    "description": "Automate the task to send rejection email originating from Job portal and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-job-portal-google-sheets.json",
    "title": "Update candidate database from Job portal and send to Google Sheets",
    "description": "Automate the task to update candidate database originating from Job portal and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-job-portal-airtable.json",
    "title": "Update candidate database from Job portal and send to Airtable",
    "description": "Automate the task to update candidate database originating from Job portal and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-job-portal-slack.json",
    "title": "Update candidate database from Job portal and send to Slack",
    "description": "Automate the task to update candidate database originating from Job portal and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-job-portal-email.json",
    "title": "Update candidate database from Job portal and send to Email",
    "description": "Automate the task to update candidate database originating from Job portal and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-job-portal-bamboohr.json",
    "title": "Update candidate database from Job portal and send to BambooHR",
    "description": "Automate the task to update candidate database originating from Job portal and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-job-portal-workday.json",
    "title": "Update candidate database from Job portal and send to Workday",
    "description": "Automate the task to update candidate database originating from Job portal and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-offer-letter-job-portal-google-sheets.json",
    "title": "Generate offer letter from Job portal and send to Google Sheets",
    "description": "Automate the task to generate offer letter originating from Job portal and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-job-portal-airtable.json",
    "title": "Generate offer letter from Job portal and send to Airtable",
    "description": "Automate the task to generate offer letter originating from Job portal and then send the result to Airtable. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Airtable",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-job-portal-slack.json",
    "title": "Generate offer letter from Job portal and send to Slack",
    "description": "Automate the task to generate offer letter originating from Job portal and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-job-portal-email.json",
    "title": "Generate offer letter from Job portal and send to Email",
    "description": "Automate the task to generate offer letter originating from Job portal and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-job-portal-bamboohr.json",
    "title": "Generate offer letter from Job portal and send to BambooHR",
    "description": "Automate the task to generate offer letter originating from Job portal and then send the result to BambooHR. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "BambooHR",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-job-portal-workday.json",
    "title": "Generate offer letter from Job portal and send to Workday",
    "description": "Automate the task to generate offer letter originating from Job portal and then send the result to Workday. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Workday",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "run-background-check-job-portal-google-sheets.json",
    "title": "Run background check from Job portal and send to Google Sheets",
    "description": "Automate the task to run background check originating from Job portal and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-job-portal-airtable.json",
    "title": "Run background check from Job portal and send to Airtable",
    "description": "Automate the task to run background check originating from Job portal and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-job-portal-slack.json",
    "title": "Run background check from Job portal and send to Slack",
    "description": "Automate the task to run background check originating from Job portal and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-job-portal-email.json",
    "title": "Run background check from Job portal and send to Email",
    "description": "Automate the task to run background check originating from Job portal and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-job-portal-bamboohr.json",
    "title": "Run background check from Job portal and send to BambooHR",
    "description": "Automate the task to run background check originating from Job portal and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-job-portal-workday.json",
    "title": "Run background check from Job portal and send to Workday",
    "description": "Automate the task to run background check originating from Job portal and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Job portal",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from Job portal",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "classify-resume-with-ai-linkedin-application-google-sheets.json",
    "title": "Classify resume with ai from LinkedIn application and send to Google Sheets",
    "description": "Automate the task to classify resume with AI originating from LinkedIn application and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-linkedin-application-airtable.json",
    "title": "Classify resume with ai from LinkedIn application and send to Airtable",
    "description": "Automate the task to classify resume with AI originating from LinkedIn application and then send the result to Airtable. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Airtable",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-linkedin-application-slack.json",
    "title": "Classify resume with ai from LinkedIn application and send to Slack",
    "description": "Automate the task to classify resume with AI originating from LinkedIn application and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-linkedin-application-email.json",
    "title": "Classify resume with ai from LinkedIn application and send to Email",
    "description": "Automate the task to classify resume with AI originating from LinkedIn application and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-linkedin-application-bamboohr.json",
    "title": "Classify resume with ai from LinkedIn application and send to BambooHR",
    "description": "Automate the task to classify resume with AI originating from LinkedIn application and then send the result to BambooHR. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "BambooHR",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-linkedin-application-workday.json",
    "title": "Classify resume with ai from LinkedIn application and send to Workday",
    "description": "Automate the task to classify resume with AI originating from LinkedIn application and then send the result to Workday. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Workday",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "schedule-interview-linkedin-application-google-sheets.json",
    "title": "Schedule interview from LinkedIn application and send to Google Sheets",
    "description": "Automate the task to schedule interview originating from LinkedIn application and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-linkedin-application-airtable.json",
    "title": "Schedule interview from LinkedIn application and send to Airtable",
    "description": "Automate the task to schedule interview originating from LinkedIn application and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-linkedin-application-slack.json",
    "title": "Schedule interview from LinkedIn application and send to Slack",
    "description": "Automate the task to schedule interview originating from LinkedIn application and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-linkedin-application-email.json",
    "title": "Schedule interview from LinkedIn application and send to Email",
    "description": "Automate the task to schedule interview originating from LinkedIn application and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-linkedin-application-bamboohr.json",
    "title": "Schedule interview from LinkedIn application and send to BambooHR",
    "description": "Automate the task to schedule interview originating from LinkedIn application and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-linkedin-application-workday.json",
    "title": "Schedule interview from LinkedIn application and send to Workday",
    "description": "Automate the task to schedule interview originating from LinkedIn application and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-linkedin-application-google-sheets.json",
    "title": "Send rejection email from LinkedIn application and send to Google Sheets",
    "description": "Automate the task to send rejection email originating from LinkedIn application and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-linkedin-application-airtable.json",
    "title": "Send rejection email from LinkedIn application and send to Airtable",
    "description": "Automate the task to send rejection email originating from LinkedIn application and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-linkedin-application-slack.json",
    "title": "Send rejection email from LinkedIn application and send to Slack",
    "description": "Automate the task to send rejection email originating from LinkedIn application and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-linkedin-application-email.json",
    "title": "Send rejection email from LinkedIn application and send to Email",
    "description": "Automate the task to send rejection email originating from LinkedIn application and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-linkedin-application-bamboohr.json",
    "title": "Send rejection email from LinkedIn application and send to BambooHR",
    "description": "Automate the task to send rejection email originating from LinkedIn application and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-linkedin-application-workday.json",
    "title": "Send rejection email from LinkedIn application and send to Workday",
    "description": "Automate the task to send rejection email originating from LinkedIn application and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-linkedin-application-google-sheets.json",
    "title": "Update candidate database from LinkedIn application and send to Google Sheets",
    "description": "Automate the task to update candidate database originating from LinkedIn application and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-linkedin-application-airtable.json",
    "title": "Update candidate database from LinkedIn application and send to Airtable",
    "description": "Automate the task to update candidate database originating from LinkedIn application and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-linkedin-application-slack.json",
    "title": "Update candidate database from LinkedIn application and send to Slack",
    "description": "Automate the task to update candidate database originating from LinkedIn application and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-linkedin-application-email.json",
    "title": "Update candidate database from LinkedIn application and send to Email",
    "description": "Automate the task to update candidate database originating from LinkedIn application and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-linkedin-application-bamboohr.json",
    "title": "Update candidate database from LinkedIn application and send to BambooHR",
    "description": "Automate the task to update candidate database originating from LinkedIn application and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-linkedin-application-workday.json",
    "title": "Update candidate database from LinkedIn application and send to Workday",
    "description": "Automate the task to update candidate database originating from LinkedIn application and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-offer-letter-linkedin-application-google-sheets.json",
    "title": "Generate offer letter from LinkedIn application and send to Google Sheets",
    "description": "Automate the task to generate offer letter originating from LinkedIn application and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-linkedin-application-airtable.json",
    "title": "Generate offer letter from LinkedIn application and send to Airtable",
    "description": "Automate the task to generate offer letter originating from LinkedIn application and then send the result to Airtable. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Airtable",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-linkedin-application-slack.json",
    "title": "Generate offer letter from LinkedIn application and send to Slack",
    "description": "Automate the task to generate offer letter originating from LinkedIn application and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-linkedin-application-email.json",
    "title": "Generate offer letter from LinkedIn application and send to Email",
    "description": "Automate the task to generate offer letter originating from LinkedIn application and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-linkedin-application-bamboohr.json",
    "title": "Generate offer letter from LinkedIn application and send to BambooHR",
    "description": "Automate the task to generate offer letter originating from LinkedIn application and then send the result to BambooHR. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "BambooHR",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-offer-letter-linkedin-application-workday.json",
    "title": "Generate offer letter from LinkedIn application and send to Workday",
    "description": "Automate the task to generate offer letter originating from LinkedIn application and then send the result to Workday. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Workday",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "run-background-check-linkedin-application-google-sheets.json",
    "title": "Run background check from LinkedIn application and send to Google Sheets",
    "description": "Automate the task to run background check originating from LinkedIn application and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-linkedin-application-airtable.json",
    "title": "Run background check from LinkedIn application and send to Airtable",
    "description": "Automate the task to run background check originating from LinkedIn application and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-linkedin-application-slack.json",
    "title": "Run background check from LinkedIn application and send to Slack",
    "description": "Automate the task to run background check originating from LinkedIn application and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-linkedin-application-email.json",
    "title": "Run background check from LinkedIn application and send to Email",
    "description": "Automate the task to run background check originating from LinkedIn application and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-linkedin-application-bamboohr.json",
    "title": "Run background check from LinkedIn application and send to BambooHR",
    "description": "Automate the task to run background check originating from LinkedIn application and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-background-check-linkedin-application-workday.json",
    "title": "Run background check from LinkedIn application and send to Workday",
    "description": "Automate the task to run background check originating from LinkedIn application and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "LinkedIn application",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from LinkedIn application",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "classify-resume-with-ai-resume-email-google-sheets-1.json",
    "title": "Classify resume with ai from Resume email and send to Google Sheets",
    "description": "Automate the task to classify resume with AI originating from Resume email and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-resume-email-airtable-1.json",
    "title": "Classify resume with ai from Resume email and send to Airtable",
    "description": "Automate the task to classify resume with AI originating from Resume email and then send the result to Airtable. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Airtable",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-resume-email-slack-1.json",
    "title": "Classify resume with ai from Resume email and send to Slack",
    "description": "Automate the task to classify resume with AI originating from Resume email and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-resume-email-email-1.json",
    "title": "Classify resume with ai from Resume email and send to Email",
    "description": "Automate the task to classify resume with AI originating from Resume email and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-resume-email-bamboohr-1.json",
    "title": "Classify resume with ai from Resume email and send to BambooHR",
    "description": "Automate the task to classify resume with AI originating from Resume email and then send the result to BambooHR. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "BambooHR",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "classify-resume-with-ai-resume-email-workday-1.json",
    "title": "Classify resume with ai from Resume email and send to Workday",
    "description": "Automate the task to classify resume with AI originating from Resume email and then send the result to Workday. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Workday",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "schedule-interview-resume-email-google-sheets-1.json",
    "title": "Schedule interview from Resume email and send to Google Sheets",
    "description": "Automate the task to schedule interview originating from Resume email and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-resume-email-airtable-1.json",
    "title": "Schedule interview from Resume email and send to Airtable",
    "description": "Automate the task to schedule interview originating from Resume email and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-resume-email-slack-1.json",
    "title": "Schedule interview from Resume email and send to Slack",
    "description": "Automate the task to schedule interview originating from Resume email and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-resume-email-email-1.json",
    "title": "Schedule interview from Resume email and send to Email",
    "description": "Automate the task to schedule interview originating from Resume email and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-resume-email-bamboohr-1.json",
    "title": "Schedule interview from Resume email and send to BambooHR",
    "description": "Automate the task to schedule interview originating from Resume email and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-interview-resume-email-workday-1.json",
    "title": "Schedule interview from Resume email and send to Workday",
    "description": "Automate the task to schedule interview originating from Resume email and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-resume-email-google-sheets-1.json",
    "title": "Send rejection email from Resume email and send to Google Sheets",
    "description": "Automate the task to send rejection email originating from Resume email and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-resume-email-airtable-1.json",
    "title": "Send rejection email from Resume email and send to Airtable",
    "description": "Automate the task to send rejection email originating from Resume email and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-resume-email-slack-1.json",
    "title": "Send rejection email from Resume email and send to Slack",
    "description": "Automate the task to send rejection email originating from Resume email and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-resume-email-email-1.json",
    "title": "Send rejection email from Resume email and send to Email",
    "description": "Automate the task to send rejection email originating from Resume email and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-resume-email-bamboohr-1.json",
    "title": "Send rejection email from Resume email and send to BambooHR",
    "description": "Automate the task to send rejection email originating from Resume email and then send the result to BambooHR. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "BambooHR",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to BambooHR",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-rejection-email-resume-email-workday-1.json",
    "title": "Send rejection email from Resume email and send to Workday",
    "description": "Automate the task to send rejection email originating from Resume email and then send the result to Workday. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Workday",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Workday",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-resume-email-google-sheets-1.json",
    "title": "Update candidate database from Resume email and send to Google Sheets",
    "description": "Automate the task to update candidate database originating from Resume email and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-candidate-database-resume-email-airtable-1.json",
    "title": "Update candidate database from Resume email and send to Airtable",
    "description": "Automate the task to update candidate database originating from Resume email and then send the result to Airtable. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "HR & Recruitment",
    "tools_used": [
      "Resume email",
      "Airtable",
      "Slack"
    ],
    "trigger": "Incoming event from Resume email",
    "output": "Data sent to Airtable",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-invoice-sheet-email.json",
    "title": "Generate invoice pdf from Invoice sheet and send to Email",
    "description": "Automate the task to generate invoice PDF originating from Invoice sheet and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-invoice-sheet-slack.json",
    "title": "Generate invoice pdf from Invoice sheet and send to Slack",
    "description": "Automate the task to generate invoice PDF originating from Invoice sheet and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-invoice-sheet-google-drive.json",
    "title": "Generate invoice pdf from Invoice sheet and send to Google Drive",
    "description": "Automate the task to generate invoice PDF originating from Invoice sheet and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-invoice-sheet-quickbooks.json",
    "title": "Generate invoice pdf from Invoice sheet and send to QuickBooks",
    "description": "Automate the task to generate invoice PDF originating from Invoice sheet and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-invoice-sheet-xero.json",
    "title": "Generate invoice pdf from Invoice sheet and send to Xero",
    "description": "Automate the task to generate invoice PDF originating from Invoice sheet and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-invoice-sheet-accounting-db.json",
    "title": "Generate invoice pdf from Invoice sheet and send to Accounting DB",
    "description": "Automate the task to generate invoice PDF originating from Invoice sheet and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-invoice-sheet-email.json",
    "title": "Send invoice from Invoice sheet and send to Email",
    "description": "Automate the task to send invoice originating from Invoice sheet and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-invoice-sheet-slack.json",
    "title": "Send invoice from Invoice sheet and send to Slack",
    "description": "Automate the task to send invoice originating from Invoice sheet and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-invoice-sheet-google-drive.json",
    "title": "Send invoice from Invoice sheet and send to Google Drive",
    "description": "Automate the task to send invoice originating from Invoice sheet and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-invoice-sheet-quickbooks.json",
    "title": "Send invoice from Invoice sheet and send to QuickBooks",
    "description": "Automate the task to send invoice originating from Invoice sheet and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-invoice-sheet-xero.json",
    "title": "Send invoice from Invoice sheet and send to Xero",
    "description": "Automate the task to send invoice originating from Invoice sheet and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-invoice-sheet-accounting-db.json",
    "title": "Send invoice from Invoice sheet and send to Accounting DB",
    "description": "Automate the task to send invoice originating from Invoice sheet and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-invoice-sheet-email.json",
    "title": "Reconcile payment from Invoice sheet and send to Email",
    "description": "Automate the task to reconcile payment originating from Invoice sheet and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-invoice-sheet-slack.json",
    "title": "Reconcile payment from Invoice sheet and send to Slack",
    "description": "Automate the task to reconcile payment originating from Invoice sheet and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-invoice-sheet-google-drive.json",
    "title": "Reconcile payment from Invoice sheet and send to Google Drive",
    "description": "Automate the task to reconcile payment originating from Invoice sheet and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-invoice-sheet-quickbooks.json",
    "title": "Reconcile payment from Invoice sheet and send to QuickBooks",
    "description": "Automate the task to reconcile payment originating from Invoice sheet and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-invoice-sheet-xero.json",
    "title": "Reconcile payment from Invoice sheet and send to Xero",
    "description": "Automate the task to reconcile payment originating from Invoice sheet and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-invoice-sheet-accounting-db.json",
    "title": "Reconcile payment from Invoice sheet and send to Accounting DB",
    "description": "Automate the task to reconcile payment originating from Invoice sheet and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-invoice-sheet-email.json",
    "title": "Update ledger from Invoice sheet and send to Email",
    "description": "Automate the task to update ledger originating from Invoice sheet and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-invoice-sheet-slack.json",
    "title": "Update ledger from Invoice sheet and send to Slack",
    "description": "Automate the task to update ledger originating from Invoice sheet and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-invoice-sheet-google-drive.json",
    "title": "Update ledger from Invoice sheet and send to Google Drive",
    "description": "Automate the task to update ledger originating from Invoice sheet and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-invoice-sheet-quickbooks.json",
    "title": "Update ledger from Invoice sheet and send to QuickBooks",
    "description": "Automate the task to update ledger originating from Invoice sheet and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-invoice-sheet-xero.json",
    "title": "Update ledger from Invoice sheet and send to Xero",
    "description": "Automate the task to update ledger originating from Invoice sheet and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-invoice-sheet-accounting-db.json",
    "title": "Update ledger from Invoice sheet and send to Accounting DB",
    "description": "Automate the task to update ledger originating from Invoice sheet and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-invoice-sheet-email.json",
    "title": "Approve expense from Invoice sheet and send to Email",
    "description": "Automate the task to approve expense originating from Invoice sheet and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-invoice-sheet-slack.json",
    "title": "Approve expense from Invoice sheet and send to Slack",
    "description": "Automate the task to approve expense originating from Invoice sheet and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-invoice-sheet-google-drive.json",
    "title": "Approve expense from Invoice sheet and send to Google Drive",
    "description": "Automate the task to approve expense originating from Invoice sheet and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-invoice-sheet-quickbooks.json",
    "title": "Approve expense from Invoice sheet and send to QuickBooks",
    "description": "Automate the task to approve expense originating from Invoice sheet and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-invoice-sheet-xero.json",
    "title": "Approve expense from Invoice sheet and send to Xero",
    "description": "Automate the task to approve expense originating from Invoice sheet and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-invoice-sheet-accounting-db.json",
    "title": "Approve expense from Invoice sheet and send to Accounting DB",
    "description": "Automate the task to approve expense originating from Invoice sheet and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-invoice-sheet-email.json",
    "title": "Alert overdue invoice from Invoice sheet and send to Email",
    "description": "Automate the task to alert overdue invoice originating from Invoice sheet and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-invoice-sheet-slack.json",
    "title": "Alert overdue invoice from Invoice sheet and send to Slack",
    "description": "Automate the task to alert overdue invoice originating from Invoice sheet and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-invoice-sheet-google-drive.json",
    "title": "Alert overdue invoice from Invoice sheet and send to Google Drive",
    "description": "Automate the task to alert overdue invoice originating from Invoice sheet and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-invoice-sheet-quickbooks.json",
    "title": "Alert overdue invoice from Invoice sheet and send to QuickBooks",
    "description": "Automate the task to alert overdue invoice originating from Invoice sheet and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-invoice-sheet-xero.json",
    "title": "Alert overdue invoice from Invoice sheet and send to Xero",
    "description": "Automate the task to alert overdue invoice originating from Invoice sheet and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-invoice-sheet-accounting-db.json",
    "title": "Alert overdue invoice from Invoice sheet and send to Accounting DB",
    "description": "Automate the task to alert overdue invoice originating from Invoice sheet and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Invoice sheet",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from Invoice sheet",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-stripe-payment-email.json",
    "title": "Generate invoice pdf from Stripe payment and send to Email",
    "description": "Automate the task to generate invoice PDF originating from Stripe payment and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-stripe-payment-slack.json",
    "title": "Generate invoice pdf from Stripe payment and send to Slack",
    "description": "Automate the task to generate invoice PDF originating from Stripe payment and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-stripe-payment-google-drive.json",
    "title": "Generate invoice pdf from Stripe payment and send to Google Drive",
    "description": "Automate the task to generate invoice PDF originating from Stripe payment and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-stripe-payment-quickbooks.json",
    "title": "Generate invoice pdf from Stripe payment and send to QuickBooks",
    "description": "Automate the task to generate invoice PDF originating from Stripe payment and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-stripe-payment-xero.json",
    "title": "Generate invoice pdf from Stripe payment and send to Xero",
    "description": "Automate the task to generate invoice PDF originating from Stripe payment and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-stripe-payment-accounting-db.json",
    "title": "Generate invoice pdf from Stripe payment and send to Accounting DB",
    "description": "Automate the task to generate invoice PDF originating from Stripe payment and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-stripe-payment-email.json",
    "title": "Send invoice from Stripe payment and send to Email",
    "description": "Automate the task to send invoice originating from Stripe payment and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-stripe-payment-slack.json",
    "title": "Send invoice from Stripe payment and send to Slack",
    "description": "Automate the task to send invoice originating from Stripe payment and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-stripe-payment-google-drive.json",
    "title": "Send invoice from Stripe payment and send to Google Drive",
    "description": "Automate the task to send invoice originating from Stripe payment and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-stripe-payment-quickbooks.json",
    "title": "Send invoice from Stripe payment and send to QuickBooks",
    "description": "Automate the task to send invoice originating from Stripe payment and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-stripe-payment-xero.json",
    "title": "Send invoice from Stripe payment and send to Xero",
    "description": "Automate the task to send invoice originating from Stripe payment and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-stripe-payment-accounting-db.json",
    "title": "Send invoice from Stripe payment and send to Accounting DB",
    "description": "Automate the task to send invoice originating from Stripe payment and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-stripe-payment-email.json",
    "title": "Reconcile payment from Stripe payment and send to Email",
    "description": "Automate the task to reconcile payment originating from Stripe payment and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-stripe-payment-slack.json",
    "title": "Reconcile payment from Stripe payment and send to Slack",
    "description": "Automate the task to reconcile payment originating from Stripe payment and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-stripe-payment-google-drive.json",
    "title": "Reconcile payment from Stripe payment and send to Google Drive",
    "description": "Automate the task to reconcile payment originating from Stripe payment and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-stripe-payment-quickbooks.json",
    "title": "Reconcile payment from Stripe payment and send to QuickBooks",
    "description": "Automate the task to reconcile payment originating from Stripe payment and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-stripe-payment-xero.json",
    "title": "Reconcile payment from Stripe payment and send to Xero",
    "description": "Automate the task to reconcile payment originating from Stripe payment and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-stripe-payment-accounting-db.json",
    "title": "Reconcile payment from Stripe payment and send to Accounting DB",
    "description": "Automate the task to reconcile payment originating from Stripe payment and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-stripe-payment-email.json",
    "title": "Update ledger from Stripe payment and send to Email",
    "description": "Automate the task to update ledger originating from Stripe payment and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-stripe-payment-slack.json",
    "title": "Update ledger from Stripe payment and send to Slack",
    "description": "Automate the task to update ledger originating from Stripe payment and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-stripe-payment-google-drive.json",
    "title": "Update ledger from Stripe payment and send to Google Drive",
    "description": "Automate the task to update ledger originating from Stripe payment and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-stripe-payment-quickbooks.json",
    "title": "Update ledger from Stripe payment and send to QuickBooks",
    "description": "Automate the task to update ledger originating from Stripe payment and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-stripe-payment-xero.json",
    "title": "Update ledger from Stripe payment and send to Xero",
    "description": "Automate the task to update ledger originating from Stripe payment and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-stripe-payment-accounting-db.json",
    "title": "Update ledger from Stripe payment and send to Accounting DB",
    "description": "Automate the task to update ledger originating from Stripe payment and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-stripe-payment-email.json",
    "title": "Approve expense from Stripe payment and send to Email",
    "description": "Automate the task to approve expense originating from Stripe payment and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-stripe-payment-slack.json",
    "title": "Approve expense from Stripe payment and send to Slack",
    "description": "Automate the task to approve expense originating from Stripe payment and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-stripe-payment-google-drive.json",
    "title": "Approve expense from Stripe payment and send to Google Drive",
    "description": "Automate the task to approve expense originating from Stripe payment and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-stripe-payment-quickbooks.json",
    "title": "Approve expense from Stripe payment and send to QuickBooks",
    "description": "Automate the task to approve expense originating from Stripe payment and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-stripe-payment-xero.json",
    "title": "Approve expense from Stripe payment and send to Xero",
    "description": "Automate the task to approve expense originating from Stripe payment and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-stripe-payment-accounting-db.json",
    "title": "Approve expense from Stripe payment and send to Accounting DB",
    "description": "Automate the task to approve expense originating from Stripe payment and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-stripe-payment-email.json",
    "title": "Alert overdue invoice from Stripe payment and send to Email",
    "description": "Automate the task to alert overdue invoice originating from Stripe payment and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-stripe-payment-slack.json",
    "title": "Alert overdue invoice from Stripe payment and send to Slack",
    "description": "Automate the task to alert overdue invoice originating from Stripe payment and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-stripe-payment-google-drive.json",
    "title": "Alert overdue invoice from Stripe payment and send to Google Drive",
    "description": "Automate the task to alert overdue invoice originating from Stripe payment and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-stripe-payment-quickbooks.json",
    "title": "Alert overdue invoice from Stripe payment and send to QuickBooks",
    "description": "Automate the task to alert overdue invoice originating from Stripe payment and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-stripe-payment-xero.json",
    "title": "Alert overdue invoice from Stripe payment and send to Xero",
    "description": "Automate the task to alert overdue invoice originating from Stripe payment and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-stripe-payment-accounting-db.json",
    "title": "Alert overdue invoice from Stripe payment and send to Accounting DB",
    "description": "Automate the task to alert overdue invoice originating from Stripe payment and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Stripe payment",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from Stripe payment",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-expense-report-email.json",
    "title": "Generate invoice pdf from Expense report and send to Email",
    "description": "Automate the task to generate invoice PDF originating from Expense report and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-expense-report-slack.json",
    "title": "Generate invoice pdf from Expense report and send to Slack",
    "description": "Automate the task to generate invoice PDF originating from Expense report and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-expense-report-google-drive.json",
    "title": "Generate invoice pdf from Expense report and send to Google Drive",
    "description": "Automate the task to generate invoice PDF originating from Expense report and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-expense-report-quickbooks.json",
    "title": "Generate invoice pdf from Expense report and send to QuickBooks",
    "description": "Automate the task to generate invoice PDF originating from Expense report and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-expense-report-xero.json",
    "title": "Generate invoice pdf from Expense report and send to Xero",
    "description": "Automate the task to generate invoice PDF originating from Expense report and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-expense-report-accounting-db.json",
    "title": "Generate invoice pdf from Expense report and send to Accounting DB",
    "description": "Automate the task to generate invoice PDF originating from Expense report and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-expense-report-email.json",
    "title": "Send invoice from Expense report and send to Email",
    "description": "Automate the task to send invoice originating from Expense report and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-expense-report-slack.json",
    "title": "Send invoice from Expense report and send to Slack",
    "description": "Automate the task to send invoice originating from Expense report and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-expense-report-google-drive.json",
    "title": "Send invoice from Expense report and send to Google Drive",
    "description": "Automate the task to send invoice originating from Expense report and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-expense-report-quickbooks.json",
    "title": "Send invoice from Expense report and send to QuickBooks",
    "description": "Automate the task to send invoice originating from Expense report and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-expense-report-xero.json",
    "title": "Send invoice from Expense report and send to Xero",
    "description": "Automate the task to send invoice originating from Expense report and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-expense-report-accounting-db.json",
    "title": "Send invoice from Expense report and send to Accounting DB",
    "description": "Automate the task to send invoice originating from Expense report and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-expense-report-email.json",
    "title": "Reconcile payment from Expense report and send to Email",
    "description": "Automate the task to reconcile payment originating from Expense report and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-expense-report-slack.json",
    "title": "Reconcile payment from Expense report and send to Slack",
    "description": "Automate the task to reconcile payment originating from Expense report and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-expense-report-google-drive.json",
    "title": "Reconcile payment from Expense report and send to Google Drive",
    "description": "Automate the task to reconcile payment originating from Expense report and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-expense-report-quickbooks.json",
    "title": "Reconcile payment from Expense report and send to QuickBooks",
    "description": "Automate the task to reconcile payment originating from Expense report and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-expense-report-xero.json",
    "title": "Reconcile payment from Expense report and send to Xero",
    "description": "Automate the task to reconcile payment originating from Expense report and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-expense-report-accounting-db.json",
    "title": "Reconcile payment from Expense report and send to Accounting DB",
    "description": "Automate the task to reconcile payment originating from Expense report and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-expense-report-email.json",
    "title": "Update ledger from Expense report and send to Email",
    "description": "Automate the task to update ledger originating from Expense report and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-expense-report-slack.json",
    "title": "Update ledger from Expense report and send to Slack",
    "description": "Automate the task to update ledger originating from Expense report and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-expense-report-google-drive.json",
    "title": "Update ledger from Expense report and send to Google Drive",
    "description": "Automate the task to update ledger originating from Expense report and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-expense-report-quickbooks.json",
    "title": "Update ledger from Expense report and send to QuickBooks",
    "description": "Automate the task to update ledger originating from Expense report and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-expense-report-xero.json",
    "title": "Update ledger from Expense report and send to Xero",
    "description": "Automate the task to update ledger originating from Expense report and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-expense-report-accounting-db.json",
    "title": "Update ledger from Expense report and send to Accounting DB",
    "description": "Automate the task to update ledger originating from Expense report and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-expense-report-email.json",
    "title": "Approve expense from Expense report and send to Email",
    "description": "Automate the task to approve expense originating from Expense report and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-expense-report-slack.json",
    "title": "Approve expense from Expense report and send to Slack",
    "description": "Automate the task to approve expense originating from Expense report and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-expense-report-google-drive.json",
    "title": "Approve expense from Expense report and send to Google Drive",
    "description": "Automate the task to approve expense originating from Expense report and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-expense-report-quickbooks.json",
    "title": "Approve expense from Expense report and send to QuickBooks",
    "description": "Automate the task to approve expense originating from Expense report and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-expense-report-xero.json",
    "title": "Approve expense from Expense report and send to Xero",
    "description": "Automate the task to approve expense originating from Expense report and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-expense-report-accounting-db.json",
    "title": "Approve expense from Expense report and send to Accounting DB",
    "description": "Automate the task to approve expense originating from Expense report and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-expense-report-email.json",
    "title": "Alert overdue invoice from Expense report and send to Email",
    "description": "Automate the task to alert overdue invoice originating from Expense report and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-expense-report-slack.json",
    "title": "Alert overdue invoice from Expense report and send to Slack",
    "description": "Automate the task to alert overdue invoice originating from Expense report and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-expense-report-google-drive.json",
    "title": "Alert overdue invoice from Expense report and send to Google Drive",
    "description": "Automate the task to alert overdue invoice originating from Expense report and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-expense-report-quickbooks.json",
    "title": "Alert overdue invoice from Expense report and send to QuickBooks",
    "description": "Automate the task to alert overdue invoice originating from Expense report and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-expense-report-xero.json",
    "title": "Alert overdue invoice from Expense report and send to Xero",
    "description": "Automate the task to alert overdue invoice originating from Expense report and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-expense-report-accounting-db.json",
    "title": "Alert overdue invoice from Expense report and send to Accounting DB",
    "description": "Automate the task to alert overdue invoice originating from Expense report and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Expense report",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from Expense report",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-quickbooks-transaction-email.json",
    "title": "Generate invoice pdf from QuickBooks transaction and send to Email",
    "description": "Automate the task to generate invoice PDF originating from QuickBooks transaction and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-quickbooks-transaction-slack.json",
    "title": "Generate invoice pdf from QuickBooks transaction and send to Slack",
    "description": "Automate the task to generate invoice PDF originating from QuickBooks transaction and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-quickbooks-transaction-google-drive.json",
    "title": "Generate invoice pdf from QuickBooks transaction and send to Google Drive",
    "description": "Automate the task to generate invoice PDF originating from QuickBooks transaction and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-quickbooks-transaction-quickbooks.json",
    "title": "Generate invoice pdf from QuickBooks transaction and send to QuickBooks",
    "description": "Automate the task to generate invoice PDF originating from QuickBooks transaction and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-quickbooks-transaction-xero.json",
    "title": "Generate invoice pdf from QuickBooks transaction and send to Xero",
    "description": "Automate the task to generate invoice PDF originating from QuickBooks transaction and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-quickbooks-transaction-accounting-db.json",
    "title": "Generate invoice pdf from QuickBooks transaction and send to Accounting DB",
    "description": "Automate the task to generate invoice PDF originating from QuickBooks transaction and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-quickbooks-transaction-email.json",
    "title": "Send invoice from QuickBooks transaction and send to Email",
    "description": "Automate the task to send invoice originating from QuickBooks transaction and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-quickbooks-transaction-slack.json",
    "title": "Send invoice from QuickBooks transaction and send to Slack",
    "description": "Automate the task to send invoice originating from QuickBooks transaction and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-quickbooks-transaction-google-drive.json",
    "title": "Send invoice from QuickBooks transaction and send to Google Drive",
    "description": "Automate the task to send invoice originating from QuickBooks transaction and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-quickbooks-transaction-quickbooks.json",
    "title": "Send invoice from QuickBooks transaction and send to QuickBooks",
    "description": "Automate the task to send invoice originating from QuickBooks transaction and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-quickbooks-transaction-xero.json",
    "title": "Send invoice from QuickBooks transaction and send to Xero",
    "description": "Automate the task to send invoice originating from QuickBooks transaction and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-invoice-quickbooks-transaction-accounting-db.json",
    "title": "Send invoice from QuickBooks transaction and send to Accounting DB",
    "description": "Automate the task to send invoice originating from QuickBooks transaction and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-quickbooks-transaction-email.json",
    "title": "Reconcile payment from QuickBooks transaction and send to Email",
    "description": "Automate the task to reconcile payment originating from QuickBooks transaction and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-quickbooks-transaction-slack.json",
    "title": "Reconcile payment from QuickBooks transaction and send to Slack",
    "description": "Automate the task to reconcile payment originating from QuickBooks transaction and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-quickbooks-transaction-google-drive.json",
    "title": "Reconcile payment from QuickBooks transaction and send to Google Drive",
    "description": "Automate the task to reconcile payment originating from QuickBooks transaction and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-quickbooks-transaction-quickbooks.json",
    "title": "Reconcile payment from QuickBooks transaction and send to QuickBooks",
    "description": "Automate the task to reconcile payment originating from QuickBooks transaction and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-quickbooks-transaction-xero.json",
    "title": "Reconcile payment from QuickBooks transaction and send to Xero",
    "description": "Automate the task to reconcile payment originating from QuickBooks transaction and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "reconcile-payment-quickbooks-transaction-accounting-db.json",
    "title": "Reconcile payment from QuickBooks transaction and send to Accounting DB",
    "description": "Automate the task to reconcile payment originating from QuickBooks transaction and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-quickbooks-transaction-email.json",
    "title": "Update ledger from QuickBooks transaction and send to Email",
    "description": "Automate the task to update ledger originating from QuickBooks transaction and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-quickbooks-transaction-slack.json",
    "title": "Update ledger from QuickBooks transaction and send to Slack",
    "description": "Automate the task to update ledger originating from QuickBooks transaction and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-quickbooks-transaction-google-drive.json",
    "title": "Update ledger from QuickBooks transaction and send to Google Drive",
    "description": "Automate the task to update ledger originating from QuickBooks transaction and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-quickbooks-transaction-quickbooks.json",
    "title": "Update ledger from QuickBooks transaction and send to QuickBooks",
    "description": "Automate the task to update ledger originating from QuickBooks transaction and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-quickbooks-transaction-xero.json",
    "title": "Update ledger from QuickBooks transaction and send to Xero",
    "description": "Automate the task to update ledger originating from QuickBooks transaction and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-ledger-quickbooks-transaction-accounting-db.json",
    "title": "Update ledger from QuickBooks transaction and send to Accounting DB",
    "description": "Automate the task to update ledger originating from QuickBooks transaction and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-quickbooks-transaction-email.json",
    "title": "Approve expense from QuickBooks transaction and send to Email",
    "description": "Automate the task to approve expense originating from QuickBooks transaction and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-quickbooks-transaction-slack.json",
    "title": "Approve expense from QuickBooks transaction and send to Slack",
    "description": "Automate the task to approve expense originating from QuickBooks transaction and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-quickbooks-transaction-google-drive.json",
    "title": "Approve expense from QuickBooks transaction and send to Google Drive",
    "description": "Automate the task to approve expense originating from QuickBooks transaction and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-quickbooks-transaction-quickbooks.json",
    "title": "Approve expense from QuickBooks transaction and send to QuickBooks",
    "description": "Automate the task to approve expense originating from QuickBooks transaction and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-quickbooks-transaction-xero.json",
    "title": "Approve expense from QuickBooks transaction and send to Xero",
    "description": "Automate the task to approve expense originating from QuickBooks transaction and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "approve-expense-quickbooks-transaction-accounting-db.json",
    "title": "Approve expense from QuickBooks transaction and send to Accounting DB",
    "description": "Automate the task to approve expense originating from QuickBooks transaction and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-quickbooks-transaction-email.json",
    "title": "Alert overdue invoice from QuickBooks transaction and send to Email",
    "description": "Automate the task to alert overdue invoice originating from QuickBooks transaction and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-quickbooks-transaction-slack.json",
    "title": "Alert overdue invoice from QuickBooks transaction and send to Slack",
    "description": "Automate the task to alert overdue invoice originating from QuickBooks transaction and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-quickbooks-transaction-google-drive.json",
    "title": "Alert overdue invoice from QuickBooks transaction and send to Google Drive",
    "description": "Automate the task to alert overdue invoice originating from QuickBooks transaction and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-quickbooks-transaction-quickbooks.json",
    "title": "Alert overdue invoice from QuickBooks transaction and send to QuickBooks",
    "description": "Automate the task to alert overdue invoice originating from QuickBooks transaction and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-quickbooks-transaction-xero.json",
    "title": "Alert overdue invoice from QuickBooks transaction and send to Xero",
    "description": "Automate the task to alert overdue invoice originating from QuickBooks transaction and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "alert-overdue-invoice-quickbooks-transaction-accounting-db.json",
    "title": "Alert overdue invoice from QuickBooks transaction and send to Accounting DB",
    "description": "Automate the task to alert overdue invoice originating from QuickBooks transaction and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "QuickBooks transaction",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from QuickBooks transaction",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-xero-invoice-email.json",
    "title": "Generate invoice pdf from Xero invoice and send to Email",
    "description": "Automate the task to generate invoice PDF originating from Xero invoice and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Xero invoice",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Xero invoice",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-xero-invoice-slack.json",
    "title": "Generate invoice pdf from Xero invoice and send to Slack",
    "description": "Automate the task to generate invoice PDF originating from Xero invoice and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Xero invoice",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Xero invoice",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-xero-invoice-google-drive.json",
    "title": "Generate invoice pdf from Xero invoice and send to Google Drive",
    "description": "Automate the task to generate invoice PDF originating from Xero invoice and then send the result to Google Drive. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Xero invoice",
      "Google Drive",
      "Slack"
    ],
    "trigger": "Incoming event from Xero invoice",
    "output": "Data sent to Google Drive",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-xero-invoice-quickbooks.json",
    "title": "Generate invoice pdf from Xero invoice and send to QuickBooks",
    "description": "Automate the task to generate invoice PDF originating from Xero invoice and then send the result to QuickBooks. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Xero invoice",
      "QuickBooks",
      "Slack"
    ],
    "trigger": "Incoming event from Xero invoice",
    "output": "Data sent to QuickBooks",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-xero-invoice-xero.json",
    "title": "Generate invoice pdf from Xero invoice and send to Xero",
    "description": "Automate the task to generate invoice PDF originating from Xero invoice and then send the result to Xero. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Xero invoice",
      "Xero",
      "Slack"
    ],
    "trigger": "Incoming event from Xero invoice",
    "output": "Data sent to Xero",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-invoice-pdf-xero-invoice-accounting-db.json",
    "title": "Generate invoice pdf from Xero invoice and send to Accounting DB",
    "description": "Automate the task to generate invoice PDF originating from Xero invoice and then send the result to Accounting DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Finance & Accounting",
    "tools_used": [
      "Xero invoice",
      "Accounting DB",
      "Slack"
    ],
    "trigger": "Incoming event from Xero invoice",
    "output": "Data sent to Accounting DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-github-issue-slack.json",
    "title": "Create jira ticket from GitHub issue and send to Slack",
    "description": "Automate the task to create Jira ticket originating from GitHub issue and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-github-issue-jira.json",
    "title": "Create jira ticket from GitHub issue and send to Jira",
    "description": "Automate the task to create Jira ticket originating from GitHub issue and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-github-issue-email.json",
    "title": "Create jira ticket from GitHub issue and send to Email",
    "description": "Automate the task to create Jira ticket originating from GitHub issue and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-github-issue-notion.json",
    "title": "Create jira ticket from GitHub issue and send to Notion",
    "description": "Automate the task to create Jira ticket originating from GitHub issue and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-github-issue-pagerduty.json",
    "title": "Create jira ticket from GitHub issue and send to PagerDuty",
    "description": "Automate the task to create Jira ticket originating from GitHub issue and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-github-issue-opsgenie.json",
    "title": "Create jira ticket from GitHub issue and send to Opsgenie",
    "description": "Automate the task to create Jira ticket originating from GitHub issue and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-github-issue-slack.json",
    "title": "Notify on slack from GitHub issue and send to Slack",
    "description": "Automate the task to notify on Slack originating from GitHub issue and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-github-issue-jira.json",
    "title": "Notify on slack from GitHub issue and send to Jira",
    "description": "Automate the task to notify on Slack originating from GitHub issue and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-github-issue-email.json",
    "title": "Notify on slack from GitHub issue and send to Email",
    "description": "Automate the task to notify on Slack originating from GitHub issue and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-github-issue-notion.json",
    "title": "Notify on slack from GitHub issue and send to Notion",
    "description": "Automate the task to notify on Slack originating from GitHub issue and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-github-issue-pagerduty.json",
    "title": "Notify on slack from GitHub issue and send to PagerDuty",
    "description": "Automate the task to notify on Slack originating from GitHub issue and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-github-issue-opsgenie.json",
    "title": "Notify on slack from GitHub issue and send to Opsgenie",
    "description": "Automate the task to notify on Slack originating from GitHub issue and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-github-issue-slack.json",
    "title": "Restart service from GitHub issue and send to Slack",
    "description": "Automate the task to restart service originating from GitHub issue and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-github-issue-jira.json",
    "title": "Restart service from GitHub issue and send to Jira",
    "description": "Automate the task to restart service originating from GitHub issue and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-github-issue-email.json",
    "title": "Restart service from GitHub issue and send to Email",
    "description": "Automate the task to restart service originating from GitHub issue and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-github-issue-notion.json",
    "title": "Restart service from GitHub issue and send to Notion",
    "description": "Automate the task to restart service originating from GitHub issue and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-github-issue-pagerduty.json",
    "title": "Restart service from GitHub issue and send to PagerDuty",
    "description": "Automate the task to restart service originating from GitHub issue and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-github-issue-opsgenie.json",
    "title": "Restart service from GitHub issue and send to Opsgenie",
    "description": "Automate the task to restart service originating from GitHub issue and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-github-issue-slack.json",
    "title": "Log incident from GitHub issue and send to Slack",
    "description": "Automate the task to log incident originating from GitHub issue and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-github-issue-jira.json",
    "title": "Log incident from GitHub issue and send to Jira",
    "description": "Automate the task to log incident originating from GitHub issue and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-github-issue-email.json",
    "title": "Log incident from GitHub issue and send to Email",
    "description": "Automate the task to log incident originating from GitHub issue and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-github-issue-notion.json",
    "title": "Log incident from GitHub issue and send to Notion",
    "description": "Automate the task to log incident originating from GitHub issue and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-github-issue-pagerduty.json",
    "title": "Log incident from GitHub issue and send to PagerDuty",
    "description": "Automate the task to log incident originating from GitHub issue and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-github-issue-opsgenie.json",
    "title": "Log incident from GitHub issue and send to Opsgenie",
    "description": "Automate the task to log incident originating from GitHub issue and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-github-issue-slack.json",
    "title": "Create postmortem from GitHub issue and send to Slack",
    "description": "Automate the task to create postmortem originating from GitHub issue and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-github-issue-jira.json",
    "title": "Create postmortem from GitHub issue and send to Jira",
    "description": "Automate the task to create postmortem originating from GitHub issue and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-github-issue-email.json",
    "title": "Create postmortem from GitHub issue and send to Email",
    "description": "Automate the task to create postmortem originating from GitHub issue and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-github-issue-notion.json",
    "title": "Create postmortem from GitHub issue and send to Notion",
    "description": "Automate the task to create postmortem originating from GitHub issue and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-github-issue-pagerduty.json",
    "title": "Create postmortem from GitHub issue and send to PagerDuty",
    "description": "Automate the task to create postmortem originating from GitHub issue and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-github-issue-opsgenie.json",
    "title": "Create postmortem from GitHub issue and send to Opsgenie",
    "description": "Automate the task to create postmortem originating from GitHub issue and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-github-issue-slack.json",
    "title": "Run test suite from GitHub issue and send to Slack",
    "description": "Automate the task to run test suite originating from GitHub issue and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-github-issue-jira.json",
    "title": "Run test suite from GitHub issue and send to Jira",
    "description": "Automate the task to run test suite originating from GitHub issue and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-github-issue-email.json",
    "title": "Run test suite from GitHub issue and send to Email",
    "description": "Automate the task to run test suite originating from GitHub issue and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-github-issue-notion.json",
    "title": "Run test suite from GitHub issue and send to Notion",
    "description": "Automate the task to run test suite originating from GitHub issue and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-github-issue-pagerduty.json",
    "title": "Run test suite from GitHub issue and send to PagerDuty",
    "description": "Automate the task to run test suite originating from GitHub issue and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-github-issue-opsgenie.json",
    "title": "Run test suite from GitHub issue and send to Opsgenie",
    "description": "Automate the task to run test suite originating from GitHub issue and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "GitHub issue",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from GitHub issue",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-datadog-alert-slack.json",
    "title": "Create jira ticket from Datadog alert and send to Slack",
    "description": "Automate the task to create Jira ticket originating from Datadog alert and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-datadog-alert-jira.json",
    "title": "Create jira ticket from Datadog alert and send to Jira",
    "description": "Automate the task to create Jira ticket originating from Datadog alert and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-datadog-alert-email.json",
    "title": "Create jira ticket from Datadog alert and send to Email",
    "description": "Automate the task to create Jira ticket originating from Datadog alert and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-datadog-alert-notion.json",
    "title": "Create jira ticket from Datadog alert and send to Notion",
    "description": "Automate the task to create Jira ticket originating from Datadog alert and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-datadog-alert-pagerduty.json",
    "title": "Create jira ticket from Datadog alert and send to PagerDuty",
    "description": "Automate the task to create Jira ticket originating from Datadog alert and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-datadog-alert-opsgenie.json",
    "title": "Create jira ticket from Datadog alert and send to Opsgenie",
    "description": "Automate the task to create Jira ticket originating from Datadog alert and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-datadog-alert-slack.json",
    "title": "Notify on slack from Datadog alert and send to Slack",
    "description": "Automate the task to notify on Slack originating from Datadog alert and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-datadog-alert-jira.json",
    "title": "Notify on slack from Datadog alert and send to Jira",
    "description": "Automate the task to notify on Slack originating from Datadog alert and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-datadog-alert-email.json",
    "title": "Notify on slack from Datadog alert and send to Email",
    "description": "Automate the task to notify on Slack originating from Datadog alert and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-datadog-alert-notion.json",
    "title": "Notify on slack from Datadog alert and send to Notion",
    "description": "Automate the task to notify on Slack originating from Datadog alert and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-datadog-alert-pagerduty.json",
    "title": "Notify on slack from Datadog alert and send to PagerDuty",
    "description": "Automate the task to notify on Slack originating from Datadog alert and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-datadog-alert-opsgenie.json",
    "title": "Notify on slack from Datadog alert and send to Opsgenie",
    "description": "Automate the task to notify on Slack originating from Datadog alert and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-datadog-alert-slack.json",
    "title": "Restart service from Datadog alert and send to Slack",
    "description": "Automate the task to restart service originating from Datadog alert and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-datadog-alert-jira.json",
    "title": "Restart service from Datadog alert and send to Jira",
    "description": "Automate the task to restart service originating from Datadog alert and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-datadog-alert-email.json",
    "title": "Restart service from Datadog alert and send to Email",
    "description": "Automate the task to restart service originating from Datadog alert and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-datadog-alert-notion.json",
    "title": "Restart service from Datadog alert and send to Notion",
    "description": "Automate the task to restart service originating from Datadog alert and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-datadog-alert-pagerduty.json",
    "title": "Restart service from Datadog alert and send to PagerDuty",
    "description": "Automate the task to restart service originating from Datadog alert and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-datadog-alert-opsgenie.json",
    "title": "Restart service from Datadog alert and send to Opsgenie",
    "description": "Automate the task to restart service originating from Datadog alert and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-datadog-alert-slack.json",
    "title": "Log incident from Datadog alert and send to Slack",
    "description": "Automate the task to log incident originating from Datadog alert and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-datadog-alert-jira.json",
    "title": "Log incident from Datadog alert and send to Jira",
    "description": "Automate the task to log incident originating from Datadog alert and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-datadog-alert-email.json",
    "title": "Log incident from Datadog alert and send to Email",
    "description": "Automate the task to log incident originating from Datadog alert and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-datadog-alert-notion.json",
    "title": "Log incident from Datadog alert and send to Notion",
    "description": "Automate the task to log incident originating from Datadog alert and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-datadog-alert-pagerduty.json",
    "title": "Log incident from Datadog alert and send to PagerDuty",
    "description": "Automate the task to log incident originating from Datadog alert and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-datadog-alert-opsgenie.json",
    "title": "Log incident from Datadog alert and send to Opsgenie",
    "description": "Automate the task to log incident originating from Datadog alert and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-datadog-alert-slack.json",
    "title": "Create postmortem from Datadog alert and send to Slack",
    "description": "Automate the task to create postmortem originating from Datadog alert and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-datadog-alert-jira.json",
    "title": "Create postmortem from Datadog alert and send to Jira",
    "description": "Automate the task to create postmortem originating from Datadog alert and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-datadog-alert-email.json",
    "title": "Create postmortem from Datadog alert and send to Email",
    "description": "Automate the task to create postmortem originating from Datadog alert and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-datadog-alert-notion.json",
    "title": "Create postmortem from Datadog alert and send to Notion",
    "description": "Automate the task to create postmortem originating from Datadog alert and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-datadog-alert-pagerduty.json",
    "title": "Create postmortem from Datadog alert and send to PagerDuty",
    "description": "Automate the task to create postmortem originating from Datadog alert and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-datadog-alert-opsgenie.json",
    "title": "Create postmortem from Datadog alert and send to Opsgenie",
    "description": "Automate the task to create postmortem originating from Datadog alert and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-datadog-alert-slack.json",
    "title": "Run test suite from Datadog alert and send to Slack",
    "description": "Automate the task to run test suite originating from Datadog alert and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-datadog-alert-jira.json",
    "title": "Run test suite from Datadog alert and send to Jira",
    "description": "Automate the task to run test suite originating from Datadog alert and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-datadog-alert-email.json",
    "title": "Run test suite from Datadog alert and send to Email",
    "description": "Automate the task to run test suite originating from Datadog alert and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-datadog-alert-notion.json",
    "title": "Run test suite from Datadog alert and send to Notion",
    "description": "Automate the task to run test suite originating from Datadog alert and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-datadog-alert-pagerduty.json",
    "title": "Run test suite from Datadog alert and send to PagerDuty",
    "description": "Automate the task to run test suite originating from Datadog alert and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-datadog-alert-opsgenie.json",
    "title": "Run test suite from Datadog alert and send to Opsgenie",
    "description": "Automate the task to run test suite originating from Datadog alert and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Datadog alert",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from Datadog alert",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-pagerduty-incident-slack.json",
    "title": "Create jira ticket from PagerDuty incident and send to Slack",
    "description": "Automate the task to create Jira ticket originating from PagerDuty incident and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-pagerduty-incident-jira.json",
    "title": "Create jira ticket from PagerDuty incident and send to Jira",
    "description": "Automate the task to create Jira ticket originating from PagerDuty incident and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-pagerduty-incident-email.json",
    "title": "Create jira ticket from PagerDuty incident and send to Email",
    "description": "Automate the task to create Jira ticket originating from PagerDuty incident and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-pagerduty-incident-notion.json",
    "title": "Create jira ticket from PagerDuty incident and send to Notion",
    "description": "Automate the task to create Jira ticket originating from PagerDuty incident and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-pagerduty-incident-pagerduty.json",
    "title": "Create jira ticket from PagerDuty incident and send to PagerDuty",
    "description": "Automate the task to create Jira ticket originating from PagerDuty incident and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-pagerduty-incident-opsgenie.json",
    "title": "Create jira ticket from PagerDuty incident and send to Opsgenie",
    "description": "Automate the task to create Jira ticket originating from PagerDuty incident and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-pagerduty-incident-slack.json",
    "title": "Notify on slack from PagerDuty incident and send to Slack",
    "description": "Automate the task to notify on Slack originating from PagerDuty incident and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-pagerduty-incident-jira.json",
    "title": "Notify on slack from PagerDuty incident and send to Jira",
    "description": "Automate the task to notify on Slack originating from PagerDuty incident and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-pagerduty-incident-email.json",
    "title": "Notify on slack from PagerDuty incident and send to Email",
    "description": "Automate the task to notify on Slack originating from PagerDuty incident and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-pagerduty-incident-notion.json",
    "title": "Notify on slack from PagerDuty incident and send to Notion",
    "description": "Automate the task to notify on Slack originating from PagerDuty incident and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-pagerduty-incident-pagerduty.json",
    "title": "Notify on slack from PagerDuty incident and send to PagerDuty",
    "description": "Automate the task to notify on Slack originating from PagerDuty incident and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-pagerduty-incident-opsgenie.json",
    "title": "Notify on slack from PagerDuty incident and send to Opsgenie",
    "description": "Automate the task to notify on Slack originating from PagerDuty incident and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-pagerduty-incident-slack.json",
    "title": "Restart service from PagerDuty incident and send to Slack",
    "description": "Automate the task to restart service originating from PagerDuty incident and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-pagerduty-incident-jira.json",
    "title": "Restart service from PagerDuty incident and send to Jira",
    "description": "Automate the task to restart service originating from PagerDuty incident and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-pagerduty-incident-email.json",
    "title": "Restart service from PagerDuty incident and send to Email",
    "description": "Automate the task to restart service originating from PagerDuty incident and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-pagerduty-incident-notion.json",
    "title": "Restart service from PagerDuty incident and send to Notion",
    "description": "Automate the task to restart service originating from PagerDuty incident and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-pagerduty-incident-pagerduty.json",
    "title": "Restart service from PagerDuty incident and send to PagerDuty",
    "description": "Automate the task to restart service originating from PagerDuty incident and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-pagerduty-incident-opsgenie.json",
    "title": "Restart service from PagerDuty incident and send to Opsgenie",
    "description": "Automate the task to restart service originating from PagerDuty incident and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-pagerduty-incident-slack.json",
    "title": "Log incident from PagerDuty incident and send to Slack",
    "description": "Automate the task to log incident originating from PagerDuty incident and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-pagerduty-incident-jira.json",
    "title": "Log incident from PagerDuty incident and send to Jira",
    "description": "Automate the task to log incident originating from PagerDuty incident and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-pagerduty-incident-email.json",
    "title": "Log incident from PagerDuty incident and send to Email",
    "description": "Automate the task to log incident originating from PagerDuty incident and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-pagerduty-incident-notion.json",
    "title": "Log incident from PagerDuty incident and send to Notion",
    "description": "Automate the task to log incident originating from PagerDuty incident and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-pagerduty-incident-pagerduty.json",
    "title": "Log incident from PagerDuty incident and send to PagerDuty",
    "description": "Automate the task to log incident originating from PagerDuty incident and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-pagerduty-incident-opsgenie.json",
    "title": "Log incident from PagerDuty incident and send to Opsgenie",
    "description": "Automate the task to log incident originating from PagerDuty incident and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-pagerduty-incident-slack.json",
    "title": "Create postmortem from PagerDuty incident and send to Slack",
    "description": "Automate the task to create postmortem originating from PagerDuty incident and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-pagerduty-incident-jira.json",
    "title": "Create postmortem from PagerDuty incident and send to Jira",
    "description": "Automate the task to create postmortem originating from PagerDuty incident and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-pagerduty-incident-email.json",
    "title": "Create postmortem from PagerDuty incident and send to Email",
    "description": "Automate the task to create postmortem originating from PagerDuty incident and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-pagerduty-incident-notion.json",
    "title": "Create postmortem from PagerDuty incident and send to Notion",
    "description": "Automate the task to create postmortem originating from PagerDuty incident and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-pagerduty-incident-pagerduty.json",
    "title": "Create postmortem from PagerDuty incident and send to PagerDuty",
    "description": "Automate the task to create postmortem originating from PagerDuty incident and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-pagerduty-incident-opsgenie.json",
    "title": "Create postmortem from PagerDuty incident and send to Opsgenie",
    "description": "Automate the task to create postmortem originating from PagerDuty incident and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-pagerduty-incident-slack.json",
    "title": "Run test suite from PagerDuty incident and send to Slack",
    "description": "Automate the task to run test suite originating from PagerDuty incident and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-pagerduty-incident-jira.json",
    "title": "Run test suite from PagerDuty incident and send to Jira",
    "description": "Automate the task to run test suite originating from PagerDuty incident and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-pagerduty-incident-email.json",
    "title": "Run test suite from PagerDuty incident and send to Email",
    "description": "Automate the task to run test suite originating from PagerDuty incident and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-pagerduty-incident-notion.json",
    "title": "Run test suite from PagerDuty incident and send to Notion",
    "description": "Automate the task to run test suite originating from PagerDuty incident and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-pagerduty-incident-pagerduty.json",
    "title": "Run test suite from PagerDuty incident and send to PagerDuty",
    "description": "Automate the task to run test suite originating from PagerDuty incident and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-pagerduty-incident-opsgenie.json",
    "title": "Run test suite from PagerDuty incident and send to Opsgenie",
    "description": "Automate the task to run test suite originating from PagerDuty incident and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "PagerDuty incident",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from PagerDuty incident",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-jenkins-build-slack.json",
    "title": "Create jira ticket from Jenkins build and send to Slack",
    "description": "Automate the task to create Jira ticket originating from Jenkins build and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-jenkins-build-jira.json",
    "title": "Create jira ticket from Jenkins build and send to Jira",
    "description": "Automate the task to create Jira ticket originating from Jenkins build and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-jenkins-build-email.json",
    "title": "Create jira ticket from Jenkins build and send to Email",
    "description": "Automate the task to create Jira ticket originating from Jenkins build and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-jenkins-build-notion.json",
    "title": "Create jira ticket from Jenkins build and send to Notion",
    "description": "Automate the task to create Jira ticket originating from Jenkins build and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-jenkins-build-pagerduty.json",
    "title": "Create jira ticket from Jenkins build and send to PagerDuty",
    "description": "Automate the task to create Jira ticket originating from Jenkins build and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-jenkins-build-opsgenie.json",
    "title": "Create jira ticket from Jenkins build and send to Opsgenie",
    "description": "Automate the task to create Jira ticket originating from Jenkins build and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-jenkins-build-slack.json",
    "title": "Notify on slack from Jenkins build and send to Slack",
    "description": "Automate the task to notify on Slack originating from Jenkins build and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-jenkins-build-jira.json",
    "title": "Notify on slack from Jenkins build and send to Jira",
    "description": "Automate the task to notify on Slack originating from Jenkins build and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-jenkins-build-email.json",
    "title": "Notify on slack from Jenkins build and send to Email",
    "description": "Automate the task to notify on Slack originating from Jenkins build and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-jenkins-build-notion.json",
    "title": "Notify on slack from Jenkins build and send to Notion",
    "description": "Automate the task to notify on Slack originating from Jenkins build and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-jenkins-build-pagerduty.json",
    "title": "Notify on slack from Jenkins build and send to PagerDuty",
    "description": "Automate the task to notify on Slack originating from Jenkins build and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-on-slack-jenkins-build-opsgenie.json",
    "title": "Notify on slack from Jenkins build and send to Opsgenie",
    "description": "Automate the task to notify on Slack originating from Jenkins build and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-jenkins-build-slack.json",
    "title": "Restart service from Jenkins build and send to Slack",
    "description": "Automate the task to restart service originating from Jenkins build and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-jenkins-build-jira.json",
    "title": "Restart service from Jenkins build and send to Jira",
    "description": "Automate the task to restart service originating from Jenkins build and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-jenkins-build-email.json",
    "title": "Restart service from Jenkins build and send to Email",
    "description": "Automate the task to restart service originating from Jenkins build and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-jenkins-build-notion.json",
    "title": "Restart service from Jenkins build and send to Notion",
    "description": "Automate the task to restart service originating from Jenkins build and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-jenkins-build-pagerduty.json",
    "title": "Restart service from Jenkins build and send to PagerDuty",
    "description": "Automate the task to restart service originating from Jenkins build and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "restart-service-jenkins-build-opsgenie.json",
    "title": "Restart service from Jenkins build and send to Opsgenie",
    "description": "Automate the task to restart service originating from Jenkins build and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-jenkins-build-slack.json",
    "title": "Log incident from Jenkins build and send to Slack",
    "description": "Automate the task to log incident originating from Jenkins build and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-jenkins-build-jira.json",
    "title": "Log incident from Jenkins build and send to Jira",
    "description": "Automate the task to log incident originating from Jenkins build and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-jenkins-build-email.json",
    "title": "Log incident from Jenkins build and send to Email",
    "description": "Automate the task to log incident originating from Jenkins build and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-jenkins-build-notion.json",
    "title": "Log incident from Jenkins build and send to Notion",
    "description": "Automate the task to log incident originating from Jenkins build and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-jenkins-build-pagerduty.json",
    "title": "Log incident from Jenkins build and send to PagerDuty",
    "description": "Automate the task to log incident originating from Jenkins build and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "log-incident-jenkins-build-opsgenie.json",
    "title": "Log incident from Jenkins build and send to Opsgenie",
    "description": "Automate the task to log incident originating from Jenkins build and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-jenkins-build-slack.json",
    "title": "Create postmortem from Jenkins build and send to Slack",
    "description": "Automate the task to create postmortem originating from Jenkins build and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-jenkins-build-jira.json",
    "title": "Create postmortem from Jenkins build and send to Jira",
    "description": "Automate the task to create postmortem originating from Jenkins build and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-jenkins-build-email.json",
    "title": "Create postmortem from Jenkins build and send to Email",
    "description": "Automate the task to create postmortem originating from Jenkins build and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-jenkins-build-notion.json",
    "title": "Create postmortem from Jenkins build and send to Notion",
    "description": "Automate the task to create postmortem originating from Jenkins build and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-jenkins-build-pagerduty.json",
    "title": "Create postmortem from Jenkins build and send to PagerDuty",
    "description": "Automate the task to create postmortem originating from Jenkins build and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-postmortem-jenkins-build-opsgenie.json",
    "title": "Create postmortem from Jenkins build and send to Opsgenie",
    "description": "Automate the task to create postmortem originating from Jenkins build and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-jenkins-build-slack.json",
    "title": "Run test suite from Jenkins build and send to Slack",
    "description": "Automate the task to run test suite originating from Jenkins build and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-jenkins-build-jira.json",
    "title": "Run test suite from Jenkins build and send to Jira",
    "description": "Automate the task to run test suite originating from Jenkins build and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-jenkins-build-email.json",
    "title": "Run test suite from Jenkins build and send to Email",
    "description": "Automate the task to run test suite originating from Jenkins build and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-jenkins-build-notion.json",
    "title": "Run test suite from Jenkins build and send to Notion",
    "description": "Automate the task to run test suite originating from Jenkins build and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-jenkins-build-pagerduty.json",
    "title": "Run test suite from Jenkins build and send to PagerDuty",
    "description": "Automate the task to run test suite originating from Jenkins build and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "run-test-suite-jenkins-build-opsgenie.json",
    "title": "Run test suite from Jenkins build and send to Opsgenie",
    "description": "Automate the task to run test suite originating from Jenkins build and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Jenkins build",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from Jenkins build",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-deployment-event-slack.json",
    "title": "Create jira ticket from Deployment event and send to Slack",
    "description": "Automate the task to create Jira ticket originating from Deployment event and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Deployment event",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Deployment event",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-deployment-event-jira.json",
    "title": "Create jira ticket from Deployment event and send to Jira",
    "description": "Automate the task to create Jira ticket originating from Deployment event and then send the result to Jira. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Deployment event",
      "Jira",
      "Slack"
    ],
    "trigger": "Incoming event from Deployment event",
    "output": "Data sent to Jira",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-deployment-event-email.json",
    "title": "Create jira ticket from Deployment event and send to Email",
    "description": "Automate the task to create Jira ticket originating from Deployment event and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Deployment event",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Deployment event",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-deployment-event-notion.json",
    "title": "Create jira ticket from Deployment event and send to Notion",
    "description": "Automate the task to create Jira ticket originating from Deployment event and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Deployment event",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Deployment event",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-deployment-event-pagerduty.json",
    "title": "Create jira ticket from Deployment event and send to PagerDuty",
    "description": "Automate the task to create Jira ticket originating from Deployment event and then send the result to PagerDuty. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Deployment event",
      "PagerDuty",
      "Slack"
    ],
    "trigger": "Incoming event from Deployment event",
    "output": "Data sent to PagerDuty",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-jira-ticket-deployment-event-opsgenie.json",
    "title": "Create jira ticket from Deployment event and send to Opsgenie",
    "description": "Automate the task to create Jira ticket originating from Deployment event and then send the result to Opsgenie. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "IT & DevOps Monitoring",
    "tools_used": [
      "Deployment event",
      "Opsgenie",
      "Slack"
    ],
    "trigger": "Incoming event from Deployment event",
    "output": "Data sent to Opsgenie",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-team-member-asana-task-slack.json",
    "title": "Assign to team member from Asana task and send to Slack",
    "description": "Automate the task to assign to team member originating from Asana task and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-team-member-asana-task-email.json",
    "title": "Assign to team member from Asana task and send to Email",
    "description": "Automate the task to assign to team member originating from Asana task and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-team-member-asana-task-github.json",
    "title": "Assign to team member from Asana task and send to GitHub",
    "description": "Automate the task to assign to team member originating from Asana task and then send the result to GitHub. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "GitHub",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to GitHub",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-team-member-asana-task-google-sheets.json",
    "title": "Assign to team member from Asana task and send to Google Sheets",
    "description": "Automate the task to assign to team member originating from Asana task and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-team-member-asana-task-notion.json",
    "title": "Assign to team member from Asana task and send to Notion",
    "description": "Automate the task to assign to team member originating from Asana task and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-summary-asana-task-slack.json",
    "title": "Generate summary from Asana task and send to Slack",
    "description": "Automate the task to generate summary originating from Asana task and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-summary-asana-task-email.json",
    "title": "Generate summary from Asana task and send to Email",
    "description": "Automate the task to generate summary originating from Asana task and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-summary-asana-task-github.json",
    "title": "Generate summary from Asana task and send to GitHub",
    "description": "Automate the task to generate summary originating from Asana task and then send the result to GitHub. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "GitHub",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to GitHub",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-summary-asana-task-google-sheets.json",
    "title": "Generate summary from Asana task and send to Google Sheets",
    "description": "Automate the task to generate summary originating from Asana task and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-summary-asana-task-notion.json",
    "title": "Generate summary from Asana task and send to Notion",
    "description": "Automate the task to generate summary originating from Asana task and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "update-status-asana-task-slack.json",
    "title": "Update status from Asana task and send to Slack",
    "description": "Automate the task to update status originating from Asana task and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-status-asana-task-email.json",
    "title": "Update status from Asana task and send to Email",
    "description": "Automate the task to update status originating from Asana task and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-status-asana-task-github.json",
    "title": "Update status from Asana task and send to GitHub",
    "description": "Automate the task to update status originating from Asana task and then send the result to GitHub. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "GitHub",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to GitHub",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-status-asana-task-google-sheets.json",
    "title": "Update status from Asana task and send to Google Sheets",
    "description": "Automate the task to update status originating from Asana task and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-status-asana-task-notion.json",
    "title": "Update status from Asana task and send to Notion",
    "description": "Automate the task to update status originating from Asana task and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-asana-task-slack.json",
    "title": "Notify team from Asana task and send to Slack",
    "description": "Automate the task to notify team originating from Asana task and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-asana-task-email.json",
    "title": "Notify team from Asana task and send to Email",
    "description": "Automate the task to notify team originating from Asana task and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-asana-task-github.json",
    "title": "Notify team from Asana task and send to GitHub",
    "description": "Automate the task to notify team originating from Asana task and then send the result to GitHub. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "GitHub",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to GitHub",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-asana-task-google-sheets.json",
    "title": "Notify team from Asana task and send to Google Sheets",
    "description": "Automate the task to notify team originating from Asana task and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-asana-task-notion.json",
    "title": "Notify team from Asana task and send to Notion",
    "description": "Automate the task to notify team originating from Asana task and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-with-github-asana-task-slack.json",
    "title": "Sync with github from Asana task and send to Slack",
    "description": "Automate the task to sync with GitHub originating from Asana task and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-with-github-asana-task-email.json",
    "title": "Sync with github from Asana task and send to Email",
    "description": "Automate the task to sync with GitHub originating from Asana task and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-with-github-asana-task-github.json",
    "title": "Sync with github from Asana task and send to GitHub",
    "description": "Automate the task to sync with GitHub originating from Asana task and then send the result to GitHub. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "GitHub",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to GitHub",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-with-github-asana-task-google-sheets.json",
    "title": "Sync with github from Asana task and send to Google Sheets",
    "description": "Automate the task to sync with GitHub originating from Asana task and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-with-github-asana-task-notion.json",
    "title": "Sync with github from Asana task and send to Notion",
    "description": "Automate the task to sync with GitHub originating from Asana task and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Asana task",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Asana task",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-team-member-trello-card-slack.json",
    "title": "Assign to team member from Trello card and send to Slack",
    "description": "Automate the task to assign to team member originating from Trello card and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-team-member-trello-card-email.json",
    "title": "Assign to team member from Trello card and send to Email",
    "description": "Automate the task to assign to team member originating from Trello card and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-team-member-trello-card-github.json",
    "title": "Assign to team member from Trello card and send to GitHub",
    "description": "Automate the task to assign to team member originating from Trello card and then send the result to GitHub. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "GitHub",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to GitHub",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-team-member-trello-card-google-sheets.json",
    "title": "Assign to team member from Trello card and send to Google Sheets",
    "description": "Automate the task to assign to team member originating from Trello card and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-team-member-trello-card-notion.json",
    "title": "Assign to team member from Trello card and send to Notion",
    "description": "Automate the task to assign to team member originating from Trello card and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-summary-trello-card-slack.json",
    "title": "Generate summary from Trello card and send to Slack",
    "description": "Automate the task to generate summary originating from Trello card and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-summary-trello-card-email.json",
    "title": "Generate summary from Trello card and send to Email",
    "description": "Automate the task to generate summary originating from Trello card and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-summary-trello-card-github.json",
    "title": "Generate summary from Trello card and send to GitHub",
    "description": "Automate the task to generate summary originating from Trello card and then send the result to GitHub. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "GitHub",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to GitHub",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-summary-trello-card-google-sheets.json",
    "title": "Generate summary from Trello card and send to Google Sheets",
    "description": "Automate the task to generate summary originating from Trello card and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-summary-trello-card-notion.json",
    "title": "Generate summary from Trello card and send to Notion",
    "description": "Automate the task to generate summary originating from Trello card and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "update-status-trello-card-slack.json",
    "title": "Update status from Trello card and send to Slack",
    "description": "Automate the task to update status originating from Trello card and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-status-trello-card-email.json",
    "title": "Update status from Trello card and send to Email",
    "description": "Automate the task to update status originating from Trello card and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-status-trello-card-github.json",
    "title": "Update status from Trello card and send to GitHub",
    "description": "Automate the task to update status originating from Trello card and then send the result to GitHub. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "GitHub",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to GitHub",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-status-trello-card-google-sheets.json",
    "title": "Update status from Trello card and send to Google Sheets",
    "description": "Automate the task to update status originating from Trello card and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-status-trello-card-notion.json",
    "title": "Update status from Trello card and send to Notion",
    "description": "Automate the task to update status originating from Trello card and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-trello-card-slack.json",
    "title": "Notify team from Trello card and send to Slack",
    "description": "Automate the task to notify team originating from Trello card and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-trello-card-email.json",
    "title": "Notify team from Trello card and send to Email",
    "description": "Automate the task to notify team originating from Trello card and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-trello-card-github.json",
    "title": "Notify team from Trello card and send to GitHub",
    "description": "Automate the task to notify team originating from Trello card and then send the result to GitHub. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "GitHub",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to GitHub",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-trello-card-google-sheets.json",
    "title": "Notify team from Trello card and send to Google Sheets",
    "description": "Automate the task to notify team originating from Trello card and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-trello-card-notion.json",
    "title": "Notify team from Trello card and send to Notion",
    "description": "Automate the task to notify team originating from Trello card and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-with-github-trello-card-slack.json",
    "title": "Sync with github from Trello card and send to Slack",
    "description": "Automate the task to sync with GitHub originating from Trello card and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-with-github-trello-card-email.json",
    "title": "Sync with github from Trello card and send to Email",
    "description": "Automate the task to sync with GitHub originating from Trello card and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-with-github-trello-card-github.json",
    "title": "Sync with github from Trello card and send to GitHub",
    "description": "Automate the task to sync with GitHub originating from Trello card and then send the result to GitHub. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "GitHub",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to GitHub",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-with-github-trello-card-google-sheets.json",
    "title": "Sync with github from Trello card and send to Google Sheets",
    "description": "Automate the task to sync with GitHub originating from Trello card and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-with-github-trello-card-notion.json",
    "title": "Sync with github from Trello card and send to Notion",
    "description": "Automate the task to sync with GitHub originating from Trello card and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Trello card",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Trello card",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-team-member-notion-item-slack.json",
    "title": "Assign to team member from Notion item and send to Slack",
    "description": "Automate the task to assign to team member originating from Notion item and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-team-member-notion-item-email.json",
    "title": "Assign to team member from Notion item and send to Email",
    "description": "Automate the task to assign to team member originating from Notion item and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-team-member-notion-item-github.json",
    "title": "Assign to team member from Notion item and send to GitHub",
    "description": "Automate the task to assign to team member originating from Notion item and then send the result to GitHub. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "GitHub",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to GitHub",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-team-member-notion-item-google-sheets.json",
    "title": "Assign to team member from Notion item and send to Google Sheets",
    "description": "Automate the task to assign to team member originating from Notion item and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-team-member-notion-item-notion.json",
    "title": "Assign to team member from Notion item and send to Notion",
    "description": "Automate the task to assign to team member originating from Notion item and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-summary-notion-item-slack.json",
    "title": "Generate summary from Notion item and send to Slack",
    "description": "Automate the task to generate summary originating from Notion item and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-summary-notion-item-email.json",
    "title": "Generate summary from Notion item and send to Email",
    "description": "Automate the task to generate summary originating from Notion item and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-summary-notion-item-github.json",
    "title": "Generate summary from Notion item and send to GitHub",
    "description": "Automate the task to generate summary originating from Notion item and then send the result to GitHub. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "GitHub",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to GitHub",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-summary-notion-item-google-sheets.json",
    "title": "Generate summary from Notion item and send to Google Sheets",
    "description": "Automate the task to generate summary originating from Notion item and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-summary-notion-item-notion.json",
    "title": "Generate summary from Notion item and send to Notion",
    "description": "Automate the task to generate summary originating from Notion item and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "update-status-notion-item-slack.json",
    "title": "Update status from Notion item and send to Slack",
    "description": "Automate the task to update status originating from Notion item and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-status-notion-item-email.json",
    "title": "Update status from Notion item and send to Email",
    "description": "Automate the task to update status originating from Notion item and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-status-notion-item-github.json",
    "title": "Update status from Notion item and send to GitHub",
    "description": "Automate the task to update status originating from Notion item and then send the result to GitHub. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "GitHub",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to GitHub",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-status-notion-item-google-sheets.json",
    "title": "Update status from Notion item and send to Google Sheets",
    "description": "Automate the task to update status originating from Notion item and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-status-notion-item-notion.json",
    "title": "Update status from Notion item and send to Notion",
    "description": "Automate the task to update status originating from Notion item and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-notion-item-slack.json",
    "title": "Notify team from Notion item and send to Slack",
    "description": "Automate the task to notify team originating from Notion item and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-notion-item-email.json",
    "title": "Notify team from Notion item and send to Email",
    "description": "Automate the task to notify team originating from Notion item and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-notion-item-github.json",
    "title": "Notify team from Notion item and send to GitHub",
    "description": "Automate the task to notify team originating from Notion item and then send the result to GitHub. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "GitHub",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to GitHub",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-notion-item-google-sheets.json",
    "title": "Notify team from Notion item and send to Google Sheets",
    "description": "Automate the task to notify team originating from Notion item and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-notion-item-notion.json",
    "title": "Notify team from Notion item and send to Notion",
    "description": "Automate the task to notify team originating from Notion item and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-with-github-notion-item-slack.json",
    "title": "Sync with github from Notion item and send to Slack",
    "description": "Automate the task to sync with GitHub originating from Notion item and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-with-github-notion-item-email.json",
    "title": "Sync with github from Notion item and send to Email",
    "description": "Automate the task to sync with GitHub originating from Notion item and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-with-github-notion-item-github.json",
    "title": "Sync with github from Notion item and send to GitHub",
    "description": "Automate the task to sync with GitHub originating from Notion item and then send the result to GitHub. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "GitHub",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to GitHub",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-with-github-notion-item-google-sheets.json",
    "title": "Sync with github from Notion item and send to Google Sheets",
    "description": "Automate the task to sync with GitHub originating from Notion item and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-with-github-notion-item-notion.json",
    "title": "Sync with github from Notion item and send to Notion",
    "description": "Automate the task to sync with GitHub originating from Notion item and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Notion item",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Notion item",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-team-member-monday-com-ticket-slack.json",
    "title": "Assign to team member from Monday.com ticket and send to Slack",
    "description": "Automate the task to assign to team member originating from Monday.com ticket and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-team-member-monday-com-ticket-email.json",
    "title": "Assign to team member from Monday.com ticket and send to Email",
    "description": "Automate the task to assign to team member originating from Monday.com ticket and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-team-member-monday-com-ticket-github.json",
    "title": "Assign to team member from Monday.com ticket and send to GitHub",
    "description": "Automate the task to assign to team member originating from Monday.com ticket and then send the result to GitHub. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "GitHub",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to GitHub",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-team-member-monday-com-ticket-google-sheets.json",
    "title": "Assign to team member from Monday.com ticket and send to Google Sheets",
    "description": "Automate the task to assign to team member originating from Monday.com ticket and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "assign-to-team-member-monday-com-ticket-notion.json",
    "title": "Assign to team member from Monday.com ticket and send to Notion",
    "description": "Automate the task to assign to team member originating from Monday.com ticket and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-summary-monday-com-ticket-slack.json",
    "title": "Generate summary from Monday.com ticket and send to Slack",
    "description": "Automate the task to generate summary originating from Monday.com ticket and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-summary-monday-com-ticket-email.json",
    "title": "Generate summary from Monday.com ticket and send to Email",
    "description": "Automate the task to generate summary originating from Monday.com ticket and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-summary-monday-com-ticket-github.json",
    "title": "Generate summary from Monday.com ticket and send to GitHub",
    "description": "Automate the task to generate summary originating from Monday.com ticket and then send the result to GitHub. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "GitHub",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to GitHub",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-summary-monday-com-ticket-google-sheets.json",
    "title": "Generate summary from Monday.com ticket and send to Google Sheets",
    "description": "Automate the task to generate summary originating from Monday.com ticket and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-summary-monday-com-ticket-notion.json",
    "title": "Generate summary from Monday.com ticket and send to Notion",
    "description": "Automate the task to generate summary originating from Monday.com ticket and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "update-status-monday-com-ticket-slack.json",
    "title": "Update status from Monday.com ticket and send to Slack",
    "description": "Automate the task to update status originating from Monday.com ticket and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-status-monday-com-ticket-email.json",
    "title": "Update status from Monday.com ticket and send to Email",
    "description": "Automate the task to update status originating from Monday.com ticket and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-status-monday-com-ticket-github.json",
    "title": "Update status from Monday.com ticket and send to GitHub",
    "description": "Automate the task to update status originating from Monday.com ticket and then send the result to GitHub. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "GitHub",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to GitHub",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-status-monday-com-ticket-google-sheets.json",
    "title": "Update status from Monday.com ticket and send to Google Sheets",
    "description": "Automate the task to update status originating from Monday.com ticket and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-status-monday-com-ticket-notion.json",
    "title": "Update status from Monday.com ticket and send to Notion",
    "description": "Automate the task to update status originating from Monday.com ticket and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-monday-com-ticket-slack.json",
    "title": "Notify team from Monday.com ticket and send to Slack",
    "description": "Automate the task to notify team originating from Monday.com ticket and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-monday-com-ticket-email.json",
    "title": "Notify team from Monday.com ticket and send to Email",
    "description": "Automate the task to notify team originating from Monday.com ticket and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-monday-com-ticket-github.json",
    "title": "Notify team from Monday.com ticket and send to GitHub",
    "description": "Automate the task to notify team originating from Monday.com ticket and then send the result to GitHub. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "GitHub",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to GitHub",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-monday-com-ticket-google-sheets.json",
    "title": "Notify team from Monday.com ticket and send to Google Sheets",
    "description": "Automate the task to notify team originating from Monday.com ticket and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-monday-com-ticket-notion.json",
    "title": "Notify team from Monday.com ticket and send to Notion",
    "description": "Automate the task to notify team originating from Monday.com ticket and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-with-github-monday-com-ticket-slack.json",
    "title": "Sync with github from Monday.com ticket and send to Slack",
    "description": "Automate the task to sync with GitHub originating from Monday.com ticket and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-with-github-monday-com-ticket-email.json",
    "title": "Sync with github from Monday.com ticket and send to Email",
    "description": "Automate the task to sync with GitHub originating from Monday.com ticket and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-with-github-monday-com-ticket-github.json",
    "title": "Sync with github from Monday.com ticket and send to GitHub",
    "description": "Automate the task to sync with GitHub originating from Monday.com ticket and then send the result to GitHub. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "GitHub",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to GitHub",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-with-github-monday-com-ticket-google-sheets.json",
    "title": "Sync with github from Monday.com ticket and send to Google Sheets",
    "description": "Automate the task to sync with GitHub originating from Monday.com ticket and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-with-github-monday-com-ticket-notion.json",
    "title": "Sync with github from Monday.com ticket and send to Notion",
    "description": "Automate the task to sync with GitHub originating from Monday.com ticket and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Project & Task Management",
    "tools_used": [
      "Monday.com ticket",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Monday.com ticket",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "extract-terms-with-ai-contract-document-slack.json",
    "title": "Extract terms with ai from Contract document and send to Slack",
    "description": "Automate the task to extract terms with AI originating from Contract document and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-terms-with-ai-contract-document-email.json",
    "title": "Extract terms with ai from Contract document and send to Email",
    "description": "Automate the task to extract terms with AI originating from Contract document and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-terms-with-ai-contract-document-sharepoint.json",
    "title": "Extract terms with ai from Contract document and send to SharePoint",
    "description": "Automate the task to extract terms with AI originating from Contract document and then send the result to SharePoint. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "SharePoint",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to SharePoint",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-terms-with-ai-contract-document-docusign.json",
    "title": "Extract terms with ai from Contract document and send to DocuSign",
    "description": "Automate the task to extract terms with AI originating from Contract document and then send the result to DocuSign. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "DocuSign",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to DocuSign",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-terms-with-ai-contract-document-sap.json",
    "title": "Extract terms with ai from Contract document and send to SAP",
    "description": "Automate the task to extract terms with AI originating from Contract document and then send the result to SAP. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "SAP",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to SAP",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-terms-with-ai-contract-document-compliance-db.json",
    "title": "Extract terms with ai from Contract document and send to Compliance DB",
    "description": "Automate the task to extract terms with AI originating from Contract document and then send the result to Compliance DB. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "Compliance DB",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to Compliance DB",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "update-contract-registry-contract-document-slack.json",
    "title": "Update contract registry from Contract document and send to Slack",
    "description": "Automate the task to update contract registry originating from Contract document and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-contract-registry-contract-document-email.json",
    "title": "Update contract registry from Contract document and send to Email",
    "description": "Automate the task to update contract registry originating from Contract document and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-contract-registry-contract-document-sharepoint.json",
    "title": "Update contract registry from Contract document and send to SharePoint",
    "description": "Automate the task to update contract registry originating from Contract document and then send the result to SharePoint. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "SharePoint",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to SharePoint",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-contract-registry-contract-document-docusign.json",
    "title": "Update contract registry from Contract document and send to DocuSign",
    "description": "Automate the task to update contract registry originating from Contract document and then send the result to DocuSign. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "DocuSign",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to DocuSign",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-contract-registry-contract-document-sap.json",
    "title": "Update contract registry from Contract document and send to SAP",
    "description": "Automate the task to update contract registry originating from Contract document and then send the result to SAP. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "SAP",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to SAP",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-contract-registry-contract-document-compliance-db.json",
    "title": "Update contract registry from Contract document and send to Compliance DB",
    "description": "Automate the task to update contract registry originating from Contract document and then send the result to Compliance DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "Compliance DB",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to Compliance DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "initiate-approval-contract-document-slack.json",
    "title": "Initiate approval from Contract document and send to Slack",
    "description": "Automate the task to initiate approval originating from Contract document and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "initiate-approval-contract-document-email.json",
    "title": "Initiate approval from Contract document and send to Email",
    "description": "Automate the task to initiate approval originating from Contract document and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "initiate-approval-contract-document-sharepoint.json",
    "title": "Initiate approval from Contract document and send to SharePoint",
    "description": "Automate the task to initiate approval originating from Contract document and then send the result to SharePoint. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "SharePoint",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to SharePoint",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "initiate-approval-contract-document-docusign.json",
    "title": "Initiate approval from Contract document and send to DocuSign",
    "description": "Automate the task to initiate approval originating from Contract document and then send the result to DocuSign. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "DocuSign",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to DocuSign",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "initiate-approval-contract-document-sap.json",
    "title": "Initiate approval from Contract document and send to SAP",
    "description": "Automate the task to initiate approval originating from Contract document and then send the result to SAP. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "SAP",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to SAP",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "initiate-approval-contract-document-compliance-db.json",
    "title": "Initiate approval from Contract document and send to Compliance DB",
    "description": "Automate the task to initiate approval originating from Contract document and then send the result to Compliance DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "Compliance DB",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to Compliance DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-legal-team-contract-document-slack.json",
    "title": "Notify legal team from Contract document and send to Slack",
    "description": "Automate the task to notify legal team originating from Contract document and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-legal-team-contract-document-email.json",
    "title": "Notify legal team from Contract document and send to Email",
    "description": "Automate the task to notify legal team originating from Contract document and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-legal-team-contract-document-sharepoint.json",
    "title": "Notify legal team from Contract document and send to SharePoint",
    "description": "Automate the task to notify legal team originating from Contract document and then send the result to SharePoint. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "SharePoint",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to SharePoint",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-legal-team-contract-document-docusign.json",
    "title": "Notify legal team from Contract document and send to DocuSign",
    "description": "Automate the task to notify legal team originating from Contract document and then send the result to DocuSign. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "DocuSign",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to DocuSign",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-legal-team-contract-document-sap.json",
    "title": "Notify legal team from Contract document and send to SAP",
    "description": "Automate the task to notify legal team originating from Contract document and then send the result to SAP. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "SAP",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to SAP",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-legal-team-contract-document-compliance-db.json",
    "title": "Notify legal team from Contract document and send to Compliance DB",
    "description": "Automate the task to notify legal team originating from Contract document and then send the result to Compliance DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "Compliance DB",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to Compliance DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "store-document-contract-document-slack.json",
    "title": "Store document from Contract document and send to Slack",
    "description": "Automate the task to store document originating from Contract document and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "store-document-contract-document-email.json",
    "title": "Store document from Contract document and send to Email",
    "description": "Automate the task to store document originating from Contract document and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "store-document-contract-document-sharepoint.json",
    "title": "Store document from Contract document and send to SharePoint",
    "description": "Automate the task to store document originating from Contract document and then send the result to SharePoint. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "SharePoint",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to SharePoint",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "store-document-contract-document-docusign.json",
    "title": "Store document from Contract document and send to DocuSign",
    "description": "Automate the task to store document originating from Contract document and then send the result to DocuSign. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "DocuSign",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to DocuSign",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "store-document-contract-document-sap.json",
    "title": "Store document from Contract document and send to SAP",
    "description": "Automate the task to store document originating from Contract document and then send the result to SAP. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "SAP",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to SAP",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "store-document-contract-document-compliance-db.json",
    "title": "Store document from Contract document and send to Compliance DB",
    "description": "Automate the task to store document originating from Contract document and then send the result to Compliance DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "Compliance DB",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to Compliance DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "validate-compliance-contract-document-slack.json",
    "title": "Validate compliance from Contract document and send to Slack",
    "description": "Automate the task to validate compliance originating from Contract document and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "validate-compliance-contract-document-email.json",
    "title": "Validate compliance from Contract document and send to Email",
    "description": "Automate the task to validate compliance originating from Contract document and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "validate-compliance-contract-document-sharepoint.json",
    "title": "Validate compliance from Contract document and send to SharePoint",
    "description": "Automate the task to validate compliance originating from Contract document and then send the result to SharePoint. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "SharePoint",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to SharePoint",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "validate-compliance-contract-document-docusign.json",
    "title": "Validate compliance from Contract document and send to DocuSign",
    "description": "Automate the task to validate compliance originating from Contract document and then send the result to DocuSign. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "DocuSign",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to DocuSign",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "validate-compliance-contract-document-sap.json",
    "title": "Validate compliance from Contract document and send to SAP",
    "description": "Automate the task to validate compliance originating from Contract document and then send the result to SAP. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "SAP",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to SAP",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "validate-compliance-contract-document-compliance-db.json",
    "title": "Validate compliance from Contract document and send to Compliance DB",
    "description": "Automate the task to validate compliance originating from Contract document and then send the result to Compliance DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Contract document",
      "Compliance DB",
      "Slack"
    ],
    "trigger": "Incoming event from Contract document",
    "output": "Data sent to Compliance DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "extract-terms-with-ai-procurement-request-slack.json",
    "title": "Extract terms with ai from Procurement request and send to Slack",
    "description": "Automate the task to extract terms with AI originating from Procurement request and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-terms-with-ai-procurement-request-email.json",
    "title": "Extract terms with ai from Procurement request and send to Email",
    "description": "Automate the task to extract terms with AI originating from Procurement request and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-terms-with-ai-procurement-request-sharepoint.json",
    "title": "Extract terms with ai from Procurement request and send to SharePoint",
    "description": "Automate the task to extract terms with AI originating from Procurement request and then send the result to SharePoint. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "SharePoint",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to SharePoint",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-terms-with-ai-procurement-request-docusign.json",
    "title": "Extract terms with ai from Procurement request and send to DocuSign",
    "description": "Automate the task to extract terms with AI originating from Procurement request and then send the result to DocuSign. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "DocuSign",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to DocuSign",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-terms-with-ai-procurement-request-sap.json",
    "title": "Extract terms with ai from Procurement request and send to SAP",
    "description": "Automate the task to extract terms with AI originating from Procurement request and then send the result to SAP. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "SAP",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to SAP",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-terms-with-ai-procurement-request-compliance-db.json",
    "title": "Extract terms with ai from Procurement request and send to Compliance DB",
    "description": "Automate the task to extract terms with AI originating from Procurement request and then send the result to Compliance DB. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "Compliance DB",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to Compliance DB",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "update-contract-registry-procurement-request-slack.json",
    "title": "Update contract registry from Procurement request and send to Slack",
    "description": "Automate the task to update contract registry originating from Procurement request and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-contract-registry-procurement-request-email.json",
    "title": "Update contract registry from Procurement request and send to Email",
    "description": "Automate the task to update contract registry originating from Procurement request and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-contract-registry-procurement-request-sharepoint.json",
    "title": "Update contract registry from Procurement request and send to SharePoint",
    "description": "Automate the task to update contract registry originating from Procurement request and then send the result to SharePoint. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "SharePoint",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to SharePoint",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-contract-registry-procurement-request-docusign.json",
    "title": "Update contract registry from Procurement request and send to DocuSign",
    "description": "Automate the task to update contract registry originating from Procurement request and then send the result to DocuSign. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "DocuSign",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to DocuSign",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-contract-registry-procurement-request-sap.json",
    "title": "Update contract registry from Procurement request and send to SAP",
    "description": "Automate the task to update contract registry originating from Procurement request and then send the result to SAP. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "SAP",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to SAP",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-contract-registry-procurement-request-compliance-db.json",
    "title": "Update contract registry from Procurement request and send to Compliance DB",
    "description": "Automate the task to update contract registry originating from Procurement request and then send the result to Compliance DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "Compliance DB",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to Compliance DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "initiate-approval-procurement-request-slack.json",
    "title": "Initiate approval from Procurement request and send to Slack",
    "description": "Automate the task to initiate approval originating from Procurement request and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "initiate-approval-procurement-request-email.json",
    "title": "Initiate approval from Procurement request and send to Email",
    "description": "Automate the task to initiate approval originating from Procurement request and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "initiate-approval-procurement-request-sharepoint.json",
    "title": "Initiate approval from Procurement request and send to SharePoint",
    "description": "Automate the task to initiate approval originating from Procurement request and then send the result to SharePoint. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "SharePoint",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to SharePoint",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "initiate-approval-procurement-request-docusign.json",
    "title": "Initiate approval from Procurement request and send to DocuSign",
    "description": "Automate the task to initiate approval originating from Procurement request and then send the result to DocuSign. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "DocuSign",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to DocuSign",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "initiate-approval-procurement-request-sap.json",
    "title": "Initiate approval from Procurement request and send to SAP",
    "description": "Automate the task to initiate approval originating from Procurement request and then send the result to SAP. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "SAP",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to SAP",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "initiate-approval-procurement-request-compliance-db.json",
    "title": "Initiate approval from Procurement request and send to Compliance DB",
    "description": "Automate the task to initiate approval originating from Procurement request and then send the result to Compliance DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "Compliance DB",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to Compliance DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-legal-team-procurement-request-slack.json",
    "title": "Notify legal team from Procurement request and send to Slack",
    "description": "Automate the task to notify legal team originating from Procurement request and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-legal-team-procurement-request-email.json",
    "title": "Notify legal team from Procurement request and send to Email",
    "description": "Automate the task to notify legal team originating from Procurement request and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-legal-team-procurement-request-sharepoint.json",
    "title": "Notify legal team from Procurement request and send to SharePoint",
    "description": "Automate the task to notify legal team originating from Procurement request and then send the result to SharePoint. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "SharePoint",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to SharePoint",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-legal-team-procurement-request-docusign.json",
    "title": "Notify legal team from Procurement request and send to DocuSign",
    "description": "Automate the task to notify legal team originating from Procurement request and then send the result to DocuSign. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "DocuSign",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to DocuSign",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-legal-team-procurement-request-sap.json",
    "title": "Notify legal team from Procurement request and send to SAP",
    "description": "Automate the task to notify legal team originating from Procurement request and then send the result to SAP. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "SAP",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to SAP",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-legal-team-procurement-request-compliance-db.json",
    "title": "Notify legal team from Procurement request and send to Compliance DB",
    "description": "Automate the task to notify legal team originating from Procurement request and then send the result to Compliance DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "Compliance DB",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to Compliance DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "store-document-procurement-request-slack.json",
    "title": "Store document from Procurement request and send to Slack",
    "description": "Automate the task to store document originating from Procurement request and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "store-document-procurement-request-email.json",
    "title": "Store document from Procurement request and send to Email",
    "description": "Automate the task to store document originating from Procurement request and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "store-document-procurement-request-sharepoint.json",
    "title": "Store document from Procurement request and send to SharePoint",
    "description": "Automate the task to store document originating from Procurement request and then send the result to SharePoint. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "SharePoint",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to SharePoint",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "store-document-procurement-request-docusign.json",
    "title": "Store document from Procurement request and send to DocuSign",
    "description": "Automate the task to store document originating from Procurement request and then send the result to DocuSign. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "DocuSign",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to DocuSign",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "store-document-procurement-request-sap.json",
    "title": "Store document from Procurement request and send to SAP",
    "description": "Automate the task to store document originating from Procurement request and then send the result to SAP. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "SAP",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to SAP",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "store-document-procurement-request-compliance-db.json",
    "title": "Store document from Procurement request and send to Compliance DB",
    "description": "Automate the task to store document originating from Procurement request and then send the result to Compliance DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "Compliance DB",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to Compliance DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "validate-compliance-procurement-request-slack.json",
    "title": "Validate compliance from Procurement request and send to Slack",
    "description": "Automate the task to validate compliance originating from Procurement request and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "validate-compliance-procurement-request-email.json",
    "title": "Validate compliance from Procurement request and send to Email",
    "description": "Automate the task to validate compliance originating from Procurement request and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "validate-compliance-procurement-request-sharepoint.json",
    "title": "Validate compliance from Procurement request and send to SharePoint",
    "description": "Automate the task to validate compliance originating from Procurement request and then send the result to SharePoint. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "SharePoint",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to SharePoint",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "validate-compliance-procurement-request-docusign.json",
    "title": "Validate compliance from Procurement request and send to DocuSign",
    "description": "Automate the task to validate compliance originating from Procurement request and then send the result to DocuSign. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "DocuSign",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to DocuSign",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "validate-compliance-procurement-request-sap.json",
    "title": "Validate compliance from Procurement request and send to SAP",
    "description": "Automate the task to validate compliance originating from Procurement request and then send the result to SAP. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "SAP",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to SAP",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "validate-compliance-procurement-request-compliance-db.json",
    "title": "Validate compliance from Procurement request and send to Compliance DB",
    "description": "Automate the task to validate compliance originating from Procurement request and then send the result to Compliance DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Procurement request",
      "Compliance DB",
      "Slack"
    ],
    "trigger": "Incoming event from Procurement request",
    "output": "Data sent to Compliance DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "extract-terms-with-ai-vendor-application-slack.json",
    "title": "Extract terms with ai from Vendor application and send to Slack",
    "description": "Automate the task to extract terms with AI originating from Vendor application and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-terms-with-ai-vendor-application-email.json",
    "title": "Extract terms with ai from Vendor application and send to Email",
    "description": "Automate the task to extract terms with AI originating from Vendor application and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-terms-with-ai-vendor-application-sharepoint.json",
    "title": "Extract terms with ai from Vendor application and send to SharePoint",
    "description": "Automate the task to extract terms with AI originating from Vendor application and then send the result to SharePoint. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "SharePoint",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to SharePoint",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-terms-with-ai-vendor-application-docusign.json",
    "title": "Extract terms with ai from Vendor application and send to DocuSign",
    "description": "Automate the task to extract terms with AI originating from Vendor application and then send the result to DocuSign. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "DocuSign",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to DocuSign",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-terms-with-ai-vendor-application-sap.json",
    "title": "Extract terms with ai from Vendor application and send to SAP",
    "description": "Automate the task to extract terms with AI originating from Vendor application and then send the result to SAP. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "SAP",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to SAP",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "extract-terms-with-ai-vendor-application-compliance-db.json",
    "title": "Extract terms with ai from Vendor application and send to Compliance DB",
    "description": "Automate the task to extract terms with AI originating from Vendor application and then send the result to Compliance DB. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "Compliance DB",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to Compliance DB",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "update-contract-registry-vendor-application-slack.json",
    "title": "Update contract registry from Vendor application and send to Slack",
    "description": "Automate the task to update contract registry originating from Vendor application and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-contract-registry-vendor-application-email.json",
    "title": "Update contract registry from Vendor application and send to Email",
    "description": "Automate the task to update contract registry originating from Vendor application and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-contract-registry-vendor-application-sharepoint.json",
    "title": "Update contract registry from Vendor application and send to SharePoint",
    "description": "Automate the task to update contract registry originating from Vendor application and then send the result to SharePoint. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "SharePoint",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to SharePoint",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-contract-registry-vendor-application-docusign.json",
    "title": "Update contract registry from Vendor application and send to DocuSign",
    "description": "Automate the task to update contract registry originating from Vendor application and then send the result to DocuSign. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "DocuSign",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to DocuSign",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-contract-registry-vendor-application-sap.json",
    "title": "Update contract registry from Vendor application and send to SAP",
    "description": "Automate the task to update contract registry originating from Vendor application and then send the result to SAP. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "SAP",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to SAP",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-contract-registry-vendor-application-compliance-db.json",
    "title": "Update contract registry from Vendor application and send to Compliance DB",
    "description": "Automate the task to update contract registry originating from Vendor application and then send the result to Compliance DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "Compliance DB",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to Compliance DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "initiate-approval-vendor-application-slack.json",
    "title": "Initiate approval from Vendor application and send to Slack",
    "description": "Automate the task to initiate approval originating from Vendor application and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "initiate-approval-vendor-application-email.json",
    "title": "Initiate approval from Vendor application and send to Email",
    "description": "Automate the task to initiate approval originating from Vendor application and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "initiate-approval-vendor-application-sharepoint.json",
    "title": "Initiate approval from Vendor application and send to SharePoint",
    "description": "Automate the task to initiate approval originating from Vendor application and then send the result to SharePoint. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "SharePoint",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to SharePoint",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "initiate-approval-vendor-application-docusign.json",
    "title": "Initiate approval from Vendor application and send to DocuSign",
    "description": "Automate the task to initiate approval originating from Vendor application and then send the result to DocuSign. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "DocuSign",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to DocuSign",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "initiate-approval-vendor-application-sap.json",
    "title": "Initiate approval from Vendor application and send to SAP",
    "description": "Automate the task to initiate approval originating from Vendor application and then send the result to SAP. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "SAP",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to SAP",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "initiate-approval-vendor-application-compliance-db.json",
    "title": "Initiate approval from Vendor application and send to Compliance DB",
    "description": "Automate the task to initiate approval originating from Vendor application and then send the result to Compliance DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "Compliance DB",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to Compliance DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-legal-team-vendor-application-slack.json",
    "title": "Notify legal team from Vendor application and send to Slack",
    "description": "Automate the task to notify legal team originating from Vendor application and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-legal-team-vendor-application-email.json",
    "title": "Notify legal team from Vendor application and send to Email",
    "description": "Automate the task to notify legal team originating from Vendor application and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-legal-team-vendor-application-sharepoint.json",
    "title": "Notify legal team from Vendor application and send to SharePoint",
    "description": "Automate the task to notify legal team originating from Vendor application and then send the result to SharePoint. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "SharePoint",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to SharePoint",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-legal-team-vendor-application-docusign.json",
    "title": "Notify legal team from Vendor application and send to DocuSign",
    "description": "Automate the task to notify legal team originating from Vendor application and then send the result to DocuSign. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "DocuSign",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to DocuSign",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-legal-team-vendor-application-sap.json",
    "title": "Notify legal team from Vendor application and send to SAP",
    "description": "Automate the task to notify legal team originating from Vendor application and then send the result to SAP. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "SAP",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to SAP",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-legal-team-vendor-application-compliance-db.json",
    "title": "Notify legal team from Vendor application and send to Compliance DB",
    "description": "Automate the task to notify legal team originating from Vendor application and then send the result to Compliance DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "Compliance DB",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to Compliance DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "store-document-vendor-application-slack.json",
    "title": "Store document from Vendor application and send to Slack",
    "description": "Automate the task to store document originating from Vendor application and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "store-document-vendor-application-email.json",
    "title": "Store document from Vendor application and send to Email",
    "description": "Automate the task to store document originating from Vendor application and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "store-document-vendor-application-sharepoint.json",
    "title": "Store document from Vendor application and send to SharePoint",
    "description": "Automate the task to store document originating from Vendor application and then send the result to SharePoint. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "SharePoint",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to SharePoint",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "store-document-vendor-application-docusign.json",
    "title": "Store document from Vendor application and send to DocuSign",
    "description": "Automate the task to store document originating from Vendor application and then send the result to DocuSign. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Legal, Procurement, Compliance",
    "tools_used": [
      "Vendor application",
      "DocuSign",
      "Slack"
    ],
    "trigger": "Incoming event from Vendor application",
    "output": "Data sent to DocuSign",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-order-confirmation-shopify-order-email.json",
    "title": "Send order confirmation from Shopify order and send to Email",
    "description": "Automate the task to send order confirmation originating from Shopify order and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-order-confirmation-shopify-order-slack.json",
    "title": "Send order confirmation from Shopify order and send to Slack",
    "description": "Automate the task to send order confirmation originating from Shopify order and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-order-confirmation-shopify-order-google-sheets.json",
    "title": "Send order confirmation from Shopify order and send to Google Sheets",
    "description": "Automate the task to send order confirmation originating from Shopify order and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-order-confirmation-shopify-order-warehouse-system.json",
    "title": "Send order confirmation from Shopify order and send to Warehouse system",
    "description": "Automate the task to send order confirmation originating from Shopify order and then send the result to Warehouse system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Warehouse system",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Warehouse system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-order-confirmation-shopify-order-crm.json",
    "title": "Send order confirmation from Shopify order and send to CRM",
    "description": "Automate the task to send order confirmation originating from Shopify order and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-order-confirmation-shopify-order-inventory-db.json",
    "title": "Send order confirmation from Shopify order and send to Inventory DB",
    "description": "Automate the task to send order confirmation originating from Shopify order and then send the result to Inventory DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Inventory DB",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Inventory DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-inventory-shopify-order-email.json",
    "title": "Update inventory from Shopify order and send to Email",
    "description": "Automate the task to update inventory originating from Shopify order and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-inventory-shopify-order-slack.json",
    "title": "Update inventory from Shopify order and send to Slack",
    "description": "Automate the task to update inventory originating from Shopify order and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-inventory-shopify-order-google-sheets.json",
    "title": "Update inventory from Shopify order and send to Google Sheets",
    "description": "Automate the task to update inventory originating from Shopify order and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-inventory-shopify-order-warehouse-system.json",
    "title": "Update inventory from Shopify order and send to Warehouse system",
    "description": "Automate the task to update inventory originating from Shopify order and then send the result to Warehouse system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Warehouse system",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Warehouse system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-inventory-shopify-order-crm.json",
    "title": "Update inventory from Shopify order and send to CRM",
    "description": "Automate the task to update inventory originating from Shopify order and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-inventory-shopify-order-inventory-db.json",
    "title": "Update inventory from Shopify order and send to Inventory DB",
    "description": "Automate the task to update inventory originating from Shopify order and then send the result to Inventory DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Inventory DB",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Inventory DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-product-info-shopify-order-email.json",
    "title": "Sync product info from Shopify order and send to Email",
    "description": "Automate the task to sync product info originating from Shopify order and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-product-info-shopify-order-slack.json",
    "title": "Sync product info from Shopify order and send to Slack",
    "description": "Automate the task to sync product info originating from Shopify order and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-product-info-shopify-order-google-sheets.json",
    "title": "Sync product info from Shopify order and send to Google Sheets",
    "description": "Automate the task to sync product info originating from Shopify order and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-product-info-shopify-order-warehouse-system.json",
    "title": "Sync product info from Shopify order and send to Warehouse system",
    "description": "Automate the task to sync product info originating from Shopify order and then send the result to Warehouse system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Warehouse system",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Warehouse system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-product-info-shopify-order-crm.json",
    "title": "Sync product info from Shopify order and send to CRM",
    "description": "Automate the task to sync product info originating from Shopify order and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-product-info-shopify-order-inventory-db.json",
    "title": "Sync product info from Shopify order and send to Inventory DB",
    "description": "Automate the task to sync product info originating from Shopify order and then send the result to Inventory DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Inventory DB",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Inventory DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "trigger-restock-shopify-order-email.json",
    "title": "Trigger restock from Shopify order and send to Email",
    "description": "Automate the task to trigger restock originating from Shopify order and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "trigger-restock-shopify-order-slack.json",
    "title": "Trigger restock from Shopify order and send to Slack",
    "description": "Automate the task to trigger restock originating from Shopify order and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "trigger-restock-shopify-order-google-sheets.json",
    "title": "Trigger restock from Shopify order and send to Google Sheets",
    "description": "Automate the task to trigger restock originating from Shopify order and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "trigger-restock-shopify-order-warehouse-system.json",
    "title": "Trigger restock from Shopify order and send to Warehouse system",
    "description": "Automate the task to trigger restock originating from Shopify order and then send the result to Warehouse system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Warehouse system",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Warehouse system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "trigger-restock-shopify-order-crm.json",
    "title": "Trigger restock from Shopify order and send to CRM",
    "description": "Automate the task to trigger restock originating from Shopify order and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "trigger-restock-shopify-order-inventory-db.json",
    "title": "Trigger restock from Shopify order and send to Inventory DB",
    "description": "Automate the task to trigger restock originating from Shopify order and then send the result to Inventory DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Inventory DB",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Inventory DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-shipping-label-shopify-order-email.json",
    "title": "Generate shipping label from Shopify order and send to Email",
    "description": "Automate the task to generate shipping label originating from Shopify order and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-shipping-label-shopify-order-slack.json",
    "title": "Generate shipping label from Shopify order and send to Slack",
    "description": "Automate the task to generate shipping label originating from Shopify order and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-shipping-label-shopify-order-google-sheets.json",
    "title": "Generate shipping label from Shopify order and send to Google Sheets",
    "description": "Automate the task to generate shipping label originating from Shopify order and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-shipping-label-shopify-order-warehouse-system.json",
    "title": "Generate shipping label from Shopify order and send to Warehouse system",
    "description": "Automate the task to generate shipping label originating from Shopify order and then send the result to Warehouse system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Warehouse system",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Warehouse system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-shipping-label-shopify-order-crm.json",
    "title": "Generate shipping label from Shopify order and send to CRM",
    "description": "Automate the task to generate shipping label originating from Shopify order and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-shipping-label-shopify-order-inventory-db.json",
    "title": "Generate shipping label from Shopify order and send to Inventory DB",
    "description": "Automate the task to generate shipping label originating from Shopify order and then send the result to Inventory DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Inventory DB",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Inventory DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-warehouse-shopify-order-email.json",
    "title": "Notify warehouse from Shopify order and send to Email",
    "description": "Automate the task to notify warehouse originating from Shopify order and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-warehouse-shopify-order-slack.json",
    "title": "Notify warehouse from Shopify order and send to Slack",
    "description": "Automate the task to notify warehouse originating from Shopify order and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-warehouse-shopify-order-google-sheets.json",
    "title": "Notify warehouse from Shopify order and send to Google Sheets",
    "description": "Automate the task to notify warehouse originating from Shopify order and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-warehouse-shopify-order-warehouse-system.json",
    "title": "Notify warehouse from Shopify order and send to Warehouse system",
    "description": "Automate the task to notify warehouse originating from Shopify order and then send the result to Warehouse system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Warehouse system",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Warehouse system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-warehouse-shopify-order-crm.json",
    "title": "Notify warehouse from Shopify order and send to CRM",
    "description": "Automate the task to notify warehouse originating from Shopify order and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-warehouse-shopify-order-inventory-db.json",
    "title": "Notify warehouse from Shopify order and send to Inventory DB",
    "description": "Automate the task to notify warehouse originating from Shopify order and then send the result to Inventory DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Shopify order",
      "Inventory DB",
      "Slack"
    ],
    "trigger": "Incoming event from Shopify order",
    "output": "Data sent to Inventory DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-order-confirmation-inventory-sheet-email.json",
    "title": "Send order confirmation from Inventory sheet and send to Email",
    "description": "Automate the task to send order confirmation originating from Inventory sheet and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-order-confirmation-inventory-sheet-slack.json",
    "title": "Send order confirmation from Inventory sheet and send to Slack",
    "description": "Automate the task to send order confirmation originating from Inventory sheet and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-order-confirmation-inventory-sheet-google-sheets.json",
    "title": "Send order confirmation from Inventory sheet and send to Google Sheets",
    "description": "Automate the task to send order confirmation originating from Inventory sheet and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-order-confirmation-inventory-sheet-warehouse-system.json",
    "title": "Send order confirmation from Inventory sheet and send to Warehouse system",
    "description": "Automate the task to send order confirmation originating from Inventory sheet and then send the result to Warehouse system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Warehouse system",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Warehouse system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-order-confirmation-inventory-sheet-crm.json",
    "title": "Send order confirmation from Inventory sheet and send to CRM",
    "description": "Automate the task to send order confirmation originating from Inventory sheet and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-order-confirmation-inventory-sheet-inventory-db.json",
    "title": "Send order confirmation from Inventory sheet and send to Inventory DB",
    "description": "Automate the task to send order confirmation originating from Inventory sheet and then send the result to Inventory DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Inventory DB",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Inventory DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-inventory-inventory-sheet-email.json",
    "title": "Update inventory from Inventory sheet and send to Email",
    "description": "Automate the task to update inventory originating from Inventory sheet and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-inventory-inventory-sheet-slack.json",
    "title": "Update inventory from Inventory sheet and send to Slack",
    "description": "Automate the task to update inventory originating from Inventory sheet and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-inventory-inventory-sheet-google-sheets.json",
    "title": "Update inventory from Inventory sheet and send to Google Sheets",
    "description": "Automate the task to update inventory originating from Inventory sheet and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-inventory-inventory-sheet-warehouse-system.json",
    "title": "Update inventory from Inventory sheet and send to Warehouse system",
    "description": "Automate the task to update inventory originating from Inventory sheet and then send the result to Warehouse system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Warehouse system",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Warehouse system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-inventory-inventory-sheet-crm.json",
    "title": "Update inventory from Inventory sheet and send to CRM",
    "description": "Automate the task to update inventory originating from Inventory sheet and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-inventory-inventory-sheet-inventory-db.json",
    "title": "Update inventory from Inventory sheet and send to Inventory DB",
    "description": "Automate the task to update inventory originating from Inventory sheet and then send the result to Inventory DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Inventory DB",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Inventory DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-product-info-inventory-sheet-email.json",
    "title": "Sync product info from Inventory sheet and send to Email",
    "description": "Automate the task to sync product info originating from Inventory sheet and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-product-info-inventory-sheet-slack.json",
    "title": "Sync product info from Inventory sheet and send to Slack",
    "description": "Automate the task to sync product info originating from Inventory sheet and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-product-info-inventory-sheet-google-sheets.json",
    "title": "Sync product info from Inventory sheet and send to Google Sheets",
    "description": "Automate the task to sync product info originating from Inventory sheet and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-product-info-inventory-sheet-warehouse-system.json",
    "title": "Sync product info from Inventory sheet and send to Warehouse system",
    "description": "Automate the task to sync product info originating from Inventory sheet and then send the result to Warehouse system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Warehouse system",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Warehouse system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-product-info-inventory-sheet-crm.json",
    "title": "Sync product info from Inventory sheet and send to CRM",
    "description": "Automate the task to sync product info originating from Inventory sheet and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-product-info-inventory-sheet-inventory-db.json",
    "title": "Sync product info from Inventory sheet and send to Inventory DB",
    "description": "Automate the task to sync product info originating from Inventory sheet and then send the result to Inventory DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Inventory DB",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Inventory DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "trigger-restock-inventory-sheet-email.json",
    "title": "Trigger restock from Inventory sheet and send to Email",
    "description": "Automate the task to trigger restock originating from Inventory sheet and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "trigger-restock-inventory-sheet-slack.json",
    "title": "Trigger restock from Inventory sheet and send to Slack",
    "description": "Automate the task to trigger restock originating from Inventory sheet and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "trigger-restock-inventory-sheet-google-sheets.json",
    "title": "Trigger restock from Inventory sheet and send to Google Sheets",
    "description": "Automate the task to trigger restock originating from Inventory sheet and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "trigger-restock-inventory-sheet-warehouse-system.json",
    "title": "Trigger restock from Inventory sheet and send to Warehouse system",
    "description": "Automate the task to trigger restock originating from Inventory sheet and then send the result to Warehouse system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Warehouse system",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Warehouse system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "trigger-restock-inventory-sheet-crm.json",
    "title": "Trigger restock from Inventory sheet and send to CRM",
    "description": "Automate the task to trigger restock originating from Inventory sheet and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "trigger-restock-inventory-sheet-inventory-db.json",
    "title": "Trigger restock from Inventory sheet and send to Inventory DB",
    "description": "Automate the task to trigger restock originating from Inventory sheet and then send the result to Inventory DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Inventory DB",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Inventory DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-shipping-label-inventory-sheet-email.json",
    "title": "Generate shipping label from Inventory sheet and send to Email",
    "description": "Automate the task to generate shipping label originating from Inventory sheet and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-shipping-label-inventory-sheet-slack.json",
    "title": "Generate shipping label from Inventory sheet and send to Slack",
    "description": "Automate the task to generate shipping label originating from Inventory sheet and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-shipping-label-inventory-sheet-google-sheets.json",
    "title": "Generate shipping label from Inventory sheet and send to Google Sheets",
    "description": "Automate the task to generate shipping label originating from Inventory sheet and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-shipping-label-inventory-sheet-warehouse-system.json",
    "title": "Generate shipping label from Inventory sheet and send to Warehouse system",
    "description": "Automate the task to generate shipping label originating from Inventory sheet and then send the result to Warehouse system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Warehouse system",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Warehouse system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-shipping-label-inventory-sheet-crm.json",
    "title": "Generate shipping label from Inventory sheet and send to CRM",
    "description": "Automate the task to generate shipping label originating from Inventory sheet and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-shipping-label-inventory-sheet-inventory-db.json",
    "title": "Generate shipping label from Inventory sheet and send to Inventory DB",
    "description": "Automate the task to generate shipping label originating from Inventory sheet and then send the result to Inventory DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Inventory DB",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Inventory DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-warehouse-inventory-sheet-email.json",
    "title": "Notify warehouse from Inventory sheet and send to Email",
    "description": "Automate the task to notify warehouse originating from Inventory sheet and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-warehouse-inventory-sheet-slack.json",
    "title": "Notify warehouse from Inventory sheet and send to Slack",
    "description": "Automate the task to notify warehouse originating from Inventory sheet and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-warehouse-inventory-sheet-google-sheets.json",
    "title": "Notify warehouse from Inventory sheet and send to Google Sheets",
    "description": "Automate the task to notify warehouse originating from Inventory sheet and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-warehouse-inventory-sheet-warehouse-system.json",
    "title": "Notify warehouse from Inventory sheet and send to Warehouse system",
    "description": "Automate the task to notify warehouse originating from Inventory sheet and then send the result to Warehouse system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Warehouse system",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Warehouse system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-warehouse-inventory-sheet-crm.json",
    "title": "Notify warehouse from Inventory sheet and send to CRM",
    "description": "Automate the task to notify warehouse originating from Inventory sheet and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-warehouse-inventory-sheet-inventory-db.json",
    "title": "Notify warehouse from Inventory sheet and send to Inventory DB",
    "description": "Automate the task to notify warehouse originating from Inventory sheet and then send the result to Inventory DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "Inventory sheet",
      "Inventory DB",
      "Slack"
    ],
    "trigger": "Incoming event from Inventory sheet",
    "output": "Data sent to Inventory DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-order-confirmation-woocommerce-price-change-email.json",
    "title": "Send order confirmation from WooCommerce price change and send to Email",
    "description": "Automate the task to send order confirmation originating from WooCommerce price change and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-order-confirmation-woocommerce-price-change-slack.json",
    "title": "Send order confirmation from WooCommerce price change and send to Slack",
    "description": "Automate the task to send order confirmation originating from WooCommerce price change and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-order-confirmation-woocommerce-price-change-google-sheets.json",
    "title": "Send order confirmation from WooCommerce price change and send to Google Sheets",
    "description": "Automate the task to send order confirmation originating from WooCommerce price change and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-order-confirmation-woocommerce-price-change-warehouse-system.json",
    "title": "Send order confirmation from WooCommerce price change and send to Warehouse system",
    "description": "Automate the task to send order confirmation originating from WooCommerce price change and then send the result to Warehouse system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Warehouse system",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Warehouse system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-order-confirmation-woocommerce-price-change-crm.json",
    "title": "Send order confirmation from WooCommerce price change and send to CRM",
    "description": "Automate the task to send order confirmation originating from WooCommerce price change and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-order-confirmation-woocommerce-price-change-inventory-db.json",
    "title": "Send order confirmation from WooCommerce price change and send to Inventory DB",
    "description": "Automate the task to send order confirmation originating from WooCommerce price change and then send the result to Inventory DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Inventory DB",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Inventory DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-inventory-woocommerce-price-change-email.json",
    "title": "Update inventory from WooCommerce price change and send to Email",
    "description": "Automate the task to update inventory originating from WooCommerce price change and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-inventory-woocommerce-price-change-slack.json",
    "title": "Update inventory from WooCommerce price change and send to Slack",
    "description": "Automate the task to update inventory originating from WooCommerce price change and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-inventory-woocommerce-price-change-google-sheets.json",
    "title": "Update inventory from WooCommerce price change and send to Google Sheets",
    "description": "Automate the task to update inventory originating from WooCommerce price change and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-inventory-woocommerce-price-change-warehouse-system.json",
    "title": "Update inventory from WooCommerce price change and send to Warehouse system",
    "description": "Automate the task to update inventory originating from WooCommerce price change and then send the result to Warehouse system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Warehouse system",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Warehouse system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-inventory-woocommerce-price-change-crm.json",
    "title": "Update inventory from WooCommerce price change and send to CRM",
    "description": "Automate the task to update inventory originating from WooCommerce price change and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-inventory-woocommerce-price-change-inventory-db.json",
    "title": "Update inventory from WooCommerce price change and send to Inventory DB",
    "description": "Automate the task to update inventory originating from WooCommerce price change and then send the result to Inventory DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Inventory DB",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Inventory DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-product-info-woocommerce-price-change-email.json",
    "title": "Sync product info from WooCommerce price change and send to Email",
    "description": "Automate the task to sync product info originating from WooCommerce price change and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-product-info-woocommerce-price-change-slack.json",
    "title": "Sync product info from WooCommerce price change and send to Slack",
    "description": "Automate the task to sync product info originating from WooCommerce price change and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-product-info-woocommerce-price-change-google-sheets.json",
    "title": "Sync product info from WooCommerce price change and send to Google Sheets",
    "description": "Automate the task to sync product info originating from WooCommerce price change and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-product-info-woocommerce-price-change-warehouse-system.json",
    "title": "Sync product info from WooCommerce price change and send to Warehouse system",
    "description": "Automate the task to sync product info originating from WooCommerce price change and then send the result to Warehouse system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Warehouse system",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Warehouse system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-product-info-woocommerce-price-change-crm.json",
    "title": "Sync product info from WooCommerce price change and send to CRM",
    "description": "Automate the task to sync product info originating from WooCommerce price change and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "sync-product-info-woocommerce-price-change-inventory-db.json",
    "title": "Sync product info from WooCommerce price change and send to Inventory DB",
    "description": "Automate the task to sync product info originating from WooCommerce price change and then send the result to Inventory DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Inventory DB",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Inventory DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "trigger-restock-woocommerce-price-change-email.json",
    "title": "Trigger restock from WooCommerce price change and send to Email",
    "description": "Automate the task to trigger restock originating from WooCommerce price change and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "trigger-restock-woocommerce-price-change-slack.json",
    "title": "Trigger restock from WooCommerce price change and send to Slack",
    "description": "Automate the task to trigger restock originating from WooCommerce price change and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "trigger-restock-woocommerce-price-change-google-sheets.json",
    "title": "Trigger restock from WooCommerce price change and send to Google Sheets",
    "description": "Automate the task to trigger restock originating from WooCommerce price change and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "trigger-restock-woocommerce-price-change-warehouse-system.json",
    "title": "Trigger restock from WooCommerce price change and send to Warehouse system",
    "description": "Automate the task to trigger restock originating from WooCommerce price change and then send the result to Warehouse system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Warehouse system",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Warehouse system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "trigger-restock-woocommerce-price-change-crm.json",
    "title": "Trigger restock from WooCommerce price change and send to CRM",
    "description": "Automate the task to trigger restock originating from WooCommerce price change and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "trigger-restock-woocommerce-price-change-inventory-db.json",
    "title": "Trigger restock from WooCommerce price change and send to Inventory DB",
    "description": "Automate the task to trigger restock originating from WooCommerce price change and then send the result to Inventory DB. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Inventory DB",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Inventory DB",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-shipping-label-woocommerce-price-change-email.json",
    "title": "Generate shipping label from WooCommerce price change and send to Email",
    "description": "Automate the task to generate shipping label originating from WooCommerce price change and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-shipping-label-woocommerce-price-change-slack.json",
    "title": "Generate shipping label from WooCommerce price change and send to Slack",
    "description": "Automate the task to generate shipping label originating from WooCommerce price change and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-shipping-label-woocommerce-price-change-google-sheets.json",
    "title": "Generate shipping label from WooCommerce price change and send to Google Sheets",
    "description": "Automate the task to generate shipping label originating from WooCommerce price change and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-shipping-label-woocommerce-price-change-warehouse-system.json",
    "title": "Generate shipping label from WooCommerce price change and send to Warehouse system",
    "description": "Automate the task to generate shipping label originating from WooCommerce price change and then send the result to Warehouse system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "E-commerce & Inventory",
    "tools_used": [
      "WooCommerce price change",
      "Warehouse system",
      "Slack"
    ],
    "trigger": "Incoming event from WooCommerce price change",
    "output": "Data sent to Warehouse system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "remind-user-todoist-task-slack.json",
    "title": "Remind user from Todoist task and send to Slack",
    "description": "Automate the task to remind user originating from Todoist task and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "remind-user-todoist-task-email.json",
    "title": "Remind user from Todoist task and send to Email",
    "description": "Automate the task to remind user originating from Todoist task and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "remind-user-todoist-task-google-calendar.json",
    "title": "Remind user from Todoist task and send to Google Calendar",
    "description": "Automate the task to remind user originating from Todoist task and then send the result to Google Calendar. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Google Calendar",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Google Calendar",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "remind-user-todoist-task-notion.json",
    "title": "Remind user from Todoist task and send to Notion",
    "description": "Automate the task to remind user originating from Todoist task and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "remind-user-todoist-task-todoist.json",
    "title": "Remind user from Todoist task and send to Todoist",
    "description": "Automate the task to remind user originating from Todoist task and then send the result to Todoist. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Todoist",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Todoist",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "summarize-email-with-ai-todoist-task-slack.json",
    "title": "Summarize email with ai from Todoist task and send to Slack",
    "description": "Automate the task to summarize email with AI originating from Todoist task and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-email-with-ai-todoist-task-email.json",
    "title": "Summarize email with ai from Todoist task and send to Email",
    "description": "Automate the task to summarize email with AI originating from Todoist task and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-email-with-ai-todoist-task-google-calendar.json",
    "title": "Summarize email with ai from Todoist task and send to Google Calendar",
    "description": "Automate the task to summarize email with AI originating from Todoist task and then send the result to Google Calendar. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Google Calendar",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Google Calendar",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-email-with-ai-todoist-task-notion.json",
    "title": "Summarize email with ai from Todoist task and send to Notion",
    "description": "Automate the task to summarize email with AI originating from Todoist task and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-email-with-ai-todoist-task-todoist.json",
    "title": "Summarize email with ai from Todoist task and send to Todoist",
    "description": "Automate the task to summarize email with AI originating from Todoist task and then send the result to Todoist. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Todoist",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Todoist",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "schedule-time-todoist-task-slack.json",
    "title": "Schedule time from Todoist task and send to Slack",
    "description": "Automate the task to schedule time originating from Todoist task and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-time-todoist-task-email.json",
    "title": "Schedule time from Todoist task and send to Email",
    "description": "Automate the task to schedule time originating from Todoist task and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-time-todoist-task-google-calendar.json",
    "title": "Schedule time from Todoist task and send to Google Calendar",
    "description": "Automate the task to schedule time originating from Todoist task and then send the result to Google Calendar. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Google Calendar",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Google Calendar",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-time-todoist-task-notion.json",
    "title": "Schedule time from Todoist task and send to Notion",
    "description": "Automate the task to schedule time originating from Todoist task and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-time-todoist-task-todoist.json",
    "title": "Schedule time from Todoist task and send to Todoist",
    "description": "Automate the task to schedule time originating from Todoist task and then send the result to Todoist. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Todoist",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Todoist",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-daily-report-todoist-task-slack.json",
    "title": "Create daily report from Todoist task and send to Slack",
    "description": "Automate the task to create daily report originating from Todoist task and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-daily-report-todoist-task-email.json",
    "title": "Create daily report from Todoist task and send to Email",
    "description": "Automate the task to create daily report originating from Todoist task and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-daily-report-todoist-task-google-calendar.json",
    "title": "Create daily report from Todoist task and send to Google Calendar",
    "description": "Automate the task to create daily report originating from Todoist task and then send the result to Google Calendar. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Google Calendar",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Google Calendar",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-daily-report-todoist-task-notion.json",
    "title": "Create daily report from Todoist task and send to Notion",
    "description": "Automate the task to create daily report originating from Todoist task and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-daily-report-todoist-task-todoist.json",
    "title": "Create daily report from Todoist task and send to Todoist",
    "description": "Automate the task to create daily report originating from Todoist task and then send the result to Todoist. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Todoist",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Todoist",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-to-do-list-todoist-task-slack.json",
    "title": "Generate to-do list from Todoist task and send to Slack",
    "description": "Automate the task to generate to-do list originating from Todoist task and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-to-do-list-todoist-task-email.json",
    "title": "Generate to-do list from Todoist task and send to Email",
    "description": "Automate the task to generate to-do list originating from Todoist task and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-to-do-list-todoist-task-google-calendar.json",
    "title": "Generate to-do list from Todoist task and send to Google Calendar",
    "description": "Automate the task to generate to-do list originating from Todoist task and then send the result to Google Calendar. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Google Calendar",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Google Calendar",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-to-do-list-todoist-task-notion.json",
    "title": "Generate to-do list from Todoist task and send to Notion",
    "description": "Automate the task to generate to-do list originating from Todoist task and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-to-do-list-todoist-task-todoist.json",
    "title": "Generate to-do list from Todoist task and send to Todoist",
    "description": "Automate the task to generate to-do list originating from Todoist task and then send the result to Todoist. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Todoist",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Todoist",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "flag-urgent-tasks-todoist-task-slack.json",
    "title": "Flag urgent tasks from Todoist task and send to Slack",
    "description": "Automate the task to flag urgent tasks originating from Todoist task and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "flag-urgent-tasks-todoist-task-email.json",
    "title": "Flag urgent tasks from Todoist task and send to Email",
    "description": "Automate the task to flag urgent tasks originating from Todoist task and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "flag-urgent-tasks-todoist-task-google-calendar.json",
    "title": "Flag urgent tasks from Todoist task and send to Google Calendar",
    "description": "Automate the task to flag urgent tasks originating from Todoist task and then send the result to Google Calendar. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Google Calendar",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Google Calendar",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "flag-urgent-tasks-todoist-task-notion.json",
    "title": "Flag urgent tasks from Todoist task and send to Notion",
    "description": "Automate the task to flag urgent tasks originating from Todoist task and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "flag-urgent-tasks-todoist-task-todoist.json",
    "title": "Flag urgent tasks from Todoist task and send to Todoist",
    "description": "Automate the task to flag urgent tasks originating from Todoist task and then send the result to Todoist. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Todoist task",
      "Todoist",
      "Slack"
    ],
    "trigger": "Incoming event from Todoist task",
    "output": "Data sent to Todoist",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "remind-user-calendar-event-slack.json",
    "title": "Remind user from Calendar event and send to Slack",
    "description": "Automate the task to remind user originating from Calendar event and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Calendar event",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Calendar event",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "remind-user-calendar-event-email.json",
    "title": "Remind user from Calendar event and send to Email",
    "description": "Automate the task to remind user originating from Calendar event and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Calendar event",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Calendar event",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "remind-user-calendar-event-google-calendar.json",
    "title": "Remind user from Calendar event and send to Google Calendar",
    "description": "Automate the task to remind user originating from Calendar event and then send the result to Google Calendar. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Calendar event",
      "Google Calendar",
      "Slack"
    ],
    "trigger": "Incoming event from Calendar event",
    "output": "Data sent to Google Calendar",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "remind-user-calendar-event-notion.json",
    "title": "Remind user from Calendar event and send to Notion",
    "description": "Automate the task to remind user originating from Calendar event and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Calendar event",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Calendar event",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "remind-user-calendar-event-todoist.json",
    "title": "Remind user from Calendar event and send to Todoist",
    "description": "Automate the task to remind user originating from Calendar event and then send the result to Todoist. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Calendar event",
      "Todoist",
      "Slack"
    ],
    "trigger": "Incoming event from Calendar event",
    "output": "Data sent to Todoist",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "summarize-email-with-ai-calendar-event-slack.json",
    "title": "Summarize email with ai from Calendar event and send to Slack",
    "description": "Automate the task to summarize email with AI originating from Calendar event and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Calendar event",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Calendar event",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-email-with-ai-calendar-event-email.json",
    "title": "Summarize email with ai from Calendar event and send to Email",
    "description": "Automate the task to summarize email with AI originating from Calendar event and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Calendar event",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Calendar event",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-email-with-ai-calendar-event-google-calendar.json",
    "title": "Summarize email with ai from Calendar event and send to Google Calendar",
    "description": "Automate the task to summarize email with AI originating from Calendar event and then send the result to Google Calendar. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Calendar event",
      "Google Calendar",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Calendar event",
    "output": "Data sent to Google Calendar",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-email-with-ai-calendar-event-notion.json",
    "title": "Summarize email with ai from Calendar event and send to Notion",
    "description": "Automate the task to summarize email with AI originating from Calendar event and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Calendar event",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Calendar event",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "summarize-email-with-ai-calendar-event-todoist.json",
    "title": "Summarize email with ai from Calendar event and send to Todoist",
    "description": "Automate the task to summarize email with AI originating from Calendar event and then send the result to Todoist. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Calendar event",
      "Todoist",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Calendar event",
    "output": "Data sent to Todoist",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "schedule-time-calendar-event-slack.json",
    "title": "Schedule time from Calendar event and send to Slack",
    "description": "Automate the task to schedule time originating from Calendar event and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Calendar event",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Calendar event",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-time-calendar-event-email.json",
    "title": "Schedule time from Calendar event and send to Email",
    "description": "Automate the task to schedule time originating from Calendar event and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Calendar event",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Calendar event",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-time-calendar-event-google-calendar.json",
    "title": "Schedule time from Calendar event and send to Google Calendar",
    "description": "Automate the task to schedule time originating from Calendar event and then send the result to Google Calendar. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Calendar event",
      "Google Calendar",
      "Slack"
    ],
    "trigger": "Incoming event from Calendar event",
    "output": "Data sent to Google Calendar",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-time-calendar-event-notion.json",
    "title": "Schedule time from Calendar event and send to Notion",
    "description": "Automate the task to schedule time originating from Calendar event and then send the result to Notion. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Calendar event",
      "Notion",
      "Slack"
    ],
    "trigger": "Incoming event from Calendar event",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-time-calendar-event-todoist.json",
    "title": "Schedule time from Calendar event and send to Todoist",
    "description": "Automate the task to schedule time originating from Calendar event and then send the result to Todoist. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Calendar event",
      "Todoist",
      "Slack"
    ],
    "trigger": "Incoming event from Calendar event",
    "output": "Data sent to Todoist",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "create-daily-report-calendar-event-slack.json",
    "title": "Create daily report from Calendar event and send to Slack",
    "description": "Automate the task to create daily report originating from Calendar event and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Calendar event",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Calendar event",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-daily-report-calendar-event-email.json",
    "title": "Create daily report from Calendar event and send to Email",
    "description": "Automate the task to create daily report originating from Calendar event and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Calendar event",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Calendar event",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-daily-report-calendar-event-google-calendar.json",
    "title": "Create daily report from Calendar event and send to Google Calendar",
    "description": "Automate the task to create daily report originating from Calendar event and then send the result to Google Calendar. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Calendar event",
      "Google Calendar",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Calendar event",
    "output": "Data sent to Google Calendar",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-daily-report-calendar-event-notion.json",
    "title": "Create daily report from Calendar event and send to Notion",
    "description": "Automate the task to create daily report originating from Calendar event and then send the result to Notion. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Calendar event",
      "Notion",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Calendar event",
    "output": "Data sent to Notion",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "create-daily-report-calendar-event-todoist.json",
    "title": "Create daily report from Calendar event and send to Todoist",
    "description": "Automate the task to create daily report originating from Calendar event and then send the result to Todoist. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Personal Productivity",
    "tools_used": [
      "Calendar event",
      "Todoist",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Calendar event",
    "output": "Data sent to Todoist",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "qualify-lead-property-listing-email.json",
    "title": "Qualify lead from Property listing and send to Email",
    "description": "Automate the task to qualify lead originating from Property listing and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-property-listing-google-sheets.json",
    "title": "Qualify lead from Property listing and send to Google Sheets",
    "description": "Automate the task to qualify lead originating from Property listing and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-property-listing-crm.json",
    "title": "Qualify lead from Property listing and send to CRM",
    "description": "Automate the task to qualify lead originating from Property listing and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-property-listing-slack.json",
    "title": "Qualify lead from Property listing and send to Slack",
    "description": "Automate the task to qualify lead originating from Property listing and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-property-listing-hospital-system.json",
    "title": "Qualify lead from Property listing and send to Hospital system",
    "description": "Automate the task to qualify lead originating from Property listing and then send the result to Hospital system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Hospital system",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Hospital system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-property-listing-lms.json",
    "title": "Qualify lead from Property listing and send to LMS",
    "description": "Automate the task to qualify lead originating from Property listing and then send the result to LMS. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "LMS",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to LMS",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-property-listing-education-crm.json",
    "title": "Qualify lead from Property listing and send to Education CRM",
    "description": "Automate the task to qualify lead originating from Property listing and then send the result to Education CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Education CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Education CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-crm-property-listing-email.json",
    "title": "Update crm from Property listing and send to Email",
    "description": "Automate the task to update CRM originating from Property listing and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-crm-property-listing-google-sheets.json",
    "title": "Update crm from Property listing and send to Google Sheets",
    "description": "Automate the task to update CRM originating from Property listing and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-crm-property-listing-crm.json",
    "title": "Update crm from Property listing and send to CRM",
    "description": "Automate the task to update CRM originating from Property listing and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-crm-property-listing-slack.json",
    "title": "Update crm from Property listing and send to Slack",
    "description": "Automate the task to update CRM originating from Property listing and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-crm-property-listing-hospital-system.json",
    "title": "Update crm from Property listing and send to Hospital system",
    "description": "Automate the task to update CRM originating from Property listing and then send the result to Hospital system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Hospital system",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Hospital system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-crm-property-listing-lms.json",
    "title": "Update crm from Property listing and send to LMS",
    "description": "Automate the task to update CRM originating from Property listing and then send the result to LMS. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "LMS",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to LMS",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-crm-property-listing-education-crm.json",
    "title": "Update crm from Property listing and send to Education CRM",
    "description": "Automate the task to update CRM originating from Property listing and then send the result to Education CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Education CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Education CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-appointment-property-listing-email.json",
    "title": "Schedule appointment from Property listing and send to Email",
    "description": "Automate the task to schedule appointment originating from Property listing and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-appointment-property-listing-google-sheets.json",
    "title": "Schedule appointment from Property listing and send to Google Sheets",
    "description": "Automate the task to schedule appointment originating from Property listing and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-appointment-property-listing-crm.json",
    "title": "Schedule appointment from Property listing and send to CRM",
    "description": "Automate the task to schedule appointment originating from Property listing and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-appointment-property-listing-slack.json",
    "title": "Schedule appointment from Property listing and send to Slack",
    "description": "Automate the task to schedule appointment originating from Property listing and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-appointment-property-listing-hospital-system.json",
    "title": "Schedule appointment from Property listing and send to Hospital system",
    "description": "Automate the task to schedule appointment originating from Property listing and then send the result to Hospital system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Hospital system",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Hospital system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-appointment-property-listing-lms.json",
    "title": "Schedule appointment from Property listing and send to LMS",
    "description": "Automate the task to schedule appointment originating from Property listing and then send the result to LMS. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "LMS",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to LMS",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-appointment-property-listing-education-crm.json",
    "title": "Schedule appointment from Property listing and send to Education CRM",
    "description": "Automate the task to schedule appointment originating from Property listing and then send the result to Education CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Education CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Education CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-staff-property-listing-email.json",
    "title": "Notify staff from Property listing and send to Email",
    "description": "Automate the task to notify staff originating from Property listing and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-staff-property-listing-google-sheets.json",
    "title": "Notify staff from Property listing and send to Google Sheets",
    "description": "Automate the task to notify staff originating from Property listing and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-staff-property-listing-crm.json",
    "title": "Notify staff from Property listing and send to CRM",
    "description": "Automate the task to notify staff originating from Property listing and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-staff-property-listing-slack.json",
    "title": "Notify staff from Property listing and send to Slack",
    "description": "Automate the task to notify staff originating from Property listing and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-staff-property-listing-hospital-system.json",
    "title": "Notify staff from Property listing and send to Hospital system",
    "description": "Automate the task to notify staff originating from Property listing and then send the result to Hospital system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Hospital system",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Hospital system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-staff-property-listing-lms.json",
    "title": "Notify staff from Property listing and send to LMS",
    "description": "Automate the task to notify staff originating from Property listing and then send the result to LMS. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "LMS",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to LMS",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-staff-property-listing-education-crm.json",
    "title": "Notify staff from Property listing and send to Education CRM",
    "description": "Automate the task to notify staff originating from Property listing and then send the result to Education CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Education CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Education CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-admission-letter-property-listing-email.json",
    "title": "Generate admission letter from Property listing and send to Email",
    "description": "Automate the task to generate admission letter originating from Property listing and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-admission-letter-property-listing-google-sheets.json",
    "title": "Generate admission letter from Property listing and send to Google Sheets",
    "description": "Automate the task to generate admission letter originating from Property listing and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-admission-letter-property-listing-crm.json",
    "title": "Generate admission letter from Property listing and send to CRM",
    "description": "Automate the task to generate admission letter originating from Property listing and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-admission-letter-property-listing-slack.json",
    "title": "Generate admission letter from Property listing and send to Slack",
    "description": "Automate the task to generate admission letter originating from Property listing and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-admission-letter-property-listing-hospital-system.json",
    "title": "Generate admission letter from Property listing and send to Hospital system",
    "description": "Automate the task to generate admission letter originating from Property listing and then send the result to Hospital system. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Hospital system",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Hospital system",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-admission-letter-property-listing-lms.json",
    "title": "Generate admission letter from Property listing and send to LMS",
    "description": "Automate the task to generate admission letter originating from Property listing and then send the result to LMS. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "LMS",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to LMS",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-admission-letter-property-listing-education-crm.json",
    "title": "Generate admission letter from Property listing and send to Education CRM",
    "description": "Automate the task to generate admission letter originating from Property listing and then send the result to Education CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Education CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Education CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-health-data-property-listing-email.json",
    "title": "Analyze health data from Property listing and send to Email",
    "description": "Automate the task to analyze health data originating from Property listing and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-health-data-property-listing-google-sheets.json",
    "title": "Analyze health data from Property listing and send to Google Sheets",
    "description": "Automate the task to analyze health data originating from Property listing and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-health-data-property-listing-crm.json",
    "title": "Analyze health data from Property listing and send to CRM",
    "description": "Automate the task to analyze health data originating from Property listing and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-health-data-property-listing-slack.json",
    "title": "Analyze health data from Property listing and send to Slack",
    "description": "Automate the task to analyze health data originating from Property listing and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-health-data-property-listing-hospital-system.json",
    "title": "Analyze health data from Property listing and send to Hospital system",
    "description": "Automate the task to analyze health data originating from Property listing and then send the result to Hospital system. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Hospital system",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Hospital system",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-health-data-property-listing-lms.json",
    "title": "Analyze health data from Property listing and send to LMS",
    "description": "Automate the task to analyze health data originating from Property listing and then send the result to LMS. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "LMS",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to LMS",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-health-data-property-listing-education-crm.json",
    "title": "Analyze health data from Property listing and send to Education CRM",
    "description": "Automate the task to analyze health data originating from Property listing and then send the result to Education CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Education CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Education CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "send-orientation-info-property-listing-email.json",
    "title": "Send orientation info from Property listing and send to Email",
    "description": "Automate the task to send orientation info originating from Property listing and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-orientation-info-property-listing-google-sheets.json",
    "title": "Send orientation info from Property listing and send to Google Sheets",
    "description": "Automate the task to send orientation info originating from Property listing and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-orientation-info-property-listing-crm.json",
    "title": "Send orientation info from Property listing and send to CRM",
    "description": "Automate the task to send orientation info originating from Property listing and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-orientation-info-property-listing-slack.json",
    "title": "Send orientation info from Property listing and send to Slack",
    "description": "Automate the task to send orientation info originating from Property listing and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-orientation-info-property-listing-hospital-system.json",
    "title": "Send orientation info from Property listing and send to Hospital system",
    "description": "Automate the task to send orientation info originating from Property listing and then send the result to Hospital system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Hospital system",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Hospital system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-orientation-info-property-listing-lms.json",
    "title": "Send orientation info from Property listing and send to LMS",
    "description": "Automate the task to send orientation info originating from Property listing and then send the result to LMS. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "LMS",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to LMS",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-orientation-info-property-listing-education-crm.json",
    "title": "Send orientation info from Property listing and send to Education CRM",
    "description": "Automate the task to send orientation info originating from Property listing and then send the result to Education CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Property listing",
      "Education CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Property listing",
    "output": "Data sent to Education CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-patient-record-email.json",
    "title": "Qualify lead from Patient record and send to Email",
    "description": "Automate the task to qualify lead originating from Patient record and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-patient-record-google-sheets.json",
    "title": "Qualify lead from Patient record and send to Google Sheets",
    "description": "Automate the task to qualify lead originating from Patient record and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-patient-record-crm.json",
    "title": "Qualify lead from Patient record and send to CRM",
    "description": "Automate the task to qualify lead originating from Patient record and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-patient-record-slack.json",
    "title": "Qualify lead from Patient record and send to Slack",
    "description": "Automate the task to qualify lead originating from Patient record and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-patient-record-hospital-system.json",
    "title": "Qualify lead from Patient record and send to Hospital system",
    "description": "Automate the task to qualify lead originating from Patient record and then send the result to Hospital system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Hospital system",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Hospital system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-patient-record-lms.json",
    "title": "Qualify lead from Patient record and send to LMS",
    "description": "Automate the task to qualify lead originating from Patient record and then send the result to LMS. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "LMS",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to LMS",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-patient-record-education-crm.json",
    "title": "Qualify lead from Patient record and send to Education CRM",
    "description": "Automate the task to qualify lead originating from Patient record and then send the result to Education CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Education CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Education CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-crm-patient-record-email.json",
    "title": "Update crm from Patient record and send to Email",
    "description": "Automate the task to update CRM originating from Patient record and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-crm-patient-record-google-sheets.json",
    "title": "Update crm from Patient record and send to Google Sheets",
    "description": "Automate the task to update CRM originating from Patient record and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-crm-patient-record-crm.json",
    "title": "Update crm from Patient record and send to CRM",
    "description": "Automate the task to update CRM originating from Patient record and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-crm-patient-record-slack.json",
    "title": "Update crm from Patient record and send to Slack",
    "description": "Automate the task to update CRM originating from Patient record and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-crm-patient-record-hospital-system.json",
    "title": "Update crm from Patient record and send to Hospital system",
    "description": "Automate the task to update CRM originating from Patient record and then send the result to Hospital system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Hospital system",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Hospital system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-crm-patient-record-lms.json",
    "title": "Update crm from Patient record and send to LMS",
    "description": "Automate the task to update CRM originating from Patient record and then send the result to LMS. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "LMS",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to LMS",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-crm-patient-record-education-crm.json",
    "title": "Update crm from Patient record and send to Education CRM",
    "description": "Automate the task to update CRM originating from Patient record and then send the result to Education CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Education CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Education CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-appointment-patient-record-email.json",
    "title": "Schedule appointment from Patient record and send to Email",
    "description": "Automate the task to schedule appointment originating from Patient record and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-appointment-patient-record-google-sheets.json",
    "title": "Schedule appointment from Patient record and send to Google Sheets",
    "description": "Automate the task to schedule appointment originating from Patient record and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-appointment-patient-record-crm.json",
    "title": "Schedule appointment from Patient record and send to CRM",
    "description": "Automate the task to schedule appointment originating from Patient record and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-appointment-patient-record-slack.json",
    "title": "Schedule appointment from Patient record and send to Slack",
    "description": "Automate the task to schedule appointment originating from Patient record and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-appointment-patient-record-hospital-system.json",
    "title": "Schedule appointment from Patient record and send to Hospital system",
    "description": "Automate the task to schedule appointment originating from Patient record and then send the result to Hospital system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Hospital system",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Hospital system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-appointment-patient-record-lms.json",
    "title": "Schedule appointment from Patient record and send to LMS",
    "description": "Automate the task to schedule appointment originating from Patient record and then send the result to LMS. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "LMS",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to LMS",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "schedule-appointment-patient-record-education-crm.json",
    "title": "Schedule appointment from Patient record and send to Education CRM",
    "description": "Automate the task to schedule appointment originating from Patient record and then send the result to Education CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Education CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Education CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-staff-patient-record-email.json",
    "title": "Notify staff from Patient record and send to Email",
    "description": "Automate the task to notify staff originating from Patient record and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-staff-patient-record-google-sheets.json",
    "title": "Notify staff from Patient record and send to Google Sheets",
    "description": "Automate the task to notify staff originating from Patient record and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-staff-patient-record-crm.json",
    "title": "Notify staff from Patient record and send to CRM",
    "description": "Automate the task to notify staff originating from Patient record and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-staff-patient-record-slack.json",
    "title": "Notify staff from Patient record and send to Slack",
    "description": "Automate the task to notify staff originating from Patient record and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-staff-patient-record-hospital-system.json",
    "title": "Notify staff from Patient record and send to Hospital system",
    "description": "Automate the task to notify staff originating from Patient record and then send the result to Hospital system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Hospital system",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Hospital system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-staff-patient-record-lms.json",
    "title": "Notify staff from Patient record and send to LMS",
    "description": "Automate the task to notify staff originating from Patient record and then send the result to LMS. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "LMS",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to LMS",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-staff-patient-record-education-crm.json",
    "title": "Notify staff from Patient record and send to Education CRM",
    "description": "Automate the task to notify staff originating from Patient record and then send the result to Education CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Education CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Education CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-admission-letter-patient-record-email.json",
    "title": "Generate admission letter from Patient record and send to Email",
    "description": "Automate the task to generate admission letter originating from Patient record and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-admission-letter-patient-record-google-sheets.json",
    "title": "Generate admission letter from Patient record and send to Google Sheets",
    "description": "Automate the task to generate admission letter originating from Patient record and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-admission-letter-patient-record-crm.json",
    "title": "Generate admission letter from Patient record and send to CRM",
    "description": "Automate the task to generate admission letter originating from Patient record and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-admission-letter-patient-record-slack.json",
    "title": "Generate admission letter from Patient record and send to Slack",
    "description": "Automate the task to generate admission letter originating from Patient record and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-admission-letter-patient-record-hospital-system.json",
    "title": "Generate admission letter from Patient record and send to Hospital system",
    "description": "Automate the task to generate admission letter originating from Patient record and then send the result to Hospital system. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Hospital system",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Hospital system",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-admission-letter-patient-record-lms.json",
    "title": "Generate admission letter from Patient record and send to LMS",
    "description": "Automate the task to generate admission letter originating from Patient record and then send the result to LMS. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "LMS",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to LMS",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "generate-admission-letter-patient-record-education-crm.json",
    "title": "Generate admission letter from Patient record and send to Education CRM",
    "description": "Automate the task to generate admission letter originating from Patient record and then send the result to Education CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Education CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Education CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-health-data-patient-record-email.json",
    "title": "Analyze health data from Patient record and send to Email",
    "description": "Automate the task to analyze health data originating from Patient record and then send the result to Email. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Email",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-health-data-patient-record-google-sheets.json",
    "title": "Analyze health data from Patient record and send to Google Sheets",
    "description": "Automate the task to analyze health data originating from Patient record and then send the result to Google Sheets. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Google Sheets",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-health-data-patient-record-crm.json",
    "title": "Analyze health data from Patient record and send to CRM",
    "description": "Automate the task to analyze health data originating from Patient record and then send the result to CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-health-data-patient-record-slack.json",
    "title": "Analyze health data from Patient record and send to Slack",
    "description": "Automate the task to analyze health data originating from Patient record and then send the result to Slack. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Slack",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-health-data-patient-record-hospital-system.json",
    "title": "Analyze health data from Patient record and send to Hospital system",
    "description": "Automate the task to analyze health data originating from Patient record and then send the result to Hospital system. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Hospital system",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Hospital system",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-health-data-patient-record-lms.json",
    "title": "Analyze health data from Patient record and send to LMS",
    "description": "Automate the task to analyze health data originating from Patient record and then send the result to LMS. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "LMS",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to LMS",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "analyze-health-data-patient-record-education-crm.json",
    "title": "Analyze health data from Patient record and send to Education CRM",
    "description": "Automate the task to analyze health data originating from Patient record and then send the result to Education CRM. This template uses AI to process the data and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Education CRM",
      "OpenAI",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Education CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": true
  },
  {
    "filename": "send-orientation-info-patient-record-email.json",
    "title": "Send orientation info from Patient record and send to Email",
    "description": "Automate the task to send orientation info originating from Patient record and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-orientation-info-patient-record-google-sheets.json",
    "title": "Send orientation info from Patient record and send to Google Sheets",
    "description": "Automate the task to send orientation info originating from Patient record and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-orientation-info-patient-record-crm.json",
    "title": "Send orientation info from Patient record and send to CRM",
    "description": "Automate the task to send orientation info originating from Patient record and then send the result to CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-orientation-info-patient-record-slack.json",
    "title": "Send orientation info from Patient record and send to Slack",
    "description": "Automate the task to send orientation info originating from Patient record and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-orientation-info-patient-record-hospital-system.json",
    "title": "Send orientation info from Patient record and send to Hospital system",
    "description": "Automate the task to send orientation info originating from Patient record and then send the result to Hospital system. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Hospital system",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Hospital system",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-orientation-info-patient-record-lms.json",
    "title": "Send orientation info from Patient record and send to LMS",
    "description": "Automate the task to send orientation info originating from Patient record and then send the result to LMS. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "LMS",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to LMS",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "send-orientation-info-patient-record-education-crm.json",
    "title": "Send orientation info from Patient record and send to Education CRM",
    "description": "Automate the task to send orientation info originating from Patient record and then send the result to Education CRM. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Patient record",
      "Education CRM",
      "Slack"
    ],
    "trigger": "Incoming event from Patient record",
    "output": "Data sent to Education CRM",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-student-enrollment-email.json",
    "title": "Qualify lead from Student enrollment and send to Email",
    "description": "Automate the task to qualify lead originating from Student enrollment and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Student enrollment",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Student enrollment",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "qualify-lead-student-enrollment-google-sheets.json",
    "title": "Qualify lead from Student enrollment and send to Google Sheets",
    "description": "Automate the task to qualify lead originating from Student enrollment and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "Real Estate, Health, Education",
    "tools_used": [
      "Student enrollment",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Student enrollment",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "fetch-data-external-api-database.json",
    "title": "Fetch data from External API and send to Database",
    "description": "Automate the task to fetch data originating from External API and then send the result to Database. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Database",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Database",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "fetch-data-external-api-google-sheets.json",
    "title": "Fetch data from External API and send to Google Sheets",
    "description": "Automate the task to fetch data originating from External API and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "fetch-data-external-api-email.json",
    "title": "Fetch data from External API and send to Email",
    "description": "Automate the task to fetch data originating from External API and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "fetch-data-external-api-slack.json",
    "title": "Fetch data from External API and send to Slack",
    "description": "Automate the task to fetch data originating from External API and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "fetch-data-external-api-data-warehouse.json",
    "title": "Fetch data from External API and send to Data warehouse",
    "description": "Automate the task to fetch data originating from External API and then send the result to Data warehouse. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Data warehouse",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Data warehouse",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "parse-json-external-api-database.json",
    "title": "Parse json from External API and send to Database",
    "description": "Automate the task to parse JSON originating from External API and then send the result to Database. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Database",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Database",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "parse-json-external-api-google-sheets.json",
    "title": "Parse json from External API and send to Google Sheets",
    "description": "Automate the task to parse JSON originating from External API and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "parse-json-external-api-email.json",
    "title": "Parse json from External API and send to Email",
    "description": "Automate the task to parse JSON originating from External API and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "parse-json-external-api-slack.json",
    "title": "Parse json from External API and send to Slack",
    "description": "Automate the task to parse JSON originating from External API and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "parse-json-external-api-data-warehouse.json",
    "title": "Parse json from External API and send to Data warehouse",
    "description": "Automate the task to parse JSON originating from External API and then send the result to Data warehouse. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Data warehouse",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Data warehouse",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "extract-html-elements-external-api-database.json",
    "title": "Extract html elements from External API and send to Database",
    "description": "Automate the task to extract HTML elements originating from External API and then send the result to Database. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Database",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Database",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "extract-html-elements-external-api-google-sheets.json",
    "title": "Extract html elements from External API and send to Google Sheets",
    "description": "Automate the task to extract HTML elements originating from External API and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "extract-html-elements-external-api-email.json",
    "title": "Extract html elements from External API and send to Email",
    "description": "Automate the task to extract HTML elements originating from External API and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "extract-html-elements-external-api-slack.json",
    "title": "Extract html elements from External API and send to Slack",
    "description": "Automate the task to extract HTML elements originating from External API and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "extract-html-elements-external-api-data-warehouse.json",
    "title": "Extract html elements from External API and send to Data warehouse",
    "description": "Automate the task to extract HTML elements originating from External API and then send the result to Data warehouse. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Data warehouse",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Data warehouse",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-database-external-api-database.json",
    "title": "Update database from External API and send to Database",
    "description": "Automate the task to update database originating from External API and then send the result to Database. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Database",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Database",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-database-external-api-google-sheets.json",
    "title": "Update database from External API and send to Google Sheets",
    "description": "Automate the task to update database originating from External API and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-database-external-api-email.json",
    "title": "Update database from External API and send to Email",
    "description": "Automate the task to update database originating from External API and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-database-external-api-slack.json",
    "title": "Update database from External API and send to Slack",
    "description": "Automate the task to update database originating from External API and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "update-database-external-api-data-warehouse.json",
    "title": "Update database from External API and send to Data warehouse",
    "description": "Automate the task to update database originating from External API and then send the result to Data warehouse. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Data warehouse",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Data warehouse",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-external-api-database.json",
    "title": "Notify team from External API and send to Database",
    "description": "Automate the task to notify team originating from External API and then send the result to Database. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Database",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Database",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-external-api-google-sheets.json",
    "title": "Notify team from External API and send to Google Sheets",
    "description": "Automate the task to notify team originating from External API and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-external-api-email.json",
    "title": "Notify team from External API and send to Email",
    "description": "Automate the task to notify team originating from External API and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-external-api-slack.json",
    "title": "Notify team from External API and send to Slack",
    "description": "Automate the task to notify team originating from External API and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "notify-team-external-api-data-warehouse.json",
    "title": "Notify team from External API and send to Data warehouse",
    "description": "Automate the task to notify team originating from External API and then send the result to Data warehouse. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Data warehouse",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Data warehouse",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-report-external-api-database.json",
    "title": "Generate report from External API and send to Database",
    "description": "Automate the task to generate report originating from External API and then send the result to Database. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Database",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Database",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-report-external-api-google-sheets.json",
    "title": "Generate report from External API and send to Google Sheets",
    "description": "Automate the task to generate report originating from External API and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-report-external-api-email.json",
    "title": "Generate report from External API and send to Email",
    "description": "Automate the task to generate report originating from External API and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-report-external-api-slack.json",
    "title": "Generate report from External API and send to Slack",
    "description": "Automate the task to generate report originating from External API and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "generate-report-external-api-data-warehouse.json",
    "title": "Generate report from External API and send to Data warehouse",
    "description": "Automate the task to generate report originating from External API and then send the result to Data warehouse. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Data warehouse",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Data warehouse",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "store-in-sheet-external-api-database.json",
    "title": "Store in sheet from External API and send to Database",
    "description": "Automate the task to store in sheet originating from External API and then send the result to Database. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Database",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Database",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "store-in-sheet-external-api-google-sheets.json",
    "title": "Store in sheet from External API and send to Google Sheets",
    "description": "Automate the task to store in sheet originating from External API and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "store-in-sheet-external-api-email.json",
    "title": "Store in sheet from External API and send to Email",
    "description": "Automate the task to store in sheet originating from External API and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "store-in-sheet-external-api-slack.json",
    "title": "Store in sheet from External API and send to Slack",
    "description": "Automate the task to store in sheet originating from External API and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "store-in-sheet-external-api-data-warehouse.json",
    "title": "Store in sheet from External API and send to Data warehouse",
    "description": "Automate the task to store in sheet originating from External API and then send the result to Data warehouse. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "External API",
      "Data warehouse",
      "Slack"
    ],
    "trigger": "Incoming event from External API",
    "output": "Data sent to Data warehouse",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "fetch-data-website-url-database.json",
    "title": "Fetch data from Website URL and send to Database",
    "description": "Automate the task to fetch data originating from Website URL and then send the result to Database. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "Website URL",
      "Database",
      "Slack"
    ],
    "trigger": "Incoming event from Website URL",
    "output": "Data sent to Database",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "fetch-data-website-url-google-sheets.json",
    "title": "Fetch data from Website URL and send to Google Sheets",
    "description": "Automate the task to fetch data originating from Website URL and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "Website URL",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Website URL",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "fetch-data-website-url-email.json",
    "title": "Fetch data from Website URL and send to Email",
    "description": "Automate the task to fetch data originating from Website URL and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "Website URL",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Website URL",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "fetch-data-website-url-slack.json",
    "title": "Fetch data from Website URL and send to Slack",
    "description": "Automate the task to fetch data originating from Website URL and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "Website URL",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Website URL",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "fetch-data-website-url-data-warehouse.json",
    "title": "Fetch data from Website URL and send to Data warehouse",
    "description": "Automate the task to fetch data originating from Website URL and then send the result to Data warehouse. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "Website URL",
      "Data warehouse",
      "Slack"
    ],
    "trigger": "Incoming event from Website URL",
    "output": "Data sent to Data warehouse",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "parse-json-website-url-database.json",
    "title": "Parse json from Website URL and send to Database",
    "description": "Automate the task to parse JSON originating from Website URL and then send the result to Database. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "Website URL",
      "Database",
      "Slack"
    ],
    "trigger": "Incoming event from Website URL",
    "output": "Data sent to Database",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "parse-json-website-url-google-sheets.json",
    "title": "Parse json from Website URL and send to Google Sheets",
    "description": "Automate the task to parse JSON originating from Website URL and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "Website URL",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Website URL",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "parse-json-website-url-email.json",
    "title": "Parse json from Website URL and send to Email",
    "description": "Automate the task to parse JSON originating from Website URL and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "Website URL",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Website URL",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "parse-json-website-url-slack.json",
    "title": "Parse json from Website URL and send to Slack",
    "description": "Automate the task to parse JSON originating from Website URL and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "Website URL",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Website URL",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "parse-json-website-url-data-warehouse.json",
    "title": "Parse json from Website URL and send to Data warehouse",
    "description": "Automate the task to parse JSON originating from Website URL and then send the result to Data warehouse. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "Website URL",
      "Data warehouse",
      "Slack"
    ],
    "trigger": "Incoming event from Website URL",
    "output": "Data sent to Data warehouse",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "extract-html-elements-website-url-database.json",
    "title": "Extract html elements from Website URL and send to Database",
    "description": "Automate the task to extract HTML elements originating from Website URL and then send the result to Database. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "Website URL",
      "Database",
      "Slack"
    ],
    "trigger": "Incoming event from Website URL",
    "output": "Data sent to Database",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "extract-html-elements-website-url-google-sheets.json",
    "title": "Extract html elements from Website URL and send to Google Sheets",
    "description": "Automate the task to extract HTML elements originating from Website URL and then send the result to Google Sheets. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "Website URL",
      "Google Sheets",
      "Slack"
    ],
    "trigger": "Incoming event from Website URL",
    "output": "Data sent to Google Sheets",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "extract-html-elements-website-url-email.json",
    "title": "Extract html elements from Website URL and send to Email",
    "description": "Automate the task to extract HTML elements originating from Website URL and then send the result to Email. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "Website URL",
      "Email",
      "Slack"
    ],
    "trigger": "Incoming event from Website URL",
    "output": "Data sent to Email",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "extract-html-elements-website-url-slack.json",
    "title": "Extract html elements from Website URL and send to Slack",
    "description": "Automate the task to extract HTML elements originating from Website URL and then send the result to Slack. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "Website URL",
      "Slack",
      "Slack"
    ],
    "trigger": "Incoming event from Website URL",
    "output": "Data sent to Slack",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  },
  {
    "filename": "extract-html-elements-website-url-data-warehouse.json",
    "title": "Extract html elements from Website URL and send to Data warehouse",
    "description": "Automate the task to extract HTML elements originating from Website URL and then send the result to Data warehouse. This template uses standard data processing steps and includes error notifications via Slack.",
    "category": "API/Data Scraping Workflows",
    "tools_used": [
      "Website URL",
      "Data warehouse",
      "Slack"
    ],
    "trigger": "Incoming event from Website URL",
    "output": "Data sent to Data warehouse",
    "error_handling": "Slack notification on failure",
    "ai_used": false
  }
]