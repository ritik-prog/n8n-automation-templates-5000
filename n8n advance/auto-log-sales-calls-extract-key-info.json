{
  "name": "auto-log-sales-calls-and-extract-key-info",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "sales-call-webhook"
      },
      "id": "cl1",
      "name": "Telephony Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        100,
        320
      ]
    },
    {
      "parameters": {
        "functionCode": "\nconst b = $json.body || {};\nreturn [{ json: { recordingUrl: b.recordingUrl, from: b.from, to: b.to, durationSec: b.durationSec||0, contactEmail: b.contactEmail||'' } }];\n"
      },
      "id": "cl2",
      "name": "Extract Payload",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        320,
        320
      ]
    },
    {
      "parameters": {
        "url": "https://api.openai.com/v1/audio/transcriptions",
        "authentication": "none",
        "options": {
          "headersUi": {
            "parameter": [
              {
                "name": "Authorization",
                "value": "Bearer {{$credentials.openAiApiToken}}"
              }
            ]
          }
        },
        "jsonParameters": true,
        "optionsJson": "={{ { model: 'whisper-1', file_url: $json.recordingUrl } }}"
      },
      "id": "cl3",
      "name": "Transcribe (OpenAI Whisper via HTTP)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        540,
        320
      ]
    },
    {
      "parameters": {
        "model": "gpt-4",
        "temperature": 0.2,
        "messages": [
          {
            "role": "system",
            "content": "Extract key info from the call transcript. Return JSON {summary, sentiment:'Positive|Neutral|Negative', objections:[...], nextSteps:[...], decisionMaker, followUpDate?}."
          },
          {
            "role": "user",
            "content": "Transcript: {{$json.text || $json.transcript || $json}}\\nCaller From: {{$prevNode['Extract Payload'].json.from}} To: {{$prevNode['Extract Payload'].json.to}}"
          }
        ]
      },
      "id": "cl4",
      "name": "Analyze Call (GPT-4)",
      "type": "n8n-nodes-base.openai",
      "typeVersion": 1,
      "position": [
        760,
        320
      ],
      "credentials": {
        "openAiApi": {
          "id": "openai_credential",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "let info; try{info=JSON.parse($json.choices[0].message.content)}catch(e){info={summary:'',sentiment:'Neutral',objections:[],nextSteps:[]}}; return [{json:info}];"
      },
      "id": "cl5",
      "name": "Parse Insights",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        980,
        320
      ]
    },
    {
      "parameters": {
        "resource": "note",
        "operation": "create",
        "additionalFields": {
          "propertiesUi": {
            "propertyValues": [
              {
                "property": "hs_timestamp",
                "value": "={{$now}}"
              },
              {
                "property": "hs_note_body",
                "value": "={{'Call Summary: '+$json.summary+'\\nSentiment: '+$json.sentiment+'\\nObjections: '+($json.objections||[]).join(', ')+'\\nNext Steps: '+($json.nextSteps||[]).join('; ')}}"
              }
            ]
          }
        }
      },
      "id": "cl6",
      "name": "Log Note in HubSpot",
      "type": "n8n-nodes-base.hubspot",
      "typeVersion": 1,
      "position": [
        1200,
        320
      ],
      "credentials": {
        "hubspotApi": {
          "id": "hubspot_api_cred",
          "name": "HubSpot API"
        }
      }
    },
    {
      "parameters": {
        "resource": "task",
        "operation": "create",
        "additionalFields": {
          "propertiesUi": {
            "propertyValues": [
              {
                "property": "hs_task_subject",
                "value": "={{'Follow-up: '+($json.nextSteps?.[0] || 'Call')}}"
              },
              {
                "property": "hs_task_priority",
                "value": "HIGH"
              },
              {
                "property": "hs_task_status",
                "value": "WAITING"
              },
              {
                "property": "hs_timestamp",
                "value": "={{$now}}"
              },
              {
                "property": "hs_task_body",
                "value": "={{'Auto-created from call. Next steps: '+($json.nextSteps||[]).join('; ')}}"
              }
            ]
          }
        }
      },
      "id": "cl7",
      "name": "Create Follow-up Task",
      "type": "n8n-nodes-base.hubspot",
      "typeVersion": 1,
      "position": [
        1420,
        320
      ],
      "credentials": {
        "hubspotApi": {
          "id": "hubspot_api_cred",
          "name": "HubSpot API"
        }
      }
    }
  ],
  "connections": {
    "Telephony Webhook": {
      "main": [
        [
          {
            "node": "Extract Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Payload": {
      "main": [
        [
          {
            "node": "Transcribe (OpenAI Whisper via HTTP)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe (OpenAI Whisper via HTTP)": {
      "main": [
        [
          {
            "node": "Analyze Call (GPT-4)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze Call (GPT-4)": {
      "main": [
        [
          {
            "node": "Parse Insights",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Insights": {
      "main": [
        [
          {
            "node": "Log Note in HubSpot",
            "type": "main",
            "index": 0
          },
          {
            "node": "Create Follow-up Task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false
}