{
  "name": "create-automated-renewal-reminders",
  "nodes": [
    {
      "parameters": {
        "cronExpression": "0 8 * * *"
      },
      "id": "r1",
      "name": "Daily 08:00 UTC",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        100,
        300
      ]
    },
    {
      "parameters": {
        "operation": "getAll",
        "returnAll": true
      },
      "id": "r2",
      "name": "Fetch Deals (HubSpot)",
      "type": "n8n-nodes-base.hubspot",
      "typeVersion": 1,
      "position": [
        320,
        300
      ],
      "credentials": {
        "hubspotApi": {
          "id": "hubspot_api_cred",
          "name": "HubSpot API"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "\nconst deals = Array.isArray($json)?$json:[$json];\nconst today = new Date();\nconst out = [];\nfor (const d of deals) {\n  const renewal = d.properties?.renewal_date ? new Date(d.properties.renewal_date) : (d.properties?.closedate ? new Date(d.properties.closedate): null);\n  if (!renewal) continue;\n  const days = Math.floor((renewal - today)/(24*3600*1000));\n  const thresholds = [90,60,30,7,1];\n  if (thresholds.includes(days)) {\n    out.push({ json: { dealId: d.id, name: d.properties?.dealname, amount: d.properties?.amount, ownerId: d.properties?.hubspot_owner_id, renewalDate: renewal.toISOString(), daysRemaining: days, companyId: d.properties?.associatedcompanyid } });\n  }\n}\nreturn out;\n"
      },
      "id": "r3",
      "name": "Filter by Thresholds",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        540,
        300
      ]
    },
    {
      "parameters": {
        "model": "gpt-4",
        "temperature": 0.2,
        "messages": [
          {
            "role": "system",
            "content": "Draft a concise renewal email. Return JSON {subject, body}."
          },
          {
            "role": "user",
            "content": "Deal {{$json.name}} renews in {{$json.daysRemaining}} days ({{$json.renewalDate}}). Amount {{$json.amount}}. Provide polite, value-focused email."
          }
        ]
      },
      "id": "r4",
      "name": "Draft Email (GPT-4)",
      "type": "n8n-nodes-base.openai",
      "typeVersion": 1,
      "position": [
        760,
        300
      ],
      "credentials": {
        "openAiApi": {
          "id": "openai_credential",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "let m;try{m=JSON.parse($json.choices[0].message.content)}catch(e){m={subject:'Renewal Reminder',body:'Hello, just a reminder about your upcoming renewal.'}};return [{json:m}];"
      },
      "id": "r5",
      "name": "Parse Email JSON",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        980,
        300
      ]
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "send",
        "fromEmail": "renewals@yourcompany.com",
        "toEmail": "={{'owner+'+$prevNode['Filter by Thresholds'].json.ownerId+'@yourcompany.com'}}",
        "subject": "={{$json.subject}}",
        "text": "={{$json.body}}"
      },
      "id": "r6",
      "name": "Send Reminder (SMTP)",
      "type": "n8n-nodes-base.smtp",
      "typeVersion": 1,
      "position": [
        1200,
        300
      ],
      "credentials": {
        "smtp": {
          "id": "smtp_cred",
          "name": "SMTP"
        }
      }
    },
    {
      "parameters": {
        "resource": "task",
        "operation": "create",
        "additionalFields": {
          "propertiesUi": {
            "propertyValues": [
              {
                "property": "hs_task_subject",
                "value": "={{'Renewal in '+$prevNode['Filter by Thresholds'].json.daysRemaining+' days: '+$prevNode['Filter by Thresholds'].json.name}}"
              },
              {
                "property": "hs_task_priority",
                "value": "HIGH"
              },
              {
                "property": "hs_task_status",
                "value": "WAITING"
              },
              {
                "property": "hs_timestamp",
                "value": "={{$now}}"
              },
              {
                "property": "associatedcompanyid",
                "value": "={{$prevNode['Filter by Thresholds'].json.companyId}}"
              }
            ]
          }
        }
      },
      "id": "r7",
      "name": "Create Owner Task",
      "type": "n8n-nodes-base.hubspot",
      "typeVersion": 1,
      "position": [
        1420,
        300
      ],
      "credentials": {
        "hubspotApi": {
          "id": "hubspot_api_cred",
          "name": "HubSpot API"
        }
      }
    },
    {
      "parameters": {
        "channel": "#renewals",
        "text": "Renewal reminder sent for {{$prevNode['Filter by Thresholds'].json.name}} ({{$prevNode['Filter by Thresholds'].json.daysRemaining}} days left)."
      },
      "id": "r8",
      "name": "Slack Notify",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 1,
      "position": [
        1640,
        300
      ]
    }
  ],
  "connections": {
    "Daily 08:00 UTC": {
      "main": [
        [
          {
            "node": "Fetch Deals (HubSpot)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Deals (HubSpot)": {
      "main": [
        [
          {
            "node": "Filter by Thresholds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter by Thresholds": {
      "main": [
        [
          {
            "node": "Draft Email (GPT-4)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Draft Email (GPT-4)": {
      "main": [
        [
          {
            "node": "Parse Email JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Email JSON": {
      "main": [
        [
          {
            "node": "Send Reminder (SMTP)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Create Owner Task",
            "type": "main",
            "index": 0
          },
          {
            "node": "Slack Notify",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false
}